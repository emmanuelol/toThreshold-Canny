// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _toThreshold_Loop_LineBufferLoop_proc_HH_
#define _toThreshold_Loop_LineBufferLoop_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "toThreshold_Loop_LineBufferLoop_proc_lineBuffer_val_0.h"

namespace ap_rtl {

struct toThreshold_Loop_LineBufferLoop_proc : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > cols;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<8> > absvalueMat_data_stream_0_V_dout;
    sc_in< sc_logic > absvalueMat_data_stream_0_V_empty_n;
    sc_out< sc_logic > absvalueMat_data_stream_0_V_read;
    sc_in< sc_lv<8> > angleMat_data_stream_0_V_dout;
    sc_in< sc_logic > angleMat_data_stream_0_V_empty_n;
    sc_out< sc_logic > angleMat_data_stream_0_V_read;
    sc_out< sc_lv<8> > nmsupressionMat_data_stream_0_V_din;
    sc_in< sc_logic > nmsupressionMat_data_stream_0_V_full_n;
    sc_out< sc_logic > nmsupressionMat_data_stream_0_V_write;


    // Module declarations
    toThreshold_Loop_LineBufferLoop_proc(sc_module_name name);
    SC_HAS_PROCESS(toThreshold_Loop_LineBufferLoop_proc);

    ~toThreshold_Loop_LineBufferLoop_proc();

    sc_trace_file* mVcdFile;

    toThreshold_Loop_LineBufferLoop_proc_lineBuffer_val_0* lineBuffer_val_0_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_29;
    sc_signal< sc_lv<11> > tmp_fu_239_p1;
    sc_signal< bool > ap_sig_bdd_55;
    sc_signal< sc_lv<11> > tmp_16_fu_243_p2;
    sc_signal< sc_lv<11> > tmp_42_fu_249_p1;
    sc_signal< sc_lv<11> > tmp_17_fu_253_p2;
    sc_signal< sc_lv<11> > row_fu_264_p2;
    sc_signal< sc_lv<11> > row_reg_711;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_71;
    sc_signal< sc_lv<1> > tmp_27_fu_270_p2;
    sc_signal< sc_lv<1> > tmp_27_reg_716;
    sc_signal< sc_lv<1> > exitcond4_fu_259_p2;
    sc_signal< sc_lv<1> > tmp_28_fu_275_p2;
    sc_signal< sc_lv<1> > tmp_28_reg_721;
    sc_signal< sc_lv<32> > filterMask_0_0_1_reg_726;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_88;
    sc_signal< sc_lv<11> > col_fu_289_p2;
    sc_signal< sc_lv<11> > col_reg_735;
    sc_signal< sc_lv<1> > tmp_32_fu_295_p2;
    sc_signal< sc_lv<1> > tmp_32_reg_740;
    sc_signal< sc_lv<1> > exitcond3_fu_284_p2;
    sc_signal< sc_lv<13> > lineBuffer_val_0_addr_reg_745;
    sc_signal< sc_lv<1> > tmp_33_fu_315_p2;
    sc_signal< sc_lv<1> > tmp_33_reg_750;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_106;
    sc_signal< bool > ap_sig_bdd_112;
    sc_signal< sc_lv<12> > tmp_36_trn1_cast1_fu_319_p1;
    sc_signal< sc_lv<12> > tmp_36_trn1_cast1_reg_754;
    sc_signal< sc_lv<8> > lineBuffer_val_0_q0;
    sc_signal< sc_lv<13> > lineBuffer_val_0_addr_1_reg_769;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_129;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_137;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_146;
    sc_signal< sc_lv<32> > filterMask_1_1_1_fu_343_p1;
    sc_signal< sc_lv<32> > filterMask_1_1_1_reg_785;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_155;
    sc_signal< bool > ap_sig_bdd_161;
    sc_signal< sc_lv<32> > filterMask_0_1_2_fu_347_p1;
    sc_signal< sc_lv<32> > filterMask_0_1_2_reg_791;
    sc_signal< sc_lv<32> > filterMask_2_1_1_fu_351_p1;
    sc_signal< sc_lv<32> > filterMask_2_1_1_reg_797;
    sc_signal< sc_lv<1> > tmp_52_fu_370_p2;
    sc_signal< sc_lv<1> > tmp_52_reg_803;
    sc_signal< sc_lv<1> > tmp_38_fu_387_p2;
    sc_signal< sc_lv<1> > tmp_38_reg_807;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_bdd_177;
    sc_signal< sc_lv<1> > or_cond_fu_404_p2;
    sc_signal< sc_lv<1> > or_cond_reg_812;
    sc_signal< sc_lv<8> > tmp_47_fu_410_p1;
    sc_signal< sc_lv<8> > tmp_47_reg_817;
    sc_signal< sc_lv<1> > tmp_44_fu_443_p2;
    sc_signal< sc_lv<1> > tmp_44_reg_825;
    sc_signal< sc_lv<1> > tmp_48_fu_478_p2;
    sc_signal< sc_lv<1> > tmp_48_reg_830;
    sc_signal< sc_lv<1> > tmp_50_fu_513_p2;
    sc_signal< sc_lv<1> > tmp_50_reg_835;
    sc_signal< sc_lv<1> > sel_tmp1_fu_525_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_840;
    sc_signal< sc_lv<1> > sel_tmp6_fu_543_p2;
    sc_signal< sc_lv<1> > sel_tmp6_reg_845;
    sc_signal< sc_lv<1> > sel_tmp4_fu_561_p2;
    sc_signal< sc_lv<1> > sel_tmp4_reg_850;
    sc_signal< sc_lv<13> > lineBuffer_val_0_address0;
    sc_signal< sc_logic > lineBuffer_val_0_ce0;
    sc_signal< sc_logic > lineBuffer_val_0_we0;
    sc_signal< sc_lv<8> > lineBuffer_val_0_d0;
    sc_signal< sc_lv<13> > lineBuffer_val_0_address1;
    sc_signal< sc_logic > lineBuffer_val_0_ce1;
    sc_signal< sc_logic > lineBuffer_val_0_we1;
    sc_signal< sc_lv<8> > lineBuffer_val_0_d1;
    sc_signal< sc_lv<8> > lineBuffer_val_0_q1;
    sc_signal< sc_lv<11> > row5_reg_188;
    sc_signal< sc_lv<11> > col6_reg_199;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_221;
    sc_signal< bool > ap_sig_bdd_227;
    sc_signal< sc_lv<8> > gep79_loc_reg_211;
    sc_signal< sc_lv<8> > gep77_loc_reg_222;
    sc_signal< sc_lv<64> > tmp_34_fu_310_p1;
    sc_signal< sc_lv<64> > tmp_36_fu_328_p1;
    sc_signal< sc_lv<64> > tmp_43_fu_333_p1;
    sc_signal< sc_lv<64> > tmp_46_fu_338_p1;
    sc_signal< sc_lv<32> > angle_value_1_fu_88;
    sc_signal< sc_lv<32> > angle_value_fu_355_p1;
    sc_signal< sc_lv<32> > filterMask_2_1_fu_92;
    sc_signal< sc_lv<32> > filterMask_2_0_fu_96;
    sc_signal< sc_lv<32> > filterMask_0_0_fu_100;
    sc_signal< sc_lv<32> > filterMask_0_1_fu_104;
    sc_signal< sc_lv<32> > filterMask_1_1_fu_108;
    sc_signal< sc_lv<32> > filterMask_1_0_fu_112;
    sc_signal< sc_lv<13> > tmp_36_trn1_cast_fu_300_p1;
    sc_signal< sc_lv<13> > p_addr3_fu_304_p2;
    sc_signal< sc_lv<12> > p_addr6_fu_323_p2;
    sc_signal< sc_lv<1> > tmp_51_fu_364_p2;
    sc_signal< sc_lv<1> > tmp_39_fu_393_p2;
    sc_signal< sc_lv<1> > tmp_40_fu_398_p2;
    sc_signal< sc_lv<1> > slt_fu_420_p2;
    sc_signal< sc_lv<1> > slt1_fu_431_p2;
    sc_signal< sc_lv<1> > rev_fu_425_p2;
    sc_signal< sc_lv<1> > rev1_fu_437_p2;
    sc_signal< sc_lv<1> > slt2_fu_455_p2;
    sc_signal< sc_lv<1> > slt3_fu_466_p2;
    sc_signal< sc_lv<1> > rev2_fu_460_p2;
    sc_signal< sc_lv<1> > rev3_fu_472_p2;
    sc_signal< sc_lv<1> > slt4_fu_490_p2;
    sc_signal< sc_lv<1> > slt5_fu_501_p2;
    sc_signal< sc_lv<1> > rev4_fu_495_p2;
    sc_signal< sc_lv<1> > rev5_fu_507_p2;
    sc_signal< sc_lv<1> > tmp_41_fu_414_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_519_p2;
    sc_signal< sc_lv<1> > sel_tmp5_demorgan_fu_531_p2;
    sc_signal< sc_lv<1> > tmp_45_fu_449_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_537_p2;
    sc_signal< sc_lv<1> > sel_tmp12_demorgan_fu_549_p2;
    sc_signal< sc_lv<1> > tmp_49_fu_484_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_555_p2;
    sc_signal< sc_lv<8> > v0_assign_1_s_fu_573_p3;
    sc_signal< sc_lv<8> > v0_assign_2_s_fu_579_p3;
    sc_signal< sc_lv<8> > sel_tmp2_fu_591_p3;
    sc_signal< sc_lv<8> > v0_assign_3_s_fu_585_p3;
    sc_signal< sc_lv<8> > sel_tmp7_fu_598_p3;
    sc_signal< sc_lv<8> > p_v0_assign_fu_567_p3;
    sc_signal< sc_lv<8> > sel_tmp8_fu_605_p3;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_115;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_st1_fsm_0;
    static const sc_lv<10> ap_ST_st2_fsm_1;
    static const sc_lv<10> ap_ST_st3_fsm_2;
    static const sc_lv<10> ap_ST_st4_fsm_3;
    static const sc_lv<10> ap_ST_st5_fsm_4;
    static const sc_lv<10> ap_ST_st6_fsm_5;
    static const sc_lv<10> ap_ST_st7_fsm_6;
    static const sc_lv<10> ap_ST_st8_fsm_7;
    static const sc_lv<10> ap_ST_st9_fsm_8;
    static const sc_lv<10> ap_ST_st10_fsm_9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<13> ap_const_lv13_F00;
    static const sc_lv<12> ap_const_lv12_780;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_5A;
    static const sc_lv<32> ap_const_lv32_87;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_7F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_absvalueMat_data_stream_0_V_read();
    void thread_angleMat_data_stream_0_V_read();
    void thread_angle_value_fu_355_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_106();
    void thread_ap_sig_bdd_112();
    void thread_ap_sig_bdd_115();
    void thread_ap_sig_bdd_129();
    void thread_ap_sig_bdd_137();
    void thread_ap_sig_bdd_146();
    void thread_ap_sig_bdd_155();
    void thread_ap_sig_bdd_161();
    void thread_ap_sig_bdd_177();
    void thread_ap_sig_bdd_221();
    void thread_ap_sig_bdd_227();
    void thread_ap_sig_bdd_29();
    void thread_ap_sig_bdd_55();
    void thread_ap_sig_bdd_71();
    void thread_ap_sig_bdd_88();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_col_fu_289_p2();
    void thread_exitcond3_fu_284_p2();
    void thread_exitcond4_fu_259_p2();
    void thread_filterMask_0_1_2_fu_347_p1();
    void thread_filterMask_1_1_1_fu_343_p1();
    void thread_filterMask_2_1_1_fu_351_p1();
    void thread_lineBuffer_val_0_address0();
    void thread_lineBuffer_val_0_address1();
    void thread_lineBuffer_val_0_ce0();
    void thread_lineBuffer_val_0_ce1();
    void thread_lineBuffer_val_0_d0();
    void thread_lineBuffer_val_0_d1();
    void thread_lineBuffer_val_0_we0();
    void thread_lineBuffer_val_0_we1();
    void thread_nmsupressionMat_data_stream_0_V_din();
    void thread_nmsupressionMat_data_stream_0_V_write();
    void thread_or_cond_fu_404_p2();
    void thread_p_addr3_fu_304_p2();
    void thread_p_addr6_fu_323_p2();
    void thread_p_v0_assign_fu_567_p3();
    void thread_rev1_fu_437_p2();
    void thread_rev2_fu_460_p2();
    void thread_rev3_fu_472_p2();
    void thread_rev4_fu_495_p2();
    void thread_rev5_fu_507_p2();
    void thread_rev_fu_425_p2();
    void thread_row_fu_264_p2();
    void thread_sel_tmp12_demorgan_fu_549_p2();
    void thread_sel_tmp1_fu_525_p2();
    void thread_sel_tmp2_fu_591_p3();
    void thread_sel_tmp3_fu_555_p2();
    void thread_sel_tmp4_fu_561_p2();
    void thread_sel_tmp5_demorgan_fu_531_p2();
    void thread_sel_tmp5_fu_537_p2();
    void thread_sel_tmp6_fu_543_p2();
    void thread_sel_tmp7_fu_598_p3();
    void thread_sel_tmp8_fu_605_p3();
    void thread_sel_tmp_fu_519_p2();
    void thread_slt1_fu_431_p2();
    void thread_slt2_fu_455_p2();
    void thread_slt3_fu_466_p2();
    void thread_slt4_fu_490_p2();
    void thread_slt5_fu_501_p2();
    void thread_slt_fu_420_p2();
    void thread_tmp_16_fu_243_p2();
    void thread_tmp_17_fu_253_p2();
    void thread_tmp_27_fu_270_p2();
    void thread_tmp_28_fu_275_p2();
    void thread_tmp_32_fu_295_p2();
    void thread_tmp_33_fu_315_p2();
    void thread_tmp_34_fu_310_p1();
    void thread_tmp_36_fu_328_p1();
    void thread_tmp_36_trn1_cast1_fu_319_p1();
    void thread_tmp_36_trn1_cast_fu_300_p1();
    void thread_tmp_38_fu_387_p2();
    void thread_tmp_39_fu_393_p2();
    void thread_tmp_40_fu_398_p2();
    void thread_tmp_41_fu_414_p2();
    void thread_tmp_42_fu_249_p1();
    void thread_tmp_43_fu_333_p1();
    void thread_tmp_44_fu_443_p2();
    void thread_tmp_45_fu_449_p2();
    void thread_tmp_46_fu_338_p1();
    void thread_tmp_47_fu_410_p1();
    void thread_tmp_48_fu_478_p2();
    void thread_tmp_49_fu_484_p2();
    void thread_tmp_50_fu_513_p2();
    void thread_tmp_51_fu_364_p2();
    void thread_tmp_52_fu_370_p2();
    void thread_tmp_fu_239_p1();
    void thread_v0_assign_1_s_fu_573_p3();
    void thread_v0_assign_2_s_fu_579_p3();
    void thread_v0_assign_3_s_fu_585_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

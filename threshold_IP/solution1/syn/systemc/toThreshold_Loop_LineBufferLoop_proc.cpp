// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "toThreshold_Loop_LineBufferLoop_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic toThreshold_Loop_LineBufferLoop_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic toThreshold_Loop_LineBufferLoop_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st2_fsm_1 = "10";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st3_fsm_2 = "100";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st4_fsm_3 = "1000";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st5_fsm_4 = "10000";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st6_fsm_5 = "100000";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<10> toThreshold_Loop_LineBufferLoop_proc::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv1_1 = "1";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_1 = "1";
const sc_lv<1> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv1_0 = "0";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_2 = "10";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_3 = "11";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_4 = "100";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_5 = "101";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_6 = "110";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_7 = "111";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_8 = "1000";
const sc_lv<11> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv11_0 = "00000000000";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_9 = "1001";
const sc_lv<11> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv11_1 = "1";
const sc_lv<13> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv13_F00 = "111100000000";
const sc_lv<12> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv12_780 = "11110000000";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_2D = "101101";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_5A = "1011010";
const sc_lv<32> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv32_87 = "10000111";
const sc_lv<8> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv8_0 = "00000000";
const sc_lv<8> toThreshold_Loop_LineBufferLoop_proc::ap_const_lv8_7F = "1111111";

toThreshold_Loop_LineBufferLoop_proc::toThreshold_Loop_LineBufferLoop_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lineBuffer_val_0_U = new toThreshold_Loop_LineBufferLoop_proc_lineBuffer_val_0("lineBuffer_val_0_U");
    lineBuffer_val_0_U->clk(ap_clk);
    lineBuffer_val_0_U->reset(ap_rst);
    lineBuffer_val_0_U->address0(lineBuffer_val_0_address0);
    lineBuffer_val_0_U->ce0(lineBuffer_val_0_ce0);
    lineBuffer_val_0_U->we0(lineBuffer_val_0_we0);
    lineBuffer_val_0_U->d0(lineBuffer_val_0_d0);
    lineBuffer_val_0_U->q0(lineBuffer_val_0_q0);
    lineBuffer_val_0_U->address1(lineBuffer_val_0_address1);
    lineBuffer_val_0_U->ce1(lineBuffer_val_0_ce1);
    lineBuffer_val_0_U->we1(lineBuffer_val_0_we1);
    lineBuffer_val_0_U->d1(lineBuffer_val_0_d1);
    lineBuffer_val_0_U->q1(lineBuffer_val_0_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_absvalueMat_data_stream_0_V_read);
    sensitive << ( tmp_33_fu_315_p2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_bdd_112 );

    SC_METHOD(thread_angleMat_data_stream_0_V_read);
    sensitive << ( tmp_33_reg_750 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_bdd_161 );

    SC_METHOD(thread_angle_value_fu_355_p1);
    sensitive << ( angleMat_data_stream_0_V_dout );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_fu_259_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_fu_259_p2 );

    SC_METHOD(thread_ap_sig_bdd_106);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_112);
    sensitive << ( absvalueMat_data_stream_0_V_empty_n );
    sensitive << ( tmp_33_fu_315_p2 );

    SC_METHOD(thread_ap_sig_bdd_115);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_bdd_112 );

    SC_METHOD(thread_ap_sig_bdd_129);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_137);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_146);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_155);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_161);
    sensitive << ( angleMat_data_stream_0_V_empty_n );
    sensitive << ( tmp_33_reg_750 );

    SC_METHOD(thread_ap_sig_bdd_177);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_221);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_227);
    sensitive << ( nmsupressionMat_data_stream_0_V_full_n );
    sensitive << ( tmp_52_reg_803 );

    SC_METHOD(thread_ap_sig_bdd_29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_55);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_bdd_71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_221 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_29 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_71 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_88 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_106 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_129 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_137 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_146 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_155 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_177 );

    SC_METHOD(thread_col_fu_289_p2);
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_exitcond3_fu_284_p2);
    sensitive << ( tmp_16_fu_243_p2 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_exitcond4_fu_259_p2);
    sensitive << ( tmp_17_fu_253_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( row5_reg_188 );

    SC_METHOD(thread_filterMask_0_1_2_fu_347_p1);
    sensitive << ( lineBuffer_val_0_q1 );

    SC_METHOD(thread_filterMask_1_1_1_fu_343_p1);
    sensitive << ( gep77_loc_reg_222 );

    SC_METHOD(thread_filterMask_2_1_1_fu_351_p1);
    sensitive << ( gep79_loc_reg_211 );

    SC_METHOD(thread_lineBuffer_val_0_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( lineBuffer_val_0_addr_reg_745 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_34_fu_310_p1 );
    sensitive << ( tmp_36_fu_328_p1 );
    sensitive << ( tmp_43_fu_333_p1 );

    SC_METHOD(thread_lineBuffer_val_0_address1);
    sensitive << ( lineBuffer_val_0_addr_1_reg_769 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_46_fu_338_p1 );

    SC_METHOD(thread_lineBuffer_val_0_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_bdd_112 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_lineBuffer_val_0_ce1);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_lineBuffer_val_0_d0);
    sensitive << ( absvalueMat_data_stream_0_V_dout );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( lineBuffer_val_0_q0 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_lineBuffer_val_0_d1);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( gep79_loc_reg_211 );

    SC_METHOD(thread_lineBuffer_val_0_we0);
    sensitive << ( tmp_32_reg_740 );
    sensitive << ( tmp_33_fu_315_p2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_bdd_112 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_lineBuffer_val_0_we1);
    sensitive << ( tmp_32_reg_740 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_nmsupressionMat_data_stream_0_V_din);
    sensitive << ( tmp_52_reg_803 );
    sensitive << ( tmp_38_reg_807 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_bdd_227 );
    sensitive << ( p_v0_assign_fu_567_p3 );
    sensitive << ( sel_tmp8_fu_605_p3 );

    SC_METHOD(thread_nmsupressionMat_data_stream_0_V_write);
    sensitive << ( tmp_52_reg_803 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_bdd_227 );

    SC_METHOD(thread_or_cond_fu_404_p2);
    sensitive << ( tmp_39_fu_393_p2 );
    sensitive << ( tmp_40_fu_398_p2 );

    SC_METHOD(thread_p_addr3_fu_304_p2);
    sensitive << ( tmp_36_trn1_cast_fu_300_p1 );

    SC_METHOD(thread_p_addr6_fu_323_p2);
    sensitive << ( tmp_36_trn1_cast1_reg_754 );

    SC_METHOD(thread_p_v0_assign_fu_567_p3);
    sensitive << ( or_cond_reg_812 );
    sensitive << ( tmp_47_reg_817 );

    SC_METHOD(thread_rev1_fu_437_p2);
    sensitive << ( slt1_fu_431_p2 );

    SC_METHOD(thread_rev2_fu_460_p2);
    sensitive << ( slt2_fu_455_p2 );

    SC_METHOD(thread_rev3_fu_472_p2);
    sensitive << ( slt3_fu_466_p2 );

    SC_METHOD(thread_rev4_fu_495_p2);
    sensitive << ( slt4_fu_490_p2 );

    SC_METHOD(thread_rev5_fu_507_p2);
    sensitive << ( slt5_fu_501_p2 );

    SC_METHOD(thread_rev_fu_425_p2);
    sensitive << ( slt_fu_420_p2 );

    SC_METHOD(thread_row_fu_264_p2);
    sensitive << ( row5_reg_188 );

    SC_METHOD(thread_sel_tmp12_demorgan_fu_549_p2);
    sensitive << ( sel_tmp5_demorgan_fu_531_p2 );
    sensitive << ( tmp_45_fu_449_p2 );

    SC_METHOD(thread_sel_tmp1_fu_525_p2);
    sensitive << ( tmp_41_fu_414_p2 );
    sensitive << ( sel_tmp_fu_519_p2 );

    SC_METHOD(thread_sel_tmp2_fu_591_p3);
    sensitive << ( sel_tmp1_reg_840 );
    sensitive << ( v0_assign_1_s_fu_573_p3 );

    SC_METHOD(thread_sel_tmp3_fu_555_p2);
    sensitive << ( sel_tmp12_demorgan_fu_549_p2 );

    SC_METHOD(thread_sel_tmp4_fu_561_p2);
    sensitive << ( tmp_49_fu_484_p2 );
    sensitive << ( sel_tmp3_fu_555_p2 );

    SC_METHOD(thread_sel_tmp5_demorgan_fu_531_p2);
    sensitive << ( tmp_38_fu_387_p2 );
    sensitive << ( tmp_41_fu_414_p2 );

    SC_METHOD(thread_sel_tmp5_fu_537_p2);
    sensitive << ( sel_tmp5_demorgan_fu_531_p2 );

    SC_METHOD(thread_sel_tmp6_fu_543_p2);
    sensitive << ( tmp_45_fu_449_p2 );
    sensitive << ( sel_tmp5_fu_537_p2 );

    SC_METHOD(thread_sel_tmp7_fu_598_p3);
    sensitive << ( sel_tmp6_reg_845 );
    sensitive << ( v0_assign_2_s_fu_579_p3 );
    sensitive << ( sel_tmp2_fu_591_p3 );

    SC_METHOD(thread_sel_tmp8_fu_605_p3);
    sensitive << ( sel_tmp4_reg_850 );
    sensitive << ( v0_assign_3_s_fu_585_p3 );
    sensitive << ( sel_tmp7_fu_598_p3 );

    SC_METHOD(thread_sel_tmp_fu_519_p2);
    sensitive << ( tmp_38_fu_387_p2 );

    SC_METHOD(thread_slt1_fu_431_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_0_0_fu_100 );
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_slt2_fu_455_p2);
    sensitive << ( filterMask_1_1_1_reg_785 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_slt3_fu_466_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_1_1_fu_108 );
    sensitive << ( filterMask_1_0_fu_112 );

    SC_METHOD(thread_slt4_fu_490_p2);
    sensitive << ( filterMask_0_1_2_reg_791 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_slt5_fu_501_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_2_0_fu_96 );
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_slt_fu_420_p2);
    sensitive << ( filterMask_2_1_1_reg_797 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_tmp_16_fu_243_p2);
    sensitive << ( tmp_fu_239_p1 );

    SC_METHOD(thread_tmp_17_fu_253_p2);
    sensitive << ( tmp_42_fu_249_p1 );

    SC_METHOD(thread_tmp_27_fu_270_p2);
    sensitive << ( tmp_42_fu_249_p1 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_fu_259_p2 );
    sensitive << ( row5_reg_188 );

    SC_METHOD(thread_tmp_28_fu_275_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_fu_259_p2 );
    sensitive << ( row5_reg_188 );

    SC_METHOD(thread_tmp_32_fu_295_p2);
    sensitive << ( tmp_fu_239_p1 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond3_fu_284_p2 );
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_tmp_33_fu_315_p2);
    sensitive << ( tmp_27_reg_716 );
    sensitive << ( tmp_32_reg_740 );

    SC_METHOD(thread_tmp_34_fu_310_p1);
    sensitive << ( p_addr3_fu_304_p2 );

    SC_METHOD(thread_tmp_36_fu_328_p1);
    sensitive << ( p_addr6_fu_323_p2 );

    SC_METHOD(thread_tmp_36_trn1_cast1_fu_319_p1);
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_tmp_36_trn1_cast_fu_300_p1);
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_tmp_38_fu_387_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( angle_value_1_fu_88 );

    SC_METHOD(thread_tmp_39_fu_393_p2);
    sensitive << ( filterMask_0_0_1_reg_726 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_tmp_40_fu_398_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( filterMask_2_1_fu_92 );
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_tmp_41_fu_414_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( angle_value_1_fu_88 );

    SC_METHOD(thread_tmp_42_fu_249_p1);
    sensitive << ( rows );

    SC_METHOD(thread_tmp_43_fu_333_p1);
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_tmp_44_fu_443_p2);
    sensitive << ( rev_fu_425_p2 );
    sensitive << ( rev1_fu_437_p2 );

    SC_METHOD(thread_tmp_45_fu_449_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( angle_value_1_fu_88 );

    SC_METHOD(thread_tmp_46_fu_338_p1);
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_tmp_47_fu_410_p1);
    sensitive << ( filterMask_1_1_fu_108 );

    SC_METHOD(thread_tmp_48_fu_478_p2);
    sensitive << ( rev2_fu_460_p2 );
    sensitive << ( rev3_fu_472_p2 );

    SC_METHOD(thread_tmp_49_fu_484_p2);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( angle_value_1_fu_88 );

    SC_METHOD(thread_tmp_50_fu_513_p2);
    sensitive << ( rev4_fu_495_p2 );
    sensitive << ( rev5_fu_507_p2 );

    SC_METHOD(thread_tmp_51_fu_364_p2);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_bdd_161 );
    sensitive << ( col6_reg_199 );

    SC_METHOD(thread_tmp_52_fu_370_p2);
    sensitive << ( tmp_28_reg_721 );
    sensitive << ( tmp_51_fu_364_p2 );

    SC_METHOD(thread_tmp_fu_239_p1);
    sensitive << ( cols );

    SC_METHOD(thread_v0_assign_1_s_fu_573_p3);
    sensitive << ( tmp_47_reg_817 );
    sensitive << ( tmp_44_reg_825 );

    SC_METHOD(thread_v0_assign_2_s_fu_579_p3);
    sensitive << ( tmp_47_reg_817 );
    sensitive << ( tmp_48_reg_830 );

    SC_METHOD(thread_v0_assign_3_s_fu_585_p3);
    sensitive << ( tmp_47_reg_817 );
    sensitive << ( tmp_50_reg_835 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_55 );
    sensitive << ( exitcond4_fu_259_p2 );
    sensitive << ( exitcond3_fu_284_p2 );
    sensitive << ( ap_sig_bdd_112 );
    sensitive << ( ap_sig_bdd_161 );
    sensitive << ( ap_sig_bdd_227 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "toThreshold_Loop_LineBufferLoop_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cols, "(port)cols");
    sc_trace(mVcdFile, rows, "(port)rows");
    sc_trace(mVcdFile, absvalueMat_data_stream_0_V_dout, "(port)absvalueMat_data_stream_0_V_dout");
    sc_trace(mVcdFile, absvalueMat_data_stream_0_V_empty_n, "(port)absvalueMat_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, absvalueMat_data_stream_0_V_read, "(port)absvalueMat_data_stream_0_V_read");
    sc_trace(mVcdFile, angleMat_data_stream_0_V_dout, "(port)angleMat_data_stream_0_V_dout");
    sc_trace(mVcdFile, angleMat_data_stream_0_V_empty_n, "(port)angleMat_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, angleMat_data_stream_0_V_read, "(port)angleMat_data_stream_0_V_read");
    sc_trace(mVcdFile, nmsupressionMat_data_stream_0_V_din, "(port)nmsupressionMat_data_stream_0_V_din");
    sc_trace(mVcdFile, nmsupressionMat_data_stream_0_V_full_n, "(port)nmsupressionMat_data_stream_0_V_full_n");
    sc_trace(mVcdFile, nmsupressionMat_data_stream_0_V_write, "(port)nmsupressionMat_data_stream_0_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_29, "ap_sig_bdd_29");
    sc_trace(mVcdFile, tmp_fu_239_p1, "tmp_fu_239_p1");
    sc_trace(mVcdFile, ap_sig_bdd_55, "ap_sig_bdd_55");
    sc_trace(mVcdFile, tmp_16_fu_243_p2, "tmp_16_fu_243_p2");
    sc_trace(mVcdFile, tmp_42_fu_249_p1, "tmp_42_fu_249_p1");
    sc_trace(mVcdFile, tmp_17_fu_253_p2, "tmp_17_fu_253_p2");
    sc_trace(mVcdFile, row_fu_264_p2, "row_fu_264_p2");
    sc_trace(mVcdFile, row_reg_711, "row_reg_711");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_71, "ap_sig_bdd_71");
    sc_trace(mVcdFile, tmp_27_fu_270_p2, "tmp_27_fu_270_p2");
    sc_trace(mVcdFile, tmp_27_reg_716, "tmp_27_reg_716");
    sc_trace(mVcdFile, exitcond4_fu_259_p2, "exitcond4_fu_259_p2");
    sc_trace(mVcdFile, tmp_28_fu_275_p2, "tmp_28_fu_275_p2");
    sc_trace(mVcdFile, tmp_28_reg_721, "tmp_28_reg_721");
    sc_trace(mVcdFile, filterMask_0_0_1_reg_726, "filterMask_0_0_1_reg_726");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_88, "ap_sig_bdd_88");
    sc_trace(mVcdFile, col_fu_289_p2, "col_fu_289_p2");
    sc_trace(mVcdFile, col_reg_735, "col_reg_735");
    sc_trace(mVcdFile, tmp_32_fu_295_p2, "tmp_32_fu_295_p2");
    sc_trace(mVcdFile, tmp_32_reg_740, "tmp_32_reg_740");
    sc_trace(mVcdFile, exitcond3_fu_284_p2, "exitcond3_fu_284_p2");
    sc_trace(mVcdFile, lineBuffer_val_0_addr_reg_745, "lineBuffer_val_0_addr_reg_745");
    sc_trace(mVcdFile, tmp_33_fu_315_p2, "tmp_33_fu_315_p2");
    sc_trace(mVcdFile, tmp_33_reg_750, "tmp_33_reg_750");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_106, "ap_sig_bdd_106");
    sc_trace(mVcdFile, ap_sig_bdd_112, "ap_sig_bdd_112");
    sc_trace(mVcdFile, tmp_36_trn1_cast1_fu_319_p1, "tmp_36_trn1_cast1_fu_319_p1");
    sc_trace(mVcdFile, tmp_36_trn1_cast1_reg_754, "tmp_36_trn1_cast1_reg_754");
    sc_trace(mVcdFile, lineBuffer_val_0_q0, "lineBuffer_val_0_q0");
    sc_trace(mVcdFile, lineBuffer_val_0_addr_1_reg_769, "lineBuffer_val_0_addr_1_reg_769");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_129, "ap_sig_bdd_129");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_137, "ap_sig_bdd_137");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_146, "ap_sig_bdd_146");
    sc_trace(mVcdFile, filterMask_1_1_1_fu_343_p1, "filterMask_1_1_1_fu_343_p1");
    sc_trace(mVcdFile, filterMask_1_1_1_reg_785, "filterMask_1_1_1_reg_785");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_155, "ap_sig_bdd_155");
    sc_trace(mVcdFile, ap_sig_bdd_161, "ap_sig_bdd_161");
    sc_trace(mVcdFile, filterMask_0_1_2_fu_347_p1, "filterMask_0_1_2_fu_347_p1");
    sc_trace(mVcdFile, filterMask_0_1_2_reg_791, "filterMask_0_1_2_reg_791");
    sc_trace(mVcdFile, filterMask_2_1_1_fu_351_p1, "filterMask_2_1_1_fu_351_p1");
    sc_trace(mVcdFile, filterMask_2_1_1_reg_797, "filterMask_2_1_1_reg_797");
    sc_trace(mVcdFile, tmp_52_fu_370_p2, "tmp_52_fu_370_p2");
    sc_trace(mVcdFile, tmp_52_reg_803, "tmp_52_reg_803");
    sc_trace(mVcdFile, tmp_38_fu_387_p2, "tmp_38_fu_387_p2");
    sc_trace(mVcdFile, tmp_38_reg_807, "tmp_38_reg_807");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_177, "ap_sig_bdd_177");
    sc_trace(mVcdFile, or_cond_fu_404_p2, "or_cond_fu_404_p2");
    sc_trace(mVcdFile, or_cond_reg_812, "or_cond_reg_812");
    sc_trace(mVcdFile, tmp_47_fu_410_p1, "tmp_47_fu_410_p1");
    sc_trace(mVcdFile, tmp_47_reg_817, "tmp_47_reg_817");
    sc_trace(mVcdFile, tmp_44_fu_443_p2, "tmp_44_fu_443_p2");
    sc_trace(mVcdFile, tmp_44_reg_825, "tmp_44_reg_825");
    sc_trace(mVcdFile, tmp_48_fu_478_p2, "tmp_48_fu_478_p2");
    sc_trace(mVcdFile, tmp_48_reg_830, "tmp_48_reg_830");
    sc_trace(mVcdFile, tmp_50_fu_513_p2, "tmp_50_fu_513_p2");
    sc_trace(mVcdFile, tmp_50_reg_835, "tmp_50_reg_835");
    sc_trace(mVcdFile, sel_tmp1_fu_525_p2, "sel_tmp1_fu_525_p2");
    sc_trace(mVcdFile, sel_tmp1_reg_840, "sel_tmp1_reg_840");
    sc_trace(mVcdFile, sel_tmp6_fu_543_p2, "sel_tmp6_fu_543_p2");
    sc_trace(mVcdFile, sel_tmp6_reg_845, "sel_tmp6_reg_845");
    sc_trace(mVcdFile, sel_tmp4_fu_561_p2, "sel_tmp4_fu_561_p2");
    sc_trace(mVcdFile, sel_tmp4_reg_850, "sel_tmp4_reg_850");
    sc_trace(mVcdFile, lineBuffer_val_0_address0, "lineBuffer_val_0_address0");
    sc_trace(mVcdFile, lineBuffer_val_0_ce0, "lineBuffer_val_0_ce0");
    sc_trace(mVcdFile, lineBuffer_val_0_we0, "lineBuffer_val_0_we0");
    sc_trace(mVcdFile, lineBuffer_val_0_d0, "lineBuffer_val_0_d0");
    sc_trace(mVcdFile, lineBuffer_val_0_address1, "lineBuffer_val_0_address1");
    sc_trace(mVcdFile, lineBuffer_val_0_ce1, "lineBuffer_val_0_ce1");
    sc_trace(mVcdFile, lineBuffer_val_0_we1, "lineBuffer_val_0_we1");
    sc_trace(mVcdFile, lineBuffer_val_0_d1, "lineBuffer_val_0_d1");
    sc_trace(mVcdFile, lineBuffer_val_0_q1, "lineBuffer_val_0_q1");
    sc_trace(mVcdFile, row5_reg_188, "row5_reg_188");
    sc_trace(mVcdFile, col6_reg_199, "col6_reg_199");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_221, "ap_sig_bdd_221");
    sc_trace(mVcdFile, ap_sig_bdd_227, "ap_sig_bdd_227");
    sc_trace(mVcdFile, gep79_loc_reg_211, "gep79_loc_reg_211");
    sc_trace(mVcdFile, gep77_loc_reg_222, "gep77_loc_reg_222");
    sc_trace(mVcdFile, tmp_34_fu_310_p1, "tmp_34_fu_310_p1");
    sc_trace(mVcdFile, tmp_36_fu_328_p1, "tmp_36_fu_328_p1");
    sc_trace(mVcdFile, tmp_43_fu_333_p1, "tmp_43_fu_333_p1");
    sc_trace(mVcdFile, tmp_46_fu_338_p1, "tmp_46_fu_338_p1");
    sc_trace(mVcdFile, angle_value_1_fu_88, "angle_value_1_fu_88");
    sc_trace(mVcdFile, angle_value_fu_355_p1, "angle_value_fu_355_p1");
    sc_trace(mVcdFile, filterMask_2_1_fu_92, "filterMask_2_1_fu_92");
    sc_trace(mVcdFile, filterMask_2_0_fu_96, "filterMask_2_0_fu_96");
    sc_trace(mVcdFile, filterMask_0_0_fu_100, "filterMask_0_0_fu_100");
    sc_trace(mVcdFile, filterMask_0_1_fu_104, "filterMask_0_1_fu_104");
    sc_trace(mVcdFile, filterMask_1_1_fu_108, "filterMask_1_1_fu_108");
    sc_trace(mVcdFile, filterMask_1_0_fu_112, "filterMask_1_0_fu_112");
    sc_trace(mVcdFile, tmp_36_trn1_cast_fu_300_p1, "tmp_36_trn1_cast_fu_300_p1");
    sc_trace(mVcdFile, p_addr3_fu_304_p2, "p_addr3_fu_304_p2");
    sc_trace(mVcdFile, p_addr6_fu_323_p2, "p_addr6_fu_323_p2");
    sc_trace(mVcdFile, tmp_51_fu_364_p2, "tmp_51_fu_364_p2");
    sc_trace(mVcdFile, tmp_39_fu_393_p2, "tmp_39_fu_393_p2");
    sc_trace(mVcdFile, tmp_40_fu_398_p2, "tmp_40_fu_398_p2");
    sc_trace(mVcdFile, slt_fu_420_p2, "slt_fu_420_p2");
    sc_trace(mVcdFile, slt1_fu_431_p2, "slt1_fu_431_p2");
    sc_trace(mVcdFile, rev_fu_425_p2, "rev_fu_425_p2");
    sc_trace(mVcdFile, rev1_fu_437_p2, "rev1_fu_437_p2");
    sc_trace(mVcdFile, slt2_fu_455_p2, "slt2_fu_455_p2");
    sc_trace(mVcdFile, slt3_fu_466_p2, "slt3_fu_466_p2");
    sc_trace(mVcdFile, rev2_fu_460_p2, "rev2_fu_460_p2");
    sc_trace(mVcdFile, rev3_fu_472_p2, "rev3_fu_472_p2");
    sc_trace(mVcdFile, slt4_fu_490_p2, "slt4_fu_490_p2");
    sc_trace(mVcdFile, slt5_fu_501_p2, "slt5_fu_501_p2");
    sc_trace(mVcdFile, rev4_fu_495_p2, "rev4_fu_495_p2");
    sc_trace(mVcdFile, rev5_fu_507_p2, "rev5_fu_507_p2");
    sc_trace(mVcdFile, tmp_41_fu_414_p2, "tmp_41_fu_414_p2");
    sc_trace(mVcdFile, sel_tmp_fu_519_p2, "sel_tmp_fu_519_p2");
    sc_trace(mVcdFile, sel_tmp5_demorgan_fu_531_p2, "sel_tmp5_demorgan_fu_531_p2");
    sc_trace(mVcdFile, tmp_45_fu_449_p2, "tmp_45_fu_449_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_537_p2, "sel_tmp5_fu_537_p2");
    sc_trace(mVcdFile, sel_tmp12_demorgan_fu_549_p2, "sel_tmp12_demorgan_fu_549_p2");
    sc_trace(mVcdFile, tmp_49_fu_484_p2, "tmp_49_fu_484_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_555_p2, "sel_tmp3_fu_555_p2");
    sc_trace(mVcdFile, v0_assign_1_s_fu_573_p3, "v0_assign_1_s_fu_573_p3");
    sc_trace(mVcdFile, v0_assign_2_s_fu_579_p3, "v0_assign_2_s_fu_579_p3");
    sc_trace(mVcdFile, sel_tmp2_fu_591_p3, "sel_tmp2_fu_591_p3");
    sc_trace(mVcdFile, v0_assign_3_s_fu_585_p3, "v0_assign_3_s_fu_585_p3");
    sc_trace(mVcdFile, sel_tmp7_fu_598_p3, "sel_tmp7_fu_598_p3");
    sc_trace(mVcdFile, p_v0_assign_fu_567_p3, "p_v0_assign_fu_567_p3");
    sc_trace(mVcdFile, sel_tmp8_fu_605_p3, "sel_tmp8_fu_605_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_115, "ap_sig_bdd_115");
#endif

    }
}

toThreshold_Loop_LineBufferLoop_proc::~toThreshold_Loop_LineBufferLoop_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lineBuffer_val_0_U;
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(exitcond4_fu_259_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
         !ap_sig_bdd_227.read())) {
        col6_reg_199 = col_reg_735.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_259_p2.read(), ap_const_lv1_0))) {
        col6_reg_199 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_740.read())) {
            gep77_loc_reg_222 = lineBuffer_val_0_q0.read();
        } else if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_740.read())) {
            gep77_loc_reg_222 = gep79_loc_reg_211.read();
        }
    }
    if (ap_sig_bdd_115.read()) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_fu_315_p2.read())) {
            gep79_loc_reg_211 = lineBuffer_val_0_q0.read();
        } else if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_fu_315_p2.read())) {
            gep79_loc_reg_211 = absvalueMat_data_stream_0_V_dout.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_284_p2.read()))) {
        row5_reg_188 = row_reg_711.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_bdd_55.read())) {
        row5_reg_188 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_reg_750.read()) && !ap_sig_bdd_161.read())) {
        angle_value_1_fu_88 = angle_value_fu_355_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        col_reg_735 = col_fu_289_p2.read();
        filterMask_0_0_1_reg_726 = filterMask_0_1_fu_104.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && !ap_sig_bdd_227.read())) {
        filterMask_0_0_fu_100 = filterMask_0_0_1_reg_726.read();
        filterMask_0_1_fu_104 = filterMask_0_1_2_reg_791.read();
        filterMask_1_0_fu_112 = filterMask_1_1_fu_108.read();
        filterMask_1_1_fu_108 = filterMask_1_1_1_reg_785.read();
        filterMask_2_0_fu_96 = filterMask_2_1_fu_92.read();
        filterMask_2_1_fu_92 = filterMask_2_1_1_reg_797.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && !ap_sig_bdd_161.read())) {
        filterMask_0_1_2_reg_791 = filterMask_0_1_2_fu_347_p1.read();
        filterMask_1_1_1_reg_785 = filterMask_1_1_1_fu_343_p1.read();
        filterMask_2_1_1_reg_797 = filterMask_2_1_1_fu_351_p1.read();
        tmp_52_reg_803 = tmp_52_fu_370_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        lineBuffer_val_0_addr_1_reg_769 =  (sc_lv<13>) (tmp_36_fu_328_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_284_p2.read()))) {
        lineBuffer_val_0_addr_reg_745 =  (sc_lv<13>) (tmp_34_fu_310_p1.read());
        tmp_32_reg_740 = tmp_32_fu_295_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        or_cond_reg_812 = or_cond_fu_404_p2.read();
        sel_tmp1_reg_840 = sel_tmp1_fu_525_p2.read();
        sel_tmp4_reg_850 = sel_tmp4_fu_561_p2.read();
        sel_tmp6_reg_845 = sel_tmp6_fu_543_p2.read();
        tmp_38_reg_807 = tmp_38_fu_387_p2.read();
        tmp_44_reg_825 = tmp_44_fu_443_p2.read();
        tmp_47_reg_817 = tmp_47_fu_410_p1.read();
        tmp_48_reg_830 = tmp_48_fu_478_p2.read();
        tmp_50_reg_835 = tmp_50_fu_513_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        row_reg_711 = row_fu_264_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond4_fu_259_p2.read(), ap_const_lv1_0))) {
        tmp_27_reg_716 = tmp_27_fu_270_p2.read();
        tmp_28_reg_721 = tmp_28_fu_275_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && !ap_sig_bdd_112.read())) {
        tmp_33_reg_750 = tmp_33_fu_315_p2.read();
        tmp_36_trn1_cast1_reg_754 = tmp_36_trn1_cast1_fu_319_p1.read();
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_absvalueMat_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_fu_315_p2.read()) && 
         !ap_sig_bdd_112.read())) {
        absvalueMat_data_stream_0_V_read = ap_const_logic_1;
    } else {
        absvalueMat_data_stream_0_V_read = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_angleMat_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_reg_750.read()) && 
         !ap_sig_bdd_161.read())) {
        angleMat_data_stream_0_V_read = ap_const_logic_1;
    } else {
        angleMat_data_stream_0_V_read = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_angle_value_fu_355_p1() {
    angle_value_fu_355_p1 = esl_zext<32,8>(angleMat_data_stream_0_V_dout.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(exitcond4_fu_259_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond4_fu_259_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_106() {
    ap_sig_bdd_106 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_112() {
    ap_sig_bdd_112 = (esl_seteq<1,1,1>(absvalueMat_data_stream_0_V_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_fu_315_p2.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_115() {
    ap_sig_bdd_115 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && !ap_sig_bdd_112.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_129() {
    ap_sig_bdd_129 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_137() {
    ap_sig_bdd_137 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_146() {
    ap_sig_bdd_146 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_155() {
    ap_sig_bdd_155 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_161() {
    ap_sig_bdd_161 = (esl_seteq<1,1,1>(angleMat_data_stream_0_V_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_reg_750.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_177() {
    ap_sig_bdd_177 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_221() {
    ap_sig_bdd_221 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_227() {
    ap_sig_bdd_227 = (esl_seteq<1,1,1>(nmsupressionMat_data_stream_0_V_full_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_52_reg_803.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_29() {
    ap_sig_bdd_29 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_55() {
    ap_sig_bdd_55 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_71() {
    ap_sig_bdd_71 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_bdd_88() {
    ap_sig_bdd_88 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_221.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_29.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_71.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_88.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_106.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_129.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_137.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_146.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_155.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_177.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_col_fu_289_p2() {
    col_fu_289_p2 = (!col6_reg_199.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(col6_reg_199.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_exitcond3_fu_284_p2() {
    exitcond3_fu_284_p2 = (!col6_reg_199.read().is_01() || !tmp_16_fu_243_p2.read().is_01())? sc_lv<1>(): sc_lv<1>(col6_reg_199.read() == tmp_16_fu_243_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_exitcond4_fu_259_p2() {
    exitcond4_fu_259_p2 = (!row5_reg_188.read().is_01() || !tmp_17_fu_253_p2.read().is_01())? sc_lv<1>(): sc_lv<1>(row5_reg_188.read() == tmp_17_fu_253_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_filterMask_0_1_2_fu_347_p1() {
    filterMask_0_1_2_fu_347_p1 = esl_zext<32,8>(lineBuffer_val_0_q1.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_filterMask_1_1_1_fu_343_p1() {
    filterMask_1_1_1_fu_343_p1 = esl_zext<32,8>(gep77_loc_reg_222.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_filterMask_2_1_1_fu_351_p1() {
    filterMask_2_1_1_fu_351_p1 = esl_zext<32,8>(gep79_loc_reg_211.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        lineBuffer_val_0_address0 =  (sc_lv<13>) (tmp_43_fu_333_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        lineBuffer_val_0_address0 = lineBuffer_val_0_addr_reg_745.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        lineBuffer_val_0_address0 =  (sc_lv<13>) (tmp_36_fu_328_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        lineBuffer_val_0_address0 =  (sc_lv<13>) (tmp_34_fu_310_p1.read());
    } else {
        lineBuffer_val_0_address0 = "XXXXXXXXXXXXX";
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        lineBuffer_val_0_address1 = lineBuffer_val_0_addr_1_reg_769.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        lineBuffer_val_0_address1 =  (sc_lv<13>) (tmp_46_fu_338_p1.read());
    } else {
        lineBuffer_val_0_address1 = "XXXXXXXXXXXXX";
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !ap_sig_bdd_112.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()))) {
        lineBuffer_val_0_ce0 = ap_const_logic_1;
    } else {
        lineBuffer_val_0_ce0 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        lineBuffer_val_0_ce1 = ap_const_logic_1;
    } else {
        lineBuffer_val_0_ce1 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        lineBuffer_val_0_d0 = lineBuffer_val_0_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        lineBuffer_val_0_d0 = absvalueMat_data_stream_0_V_dout.read();
    } else {
        lineBuffer_val_0_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_d1() {
    lineBuffer_val_0_d1 = gep79_loc_reg_211.read();
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_33_fu_315_p2.read()) && 
          !ap_sig_bdd_112.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_740.read())))) {
        lineBuffer_val_0_we0 = ap_const_logic_1;
    } else {
        lineBuffer_val_0_we0 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_lineBuffer_val_0_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_740.read())))) {
        lineBuffer_val_0_we1 = ap_const_logic_1;
    } else {
        lineBuffer_val_0_we1 = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_nmsupressionMat_data_stream_0_V_din() {
    nmsupressionMat_data_stream_0_V_din = (!tmp_38_reg_807.read()[0].is_01())? sc_lv<8>(): ((tmp_38_reg_807.read()[0].to_bool())? p_v0_assign_fu_567_p3.read(): sel_tmp8_fu_605_p3.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_nmsupressionMat_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_52_reg_803.read()) && 
         !ap_sig_bdd_227.read())) {
        nmsupressionMat_data_stream_0_V_write = ap_const_logic_1;
    } else {
        nmsupressionMat_data_stream_0_V_write = ap_const_logic_0;
    }
}

void toThreshold_Loop_LineBufferLoop_proc::thread_or_cond_fu_404_p2() {
    or_cond_fu_404_p2 = (tmp_39_fu_393_p2.read() | tmp_40_fu_398_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_p_addr3_fu_304_p2() {
    p_addr3_fu_304_p2 = (!tmp_36_trn1_cast_fu_300_p1.read().is_01() || !ap_const_lv13_F00.is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_36_trn1_cast_fu_300_p1.read()) + sc_biguint<13>(ap_const_lv13_F00));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_p_addr6_fu_323_p2() {
    p_addr6_fu_323_p2 = (!tmp_36_trn1_cast1_reg_754.read().is_01() || !ap_const_lv12_780.is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_36_trn1_cast1_reg_754.read()) + sc_biguint<12>(ap_const_lv12_780));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_p_v0_assign_fu_567_p3() {
    p_v0_assign_fu_567_p3 = (!or_cond_reg_812.read()[0].is_01())? sc_lv<8>(): ((or_cond_reg_812.read()[0].to_bool())? ap_const_lv8_0: tmp_47_reg_817.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_rev1_fu_437_p2() {
    rev1_fu_437_p2 = (slt1_fu_431_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_rev2_fu_460_p2() {
    rev2_fu_460_p2 = (slt2_fu_455_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_rev3_fu_472_p2() {
    rev3_fu_472_p2 = (slt3_fu_466_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_rev4_fu_495_p2() {
    rev4_fu_495_p2 = (slt4_fu_490_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_rev5_fu_507_p2() {
    rev5_fu_507_p2 = (slt5_fu_501_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_rev_fu_425_p2() {
    rev_fu_425_p2 = (slt_fu_420_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_row_fu_264_p2() {
    row_fu_264_p2 = (!row5_reg_188.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(row5_reg_188.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp12_demorgan_fu_549_p2() {
    sel_tmp12_demorgan_fu_549_p2 = (sel_tmp5_demorgan_fu_531_p2.read() | tmp_45_fu_449_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp1_fu_525_p2() {
    sel_tmp1_fu_525_p2 = (tmp_41_fu_414_p2.read() & sel_tmp_fu_519_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp2_fu_591_p3() {
    sel_tmp2_fu_591_p3 = (!sel_tmp1_reg_840.read()[0].is_01())? sc_lv<8>(): ((sel_tmp1_reg_840.read()[0].to_bool())? v0_assign_1_s_fu_573_p3.read(): ap_const_lv8_7F);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp3_fu_555_p2() {
    sel_tmp3_fu_555_p2 = (sel_tmp12_demorgan_fu_549_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp4_fu_561_p2() {
    sel_tmp4_fu_561_p2 = (tmp_49_fu_484_p2.read() & sel_tmp3_fu_555_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp5_demorgan_fu_531_p2() {
    sel_tmp5_demorgan_fu_531_p2 = (tmp_38_fu_387_p2.read() | tmp_41_fu_414_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp5_fu_537_p2() {
    sel_tmp5_fu_537_p2 = (sel_tmp5_demorgan_fu_531_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp6_fu_543_p2() {
    sel_tmp6_fu_543_p2 = (tmp_45_fu_449_p2.read() & sel_tmp5_fu_537_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp7_fu_598_p3() {
    sel_tmp7_fu_598_p3 = (!sel_tmp6_reg_845.read()[0].is_01())? sc_lv<8>(): ((sel_tmp6_reg_845.read()[0].to_bool())? v0_assign_2_s_fu_579_p3.read(): sel_tmp2_fu_591_p3.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp8_fu_605_p3() {
    sel_tmp8_fu_605_p3 = (!sel_tmp4_reg_850.read()[0].is_01())? sc_lv<8>(): ((sel_tmp4_reg_850.read()[0].to_bool())? v0_assign_3_s_fu_585_p3.read(): sel_tmp7_fu_598_p3.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_sel_tmp_fu_519_p2() {
    sel_tmp_fu_519_p2 = (tmp_38_fu_387_p2.read() ^ ap_const_lv1_1);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_slt1_fu_431_p2() {
    slt1_fu_431_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_0_0_fu_100.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_0_0_fu_100.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_slt2_fu_455_p2() {
    slt2_fu_455_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_1_1_1_reg_785.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_1_1_1_reg_785.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_slt3_fu_466_p2() {
    slt3_fu_466_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_1_0_fu_112.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_1_0_fu_112.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_slt4_fu_490_p2() {
    slt4_fu_490_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_0_1_2_reg_791.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_0_1_2_reg_791.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_slt5_fu_501_p2() {
    slt5_fu_501_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_2_0_fu_96.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_2_0_fu_96.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_slt_fu_420_p2() {
    slt_fu_420_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_2_1_1_reg_797.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_2_1_1_reg_797.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_16_fu_243_p2() {
    tmp_16_fu_243_p2 = (!tmp_fu_239_p1.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_fu_239_p1.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_17_fu_253_p2() {
    tmp_17_fu_253_p2 = (!tmp_42_fu_249_p1.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_42_fu_249_p1.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_27_fu_270_p2() {
    tmp_27_fu_270_p2 = (!row5_reg_188.read().is_01() || !tmp_42_fu_249_p1.read().is_01())? sc_lv<1>(): (sc_biguint<11>(row5_reg_188.read()) < sc_biguint<11>(tmp_42_fu_249_p1.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_28_fu_275_p2() {
    tmp_28_fu_275_p2 = (!row5_reg_188.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(row5_reg_188.read() != ap_const_lv11_0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_32_fu_295_p2() {
    tmp_32_fu_295_p2 = (!col6_reg_199.read().is_01() || !tmp_fu_239_p1.read().is_01())? sc_lv<1>(): (sc_biguint<11>(col6_reg_199.read()) < sc_biguint<11>(tmp_fu_239_p1.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_33_fu_315_p2() {
    tmp_33_fu_315_p2 = (tmp_32_reg_740.read() & tmp_27_reg_716.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_34_fu_310_p1() {
    tmp_34_fu_310_p1 = esl_zext<64,13>(p_addr3_fu_304_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_36_fu_328_p1() {
    tmp_36_fu_328_p1 = esl_zext<64,12>(p_addr6_fu_323_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_36_trn1_cast1_fu_319_p1() {
    tmp_36_trn1_cast1_fu_319_p1 = esl_zext<12,11>(col6_reg_199.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_36_trn1_cast_fu_300_p1() {
    tmp_36_trn1_cast_fu_300_p1 = esl_zext<13,11>(col6_reg_199.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_38_fu_387_p2() {
    tmp_38_fu_387_p2 = (!angle_value_1_fu_88.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(angle_value_1_fu_88.read() == ap_const_lv32_0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_39_fu_393_p2() {
    tmp_39_fu_393_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_0_0_1_reg_726.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_0_0_1_reg_726.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_40_fu_398_p2() {
    tmp_40_fu_398_p2 = (!filterMask_1_1_fu_108.read().is_01() || !filterMask_2_1_fu_92.read().is_01())? sc_lv<1>(): (sc_bigint<32>(filterMask_1_1_fu_108.read()) < sc_bigint<32>(filterMask_2_1_fu_92.read()));
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_41_fu_414_p2() {
    tmp_41_fu_414_p2 = (!angle_value_1_fu_88.read().is_01() || !ap_const_lv32_2D.is_01())? sc_lv<1>(): sc_lv<1>(angle_value_1_fu_88.read() == ap_const_lv32_2D);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_42_fu_249_p1() {
    tmp_42_fu_249_p1 = rows.read().range(11-1, 0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_43_fu_333_p1() {
    tmp_43_fu_333_p1 = esl_zext<64,11>(col6_reg_199.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_44_fu_443_p2() {
    tmp_44_fu_443_p2 = (rev_fu_425_p2.read() & rev1_fu_437_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_45_fu_449_p2() {
    tmp_45_fu_449_p2 = (!angle_value_1_fu_88.read().is_01() || !ap_const_lv32_5A.is_01())? sc_lv<1>(): sc_lv<1>(angle_value_1_fu_88.read() == ap_const_lv32_5A);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_46_fu_338_p1() {
    tmp_46_fu_338_p1 = esl_zext<64,11>(col6_reg_199.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_47_fu_410_p1() {
    tmp_47_fu_410_p1 = filterMask_1_1_fu_108.read().range(8-1, 0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_48_fu_478_p2() {
    tmp_48_fu_478_p2 = (rev2_fu_460_p2.read() & rev3_fu_472_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_49_fu_484_p2() {
    tmp_49_fu_484_p2 = (!angle_value_1_fu_88.read().is_01() || !ap_const_lv32_87.is_01())? sc_lv<1>(): sc_lv<1>(angle_value_1_fu_88.read() == ap_const_lv32_87);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_50_fu_513_p2() {
    tmp_50_fu_513_p2 = (rev4_fu_495_p2.read() & rev5_fu_507_p2.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_51_fu_364_p2() {
    tmp_51_fu_364_p2 = (!col6_reg_199.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(col6_reg_199.read() != ap_const_lv11_0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_52_fu_370_p2() {
    tmp_52_fu_370_p2 = (tmp_51_fu_364_p2.read() & tmp_28_reg_721.read());
}

void toThreshold_Loop_LineBufferLoop_proc::thread_tmp_fu_239_p1() {
    tmp_fu_239_p1 = cols.read().range(11-1, 0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_v0_assign_1_s_fu_573_p3() {
    v0_assign_1_s_fu_573_p3 = (!tmp_44_reg_825.read()[0].is_01())? sc_lv<8>(): ((tmp_44_reg_825.read()[0].to_bool())? tmp_47_reg_817.read(): ap_const_lv8_0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_v0_assign_2_s_fu_579_p3() {
    v0_assign_2_s_fu_579_p3 = (!tmp_48_reg_830.read()[0].is_01())? sc_lv<8>(): ((tmp_48_reg_830.read()[0].to_bool())? tmp_47_reg_817.read(): ap_const_lv8_0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_v0_assign_3_s_fu_585_p3() {
    v0_assign_3_s_fu_585_p3 = (!tmp_50_reg_835.read()[0].is_01())? sc_lv<8>(): ((tmp_50_reg_835.read()[0].to_bool())? tmp_47_reg_817.read(): ap_const_lv8_0);
}

void toThreshold_Loop_LineBufferLoop_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_bdd_55.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond4_fu_259_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_284_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            if (!ap_sig_bdd_112.read()) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            if (!ap_sig_bdd_161.read()) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            if (!ap_sig_bdd_227.read()) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}


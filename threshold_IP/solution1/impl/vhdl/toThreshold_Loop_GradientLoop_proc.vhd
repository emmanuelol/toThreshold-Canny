-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity toThreshold_Loop_GradientLoop_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    sobelxMat_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    sobelxMat_data_stream_0_V_empty_n : IN STD_LOGIC;
    sobelxMat_data_stream_0_V_read : OUT STD_LOGIC;
    sobelyMat_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    sobelyMat_data_stream_0_V_empty_n : IN STD_LOGIC;
    sobelyMat_data_stream_0_V_read : OUT STD_LOGIC;
    absvalueMat_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    absvalueMat_data_stream_0_V_full_n : IN STD_LOGIC;
    absvalueMat_data_stream_0_V_write : OUT STD_LOGIC;
    angleMat_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    angleMat_data_stream_0_V_full_n : IN STD_LOGIC;
    angleMat_data_stream_0_V_write : OUT STD_LOGIC );
end;


architecture behav of toThreshold_Loop_GradientLoop_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st60_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv64_3FE921FB540D8D20 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111101001001000011111101101010100000011011000110100100000";
    constant ap_const_lv64_406FE00000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000001101111111000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FD921FB5496FD7F : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011001001000011111101101010100100101101111110101111111";
    constant ap_const_lv64_4005FDBBE9B14F3A : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000101111111011011101111101001101100010100111100111010";
    constant ap_const_lv64_3FF2D97C80841EDE : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110010110110010111110010000000100001000001111011011110";
    constant ap_const_lv64_3FFF6A7A29BCBCDF : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111111011010100111101000101001101111001011110011011111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_2D : STD_LOGIC_VECTOR (7 downto 0) := "00101101";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal col_reg_187 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_253_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_55 : BOOLEAN;
    signal tmp_1_fu_257_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond6_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_67 : BOOLEAN;
    signal row_1_fu_270_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_1_reg_591 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond5_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_reg_596 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_78 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_89 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it31 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it32 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it33 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it34 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it35 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it36 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it37 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it38 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it39 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it40 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it41 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it42 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it43 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it44 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it45 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it46 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it47 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it48 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it49 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it50 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it51 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it52 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it53 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it54 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it55 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it55 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_208 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it56 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it33 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it34 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it35 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it37 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it38 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it39 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it40 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it41 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it42 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it43 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it44 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it45 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it46 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it47 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it48 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it49 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it50 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it51 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it52 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it53 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond5_reg_596_pp0_it54 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_1_fu_281_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_610 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_610_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_610_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_610_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_5_reg_610_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal y1_fu_298_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal y1_reg_620 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_250_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_626 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_199_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_632 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_203_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal abs_value_reg_637 : STD_LOGIC_VECTOR (63 downto 0);
    signal abs_value_to_int_fu_305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal abs_value_to_int_reg_644 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_649 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_fu_388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_654 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_664 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_V_fu_459_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_V_reg_669 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it15 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it16 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it17 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it18 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it19 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it20 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it21 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it22 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it23 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it24 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it25 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it26 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it27 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it28 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it29 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it30 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it31 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it32 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it33 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it34 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it35 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it36 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it37 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it38 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it39 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it40 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it41 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it42 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it43 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it44 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it45 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it46 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it47 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it48 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it49 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it50 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it51 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it52 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it53 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it54 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_result_V_reg_669_pp0_it55 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_217_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_reg_674 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_212_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_reg_679 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_207_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal angle_reg_684 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_693 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_698 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_23_reg_703_pp0_it55 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_demorgan_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_demorgan_reg_720 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_reg_176 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st60_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_496 : BOOLEAN;
    signal grp_fu_199_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_203_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_207_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_212_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_217_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_221_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_226_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_231_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_236_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_241_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_fu_241_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_246_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_250_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_cast_fu_261_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_308_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_318_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_346_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_V_1_fu_362_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_s_fu_366_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal loc_V_fu_352_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_i_cast_i_fu_378_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_fu_382_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_i_fu_396_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_cast_i_41_fu_402_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_1_fu_406_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_assign_1_i_cast_i_fu_414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_i_cast_i_fu_418_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_i_cast_i_fu_374_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_87_i_cast_i_fu_428_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_86_i_i_fu_422_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_88_i_i_fu_432_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_28_fu_456_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_to_int_fu_465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_468_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_fu_478_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal notrhs1_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_543_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp7_demorgan_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_555_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_199_ce : STD_LOGIC;
    signal grp_fu_203_ce : STD_LOGIC;
    signal grp_fu_207_ce : STD_LOGIC;
    signal grp_fu_212_ce : STD_LOGIC;
    signal grp_fu_217_ce : STD_LOGIC;
    signal tmp_12_fu_221_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_18_fu_226_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_20_fu_231_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_236_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_25_fu_241_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_246_ce : STD_LOGIC;
    signal grp_fu_250_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component toThreshold_dsub_64ns_64ns_64_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component toThreshold_dadd_64ns_64ns_64_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component toThreshold_dmul_64ns_64ns_64_6_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component toThreshold_ddiv_64ns_64ns_64_31 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component toThreshold_dcmp_64ns_64ns_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component toThreshold_uitodp_8ns_64_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component toThreshold_sitodp_32ns_64_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    toThreshold_dsub_64ns_64ns_64_5_full_dsp_U83 : component toThreshold_dsub_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_199_p0,
        din1 => grp_fu_199_p1,
        ce => grp_fu_199_ce,
        dout => grp_fu_199_p2);

    toThreshold_dadd_64ns_64ns_64_5_full_dsp_U84 : component toThreshold_dadd_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_203_p0,
        din1 => grp_fu_203_p1,
        ce => grp_fu_203_ce,
        dout => grp_fu_203_p2);

    toThreshold_dsub_64ns_64ns_64_5_full_dsp_U85 : component toThreshold_dsub_64ns_64ns_64_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_207_p0,
        din1 => grp_fu_207_p1,
        ce => grp_fu_207_ce,
        dout => grp_fu_207_p2);

    toThreshold_dmul_64ns_64ns_64_6_max_dsp_U86 : component toThreshold_dmul_64ns_64ns_64_6_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_212_p0,
        din1 => grp_fu_212_p1,
        ce => grp_fu_212_ce,
        dout => grp_fu_212_p2);

    toThreshold_ddiv_64ns_64ns_64_31_U87 : component toThreshold_ddiv_64ns_64ns_64_31
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_217_p0,
        din1 => grp_fu_217_p1,
        ce => grp_fu_217_ce,
        dout => grp_fu_217_p2);

    toThreshold_dcmp_64ns_64ns_1_1_U88 : component toThreshold_dcmp_64ns_64ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_12_fu_221_p0,
        din1 => tmp_12_fu_221_p1,
        opcode => tmp_12_fu_221_opcode,
        dout => tmp_12_fu_221_p2);

    toThreshold_dcmp_64ns_64ns_1_1_U89 : component toThreshold_dcmp_64ns_64ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_18_fu_226_p0,
        din1 => tmp_18_fu_226_p1,
        opcode => tmp_18_fu_226_opcode,
        dout => tmp_18_fu_226_p2);

    toThreshold_dcmp_64ns_64ns_1_1_U90 : component toThreshold_dcmp_64ns_64ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_20_fu_231_p0,
        din1 => tmp_20_fu_231_p1,
        opcode => tmp_20_fu_231_opcode,
        dout => tmp_20_fu_231_p2);

    toThreshold_dcmp_64ns_64ns_1_1_U91 : component toThreshold_dcmp_64ns_64ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_22_fu_236_p0,
        din1 => tmp_22_fu_236_p1,
        opcode => tmp_22_fu_236_opcode,
        dout => tmp_22_fu_236_p2);

    toThreshold_dcmp_64ns_64ns_1_1_U92 : component toThreshold_dcmp_64ns_64ns_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_25_fu_241_p0,
        din1 => tmp_25_fu_241_p1,
        opcode => tmp_25_fu_241_opcode,
        dout => tmp_25_fu_241_p2);

    toThreshold_uitodp_8ns_64_6_U93 : component toThreshold_uitodp_8ns_64_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 8,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_246_p0,
        ce => grp_fu_246_ce,
        dout => grp_fu_246_p1);

    toThreshold_sitodp_32ns_64_6_U94 : component toThreshold_sitodp_32ns_64_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_250_p0,
        ce => grp_fu_250_ce,
        dout => grp_fu_250_p1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond6_fu_265_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and not((exitcond5_fu_276_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond6_fu_265_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (exitcond5_fu_276_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond6_fu_265_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and not((exitcond5_fu_276_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it27 assign process. --
    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it28 assign process. --
    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it29 assign process. --
    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it30 assign process. --
    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it31 assign process. --
    ap_reg_ppiten_pp0_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it32 assign process. --
    ap_reg_ppiten_pp0_it32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it33 assign process. --
    ap_reg_ppiten_pp0_it33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it34 assign process. --
    ap_reg_ppiten_pp0_it34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it35 assign process. --
    ap_reg_ppiten_pp0_it35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it36 assign process. --
    ap_reg_ppiten_pp0_it36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it37 assign process. --
    ap_reg_ppiten_pp0_it37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it38 assign process. --
    ap_reg_ppiten_pp0_it38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it39 assign process. --
    ap_reg_ppiten_pp0_it39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it40 assign process. --
    ap_reg_ppiten_pp0_it40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it41 assign process. --
    ap_reg_ppiten_pp0_it41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it42 assign process. --
    ap_reg_ppiten_pp0_it42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it43 assign process. --
    ap_reg_ppiten_pp0_it43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it44 assign process. --
    ap_reg_ppiten_pp0_it44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it45 assign process. --
    ap_reg_ppiten_pp0_it45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it46 assign process. --
    ap_reg_ppiten_pp0_it46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it46 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it46 <= ap_reg_ppiten_pp0_it45;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it47 assign process. --
    ap_reg_ppiten_pp0_it47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it47 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it47 <= ap_reg_ppiten_pp0_it46;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it48 assign process. --
    ap_reg_ppiten_pp0_it48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it48 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it48 <= ap_reg_ppiten_pp0_it47;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it49 assign process. --
    ap_reg_ppiten_pp0_it49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it49 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it49 <= ap_reg_ppiten_pp0_it48;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it50 assign process. --
    ap_reg_ppiten_pp0_it50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it50 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it50 <= ap_reg_ppiten_pp0_it49;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it51 assign process. --
    ap_reg_ppiten_pp0_it51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it51 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it51 <= ap_reg_ppiten_pp0_it50;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it52 assign process. --
    ap_reg_ppiten_pp0_it52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it52 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it52 <= ap_reg_ppiten_pp0_it51;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it53 assign process. --
    ap_reg_ppiten_pp0_it53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it53 <= ap_reg_ppiten_pp0_it52;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it54 assign process. --
    ap_reg_ppiten_pp0_it54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it54 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it54 <= ap_reg_ppiten_pp0_it53;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it55 assign process. --
    ap_reg_ppiten_pp0_it55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it55 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it55 <= ap_reg_ppiten_pp0_it54;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it56 assign process. --
    ap_reg_ppiten_pp0_it56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it56 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it56 <= ap_reg_ppiten_pp0_it55;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond6_fu_265_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it56 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- col_reg_187 assign process. --
    col_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (exitcond5_fu_276_p2 = ap_const_lv1_0))) then 
                col_reg_187 <= col_1_fu_281_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond6_fu_265_p2 = ap_const_lv1_0))) then 
                col_reg_187 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- row_reg_176 assign process. --
    row_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st60_fsm_3)) then 
                row_reg_176 <= row_1_reg_591;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_55))) then 
                row_reg_176 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it10))) then
                abs_value_reg_637 <= grp_fu_203_p2;
                tmp_8_reg_632 <= grp_fu_199_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it11))) then
                abs_value_to_int_reg_644 <= abs_value_to_int_fu_305_p1;
                tmp_13_reg_649 <= tmp_13_fu_340_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it52))) then
                angle_reg_684 <= grp_fu_207_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))))) then
                ap_reg_ppstg_exitcond5_reg_596_pp0_it1 <= exitcond5_reg_596;
                exitcond5_reg_596 <= exitcond5_fu_276_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56))))) then
                ap_reg_ppstg_exitcond5_reg_596_pp0_it10 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it9;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it11 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it10;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it12 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it11;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it13 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it12;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it14 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it13;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it15 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it14;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it16 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it15;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it17 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it16;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it18 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it17;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it19 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it18;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it2 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it1;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it20 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it19;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it21 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it20;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it22 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it21;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it23 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it22;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it24 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it23;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it25 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it24;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it26 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it25;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it27 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it26;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it28 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it27;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it29 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it28;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it3 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it2;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it30 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it29;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it31 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it30;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it32 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it31;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it33 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it32;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it34 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it33;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it35 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it34;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it36 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it35;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it37 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it36;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it38 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it37;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it39 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it38;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it4 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it3;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it40 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it39;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it41 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it40;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it42 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it41;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it43 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it42;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it44 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it43;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it45 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it44;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it46 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it45;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it47 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it46;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it48 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it47;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it49 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it48;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it5 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it4;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it50 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it49;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it51 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it50;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it52 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it51;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it53 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it52;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it54 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it53;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it55 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it54;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it6 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it5;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it7 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it6;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it8 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it7;
                ap_reg_ppstg_exitcond5_reg_596_pp0_it9 <= ap_reg_ppstg_exitcond5_reg_596_pp0_it8;
                ap_reg_ppstg_result_V_reg_669_pp0_it15 <= result_V_reg_669;
                ap_reg_ppstg_result_V_reg_669_pp0_it16 <= ap_reg_ppstg_result_V_reg_669_pp0_it15;
                ap_reg_ppstg_result_V_reg_669_pp0_it17 <= ap_reg_ppstg_result_V_reg_669_pp0_it16;
                ap_reg_ppstg_result_V_reg_669_pp0_it18 <= ap_reg_ppstg_result_V_reg_669_pp0_it17;
                ap_reg_ppstg_result_V_reg_669_pp0_it19 <= ap_reg_ppstg_result_V_reg_669_pp0_it18;
                ap_reg_ppstg_result_V_reg_669_pp0_it20 <= ap_reg_ppstg_result_V_reg_669_pp0_it19;
                ap_reg_ppstg_result_V_reg_669_pp0_it21 <= ap_reg_ppstg_result_V_reg_669_pp0_it20;
                ap_reg_ppstg_result_V_reg_669_pp0_it22 <= ap_reg_ppstg_result_V_reg_669_pp0_it21;
                ap_reg_ppstg_result_V_reg_669_pp0_it23 <= ap_reg_ppstg_result_V_reg_669_pp0_it22;
                ap_reg_ppstg_result_V_reg_669_pp0_it24 <= ap_reg_ppstg_result_V_reg_669_pp0_it23;
                ap_reg_ppstg_result_V_reg_669_pp0_it25 <= ap_reg_ppstg_result_V_reg_669_pp0_it24;
                ap_reg_ppstg_result_V_reg_669_pp0_it26 <= ap_reg_ppstg_result_V_reg_669_pp0_it25;
                ap_reg_ppstg_result_V_reg_669_pp0_it27 <= ap_reg_ppstg_result_V_reg_669_pp0_it26;
                ap_reg_ppstg_result_V_reg_669_pp0_it28 <= ap_reg_ppstg_result_V_reg_669_pp0_it27;
                ap_reg_ppstg_result_V_reg_669_pp0_it29 <= ap_reg_ppstg_result_V_reg_669_pp0_it28;
                ap_reg_ppstg_result_V_reg_669_pp0_it30 <= ap_reg_ppstg_result_V_reg_669_pp0_it29;
                ap_reg_ppstg_result_V_reg_669_pp0_it31 <= ap_reg_ppstg_result_V_reg_669_pp0_it30;
                ap_reg_ppstg_result_V_reg_669_pp0_it32 <= ap_reg_ppstg_result_V_reg_669_pp0_it31;
                ap_reg_ppstg_result_V_reg_669_pp0_it33 <= ap_reg_ppstg_result_V_reg_669_pp0_it32;
                ap_reg_ppstg_result_V_reg_669_pp0_it34 <= ap_reg_ppstg_result_V_reg_669_pp0_it33;
                ap_reg_ppstg_result_V_reg_669_pp0_it35 <= ap_reg_ppstg_result_V_reg_669_pp0_it34;
                ap_reg_ppstg_result_V_reg_669_pp0_it36 <= ap_reg_ppstg_result_V_reg_669_pp0_it35;
                ap_reg_ppstg_result_V_reg_669_pp0_it37 <= ap_reg_ppstg_result_V_reg_669_pp0_it36;
                ap_reg_ppstg_result_V_reg_669_pp0_it38 <= ap_reg_ppstg_result_V_reg_669_pp0_it37;
                ap_reg_ppstg_result_V_reg_669_pp0_it39 <= ap_reg_ppstg_result_V_reg_669_pp0_it38;
                ap_reg_ppstg_result_V_reg_669_pp0_it40 <= ap_reg_ppstg_result_V_reg_669_pp0_it39;
                ap_reg_ppstg_result_V_reg_669_pp0_it41 <= ap_reg_ppstg_result_V_reg_669_pp0_it40;
                ap_reg_ppstg_result_V_reg_669_pp0_it42 <= ap_reg_ppstg_result_V_reg_669_pp0_it41;
                ap_reg_ppstg_result_V_reg_669_pp0_it43 <= ap_reg_ppstg_result_V_reg_669_pp0_it42;
                ap_reg_ppstg_result_V_reg_669_pp0_it44 <= ap_reg_ppstg_result_V_reg_669_pp0_it43;
                ap_reg_ppstg_result_V_reg_669_pp0_it45 <= ap_reg_ppstg_result_V_reg_669_pp0_it44;
                ap_reg_ppstg_result_V_reg_669_pp0_it46 <= ap_reg_ppstg_result_V_reg_669_pp0_it45;
                ap_reg_ppstg_result_V_reg_669_pp0_it47 <= ap_reg_ppstg_result_V_reg_669_pp0_it46;
                ap_reg_ppstg_result_V_reg_669_pp0_it48 <= ap_reg_ppstg_result_V_reg_669_pp0_it47;
                ap_reg_ppstg_result_V_reg_669_pp0_it49 <= ap_reg_ppstg_result_V_reg_669_pp0_it48;
                ap_reg_ppstg_result_V_reg_669_pp0_it50 <= ap_reg_ppstg_result_V_reg_669_pp0_it49;
                ap_reg_ppstg_result_V_reg_669_pp0_it51 <= ap_reg_ppstg_result_V_reg_669_pp0_it50;
                ap_reg_ppstg_result_V_reg_669_pp0_it52 <= ap_reg_ppstg_result_V_reg_669_pp0_it51;
                ap_reg_ppstg_result_V_reg_669_pp0_it53 <= ap_reg_ppstg_result_V_reg_669_pp0_it52;
                ap_reg_ppstg_result_V_reg_669_pp0_it54 <= ap_reg_ppstg_result_V_reg_669_pp0_it53;
                ap_reg_ppstg_result_V_reg_669_pp0_it55 <= ap_reg_ppstg_result_V_reg_669_pp0_it54;
                ap_reg_ppstg_tmp_23_reg_703_pp0_it55 <= tmp_23_reg_703;
                ap_reg_ppstg_tmp_5_reg_610_pp0_it2 <= tmp_5_reg_610;
                ap_reg_ppstg_tmp_5_reg_610_pp0_it3 <= ap_reg_ppstg_tmp_5_reg_610_pp0_it2;
                ap_reg_ppstg_tmp_5_reg_610_pp0_it4 <= ap_reg_ppstg_tmp_5_reg_610_pp0_it3;
                ap_reg_ppstg_tmp_5_reg_610_pp0_it5 <= ap_reg_ppstg_tmp_5_reg_610_pp0_it4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it12))) then
                isNeg_reg_654 <= sh_assign_fu_382_p2(11 downto 11);
                tmp_30_reg_664 <= tmp_88_i_i_fu_432_p2(59 downto 52);
                tmp_32_reg_659 <= tmp_86_i_i_fu_422_p2(52 downto 52);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it41))) then
                r_reg_674 <= grp_fu_217_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it13))) then
                result_V_reg_669 <= result_V_fu_459_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                row_1_reg_591 <= row_1_fu_270_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it54))) then
                tmp9_demorgan_reg_720 <= tmp9_demorgan_fu_522_p2;
                tmp_21_reg_713 <= tmp_21_fu_518_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it47))) then
                tmp_14_reg_679 <= grp_fu_212_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it53))) then
                tmp_19_reg_693 <= tmp_19_fu_500_p2;
                tmp_20_reg_698 <= tmp_20_fu_231_p2;
                tmp_23_reg_703 <= tmp_23_fu_506_p2;
                tmp_26_reg_708 <= tmp_26_fu_512_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond5_reg_596 = ap_const_lv1_0) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))))) then
                tmp_5_reg_610 <= tmp_5_fu_287_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it5))) then
                tmp_7_reg_626 <= grp_fu_250_p1;
                y1_reg_620 <= y1_fu_298_p3;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_55, exitcond6_fu_265_p2, exitcond5_fu_276_p2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it55, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_55)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond6_fu_265_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it56) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it55)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and not((exitcond5_fu_276_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it56) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it55))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and not((exitcond5_fu_276_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st60_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st60_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    abs_value_to_int_fu_305_p1 <= abs_value_reg_637;
    absvalueMat_data_stream_0_V_din <= ap_reg_ppstg_result_V_reg_669_pp0_it55;

    -- absvalueMat_data_stream_0_V_write assign process. --
    absvalueMat_data_stream_0_V_write_assign_proc : process(ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond5_reg_596_pp0_it55, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it55) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))))) then 
            absvalueMat_data_stream_0_V_write <= ap_const_logic_1;
        else 
            absvalueMat_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    angleMat_data_stream_0_V_din <= 
        sel_tmp4_fu_555_p3 when (sel_tmp7_demorgan_fu_563_p2(0) = '1') else 
        ap_const_lv8_2D;

    -- angleMat_data_stream_0_V_write assign process. --
    angleMat_data_stream_0_V_write_assign_proc : process(ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond5_reg_596_pp0_it55, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it55) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))))) then 
            angleMat_data_stream_0_V_write <= ap_const_logic_1;
        else 
            angleMat_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    angle_to_int_fu_465_p1 <= angle_reg_684;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond6_fu_265_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond6_fu_265_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond6_fu_265_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond6_fu_265_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_208 assign process. --
    ap_sig_bdd_208_assign_proc : process(absvalueMat_data_stream_0_V_full_n, angleMat_data_stream_0_V_full_n, ap_reg_ppstg_exitcond5_reg_596_pp0_it55)
    begin
                ap_sig_bdd_208 <= (((absvalueMat_data_stream_0_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it55)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it55) and (angleMat_data_stream_0_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_496 assign process. --
    ap_sig_bdd_496_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_496 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_55 assign process. --
    ap_sig_bdd_55_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_55 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_67 assign process. --
    ap_sig_bdd_67_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_67 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_78 assign process. --
    ap_sig_bdd_78_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_78 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_89 assign process. --
    ap_sig_bdd_89_assign_proc : process(sobelxMat_data_stream_0_V_empty_n, sobelyMat_data_stream_0_V_empty_n, exitcond5_reg_596)
    begin
                ap_sig_bdd_89 <= (((sobelxMat_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond5_reg_596 = ap_const_lv1_0)) or ((exitcond5_reg_596 = ap_const_lv1_0) and (sobelyMat_data_stream_0_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_78)
    begin
        if (ap_sig_bdd_78) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_67)
    begin
        if (ap_sig_bdd_67) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st60_fsm_3 assign process. --
    ap_sig_cseq_ST_st60_fsm_3_assign_proc : process(ap_sig_bdd_496)
    begin
        if (ap_sig_bdd_496) then 
            ap_sig_cseq_ST_st60_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st60_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    col_1_fu_281_p2 <= std_logic_vector(unsigned(col_reg_187) + unsigned(ap_const_lv12_1));
    exitcond5_fu_276_p2 <= "1" when (col_reg_187 = tmp_1_fu_257_p1) else "0";
    exitcond6_fu_265_p2 <= "1" when (row_cast_fu_261_p1 = tmp_fu_253_p1) else "0";

    -- grp_fu_199_ce assign process. --
    grp_fu_199_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56, ap_reg_ppstg_exitcond5_reg_596_pp0_it6, ap_reg_ppstg_exitcond5_reg_596_pp0_it7, ap_reg_ppstg_exitcond5_reg_596_pp0_it8, ap_reg_ppstg_exitcond5_reg_596_pp0_it9, ap_reg_ppstg_exitcond5_reg_596_pp0_it10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it10) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it6) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it7) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it8) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it9)))) then 
            grp_fu_199_ce <= ap_const_logic_1;
        else 
            grp_fu_199_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_199_p0 <= tmp_7_reg_626;
    grp_fu_199_p1 <= y1_reg_620;

    -- grp_fu_203_ce assign process. --
    grp_fu_203_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56, ap_reg_ppstg_exitcond5_reg_596_pp0_it6, ap_reg_ppstg_exitcond5_reg_596_pp0_it7, ap_reg_ppstg_exitcond5_reg_596_pp0_it8, ap_reg_ppstg_exitcond5_reg_596_pp0_it9, ap_reg_ppstg_exitcond5_reg_596_pp0_it10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it10) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it6) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it7) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it8) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it9)))) then 
            grp_fu_203_ce <= ap_const_logic_1;
        else 
            grp_fu_203_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_203_p0 <= tmp_7_reg_626;
    grp_fu_203_p1 <= y1_reg_620;

    -- grp_fu_207_ce assign process. --
    grp_fu_207_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56, ap_reg_ppstg_exitcond5_reg_596_pp0_it48, ap_reg_ppstg_exitcond5_reg_596_pp0_it49, ap_reg_ppstg_exitcond5_reg_596_pp0_it50, ap_reg_ppstg_exitcond5_reg_596_pp0_it51, ap_reg_ppstg_exitcond5_reg_596_pp0_it52)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it52) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it48) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it49) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it50) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it51)))) then 
            grp_fu_207_ce <= ap_const_logic_1;
        else 
            grp_fu_207_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_207_p0 <= ap_const_lv64_3FE921FB540D8D20;
    grp_fu_207_p1 <= tmp_14_reg_679;

    -- grp_fu_212_ce assign process. --
    grp_fu_212_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56, ap_reg_ppstg_exitcond5_reg_596_pp0_it42, ap_reg_ppstg_exitcond5_reg_596_pp0_it43, ap_reg_ppstg_exitcond5_reg_596_pp0_it44, ap_reg_ppstg_exitcond5_reg_596_pp0_it45, ap_reg_ppstg_exitcond5_reg_596_pp0_it46, ap_reg_ppstg_exitcond5_reg_596_pp0_it47)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it47) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it42) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it43) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it44) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it45) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it46)))) then 
            grp_fu_212_ce <= ap_const_logic_1;
        else 
            grp_fu_212_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_212_p0 <= r_reg_674;
    grp_fu_212_p1 <= ap_const_lv64_3FE921FB540D8D20;

    -- grp_fu_217_ce assign process. --
    grp_fu_217_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56, ap_reg_ppstg_exitcond5_reg_596_pp0_it11, ap_reg_ppstg_exitcond5_reg_596_pp0_it12, ap_reg_ppstg_exitcond5_reg_596_pp0_it13, ap_reg_ppstg_exitcond5_reg_596_pp0_it14, ap_reg_ppstg_exitcond5_reg_596_pp0_it15, ap_reg_ppstg_exitcond5_reg_596_pp0_it16, ap_reg_ppstg_exitcond5_reg_596_pp0_it17, ap_reg_ppstg_exitcond5_reg_596_pp0_it18, ap_reg_ppstg_exitcond5_reg_596_pp0_it19, ap_reg_ppstg_exitcond5_reg_596_pp0_it20, ap_reg_ppstg_exitcond5_reg_596_pp0_it21, ap_reg_ppstg_exitcond5_reg_596_pp0_it22, ap_reg_ppstg_exitcond5_reg_596_pp0_it23, ap_reg_ppstg_exitcond5_reg_596_pp0_it24, ap_reg_ppstg_exitcond5_reg_596_pp0_it25, ap_reg_ppstg_exitcond5_reg_596_pp0_it26, ap_reg_ppstg_exitcond5_reg_596_pp0_it27, ap_reg_ppstg_exitcond5_reg_596_pp0_it28, ap_reg_ppstg_exitcond5_reg_596_pp0_it29, ap_reg_ppstg_exitcond5_reg_596_pp0_it30, ap_reg_ppstg_exitcond5_reg_596_pp0_it31, ap_reg_ppstg_exitcond5_reg_596_pp0_it32, ap_reg_ppstg_exitcond5_reg_596_pp0_it33, ap_reg_ppstg_exitcond5_reg_596_pp0_it34, ap_reg_ppstg_exitcond5_reg_596_pp0_it35, ap_reg_ppstg_exitcond5_reg_596_pp0_it36, ap_reg_ppstg_exitcond5_reg_596_pp0_it37, ap_reg_ppstg_exitcond5_reg_596_pp0_it38, ap_reg_ppstg_exitcond5_reg_596_pp0_it39, ap_reg_ppstg_exitcond5_reg_596_pp0_it40, ap_reg_ppstg_exitcond5_reg_596_pp0_it41)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it11) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it12) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it13) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it41) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it14) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it15) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it16) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it17) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it18) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it19) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it20) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it21) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it22) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it23) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it24) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it25) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it26) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it27) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it28) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it29) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it30) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it31) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it32) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it33) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it34) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it35) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it36) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it37) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it38) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it39) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it40)))) then 
            grp_fu_217_ce <= ap_const_logic_1;
        else 
            grp_fu_217_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_217_p0 <= tmp_8_reg_632;
    grp_fu_217_p1 <= abs_value_reg_637;

    -- grp_fu_246_ce assign process. --
    grp_fu_246_ce_assign_proc : process(exitcond5_reg_596, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56, ap_reg_ppstg_exitcond5_reg_596_pp0_it1, ap_reg_ppstg_exitcond5_reg_596_pp0_it2, ap_reg_ppstg_exitcond5_reg_596_pp0_it3, ap_reg_ppstg_exitcond5_reg_596_pp0_it4, ap_reg_ppstg_exitcond5_reg_596_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and ((exitcond5_reg_596 = ap_const_lv1_0) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it4)))) then 
            grp_fu_246_ce <= ap_const_logic_1;
        else 
            grp_fu_246_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_246_p0 <= sobelyMat_data_stream_0_V_dout;

    -- grp_fu_250_ce assign process. --
    grp_fu_250_ce_assign_proc : process(exitcond5_reg_596, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56, ap_reg_ppstg_exitcond5_reg_596_pp0_it1, ap_reg_ppstg_exitcond5_reg_596_pp0_it2, ap_reg_ppstg_exitcond5_reg_596_pp0_it3, ap_reg_ppstg_exitcond5_reg_596_pp0_it4, ap_reg_ppstg_exitcond5_reg_596_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))) and ((exitcond5_reg_596 = ap_const_lv1_0) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond5_reg_596_pp0_it4)))) then 
            grp_fu_250_ce <= ap_const_logic_1;
        else 
            grp_fu_250_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_250_p0 <= std_logic_vector(resize(unsigned(sobelxMat_data_stream_0_V_dout),32));
    isNeg_fu_388_p3 <= sh_assign_fu_382_p2(11 downto 11);
    loc_V_1_fu_362_p1 <= p_Val2_s_fu_346_p3(52 - 1 downto 0);
    loc_V_fu_352_p4 <= p_Val2_s_fu_346_p3(62 downto 52);
    notlhs1_fu_482_p2 <= "0" when (tmp_15_fu_468_p4 = ap_const_lv11_7FF) else "1";
    notlhs_fu_322_p2 <= "0" when (tmp_9_fu_308_p4 = ap_const_lv11_7FF) else "1";
    notrhs1_fu_488_p2 <= "1" when (tmp_16_fu_478_p1 = ap_const_lv52_0) else "0";
    notrhs_fu_328_p2 <= "1" when (tmp_10_fu_318_p1 = ap_const_lv52_0) else "0";
    p_Result_s_fu_366_p3 <= (ap_const_lv1_1 & loc_V_1_fu_362_p1);
    p_Val2_s_fu_346_p3 <= 
        ap_const_lv64_406FE00000000000 when (tmp_13_reg_649(0) = '1') else 
        abs_value_to_int_reg_644;
    result_V_fu_459_p3 <= 
        tmp_28_fu_456_p1 when (isNeg_reg_654(0) = '1') else 
        tmp_30_reg_664;
    row_1_fu_270_p2 <= std_logic_vector(unsigned(row_reg_176) + unsigned(ap_const_lv11_1));
    row_cast_fu_261_p1 <= std_logic_vector(resize(unsigned(row_reg_176),12));
    sel_tmp2_fu_537_p2 <= (tmp9_fu_532_p2 and tmp_24_fu_527_p2);
    sel_tmp3_fu_543_p3 <= 
        ap_const_lv8_0 when (tmp_21_reg_713(0) = '1') else 
        ap_const_lv8_87;
    sel_tmp4_fu_555_p3 <= 
        sel_tmp3_fu_543_p3 when (tmp_27_fu_550_p2(0) = '1') else 
        ap_const_lv8_5A;
    sel_tmp7_demorgan_fu_563_p2 <= (tmp_21_reg_713 or tmp_24_fu_527_p2);
    sh_assign_1_fu_406_p3 <= 
        tmp_i_cast_i_41_fu_402_p1 when (isNeg_fu_388_p3(0) = '1') else 
        sh_assign_fu_382_p2;
        sh_assign_1_i_cast_i_fu_414_p1 <= std_logic_vector(resize(signed(sh_assign_1_fu_406_p3),32));

    sh_assign_fu_382_p2 <= std_logic_vector(unsigned(tmp_i_i_cast_i_fu_378_p1) + unsigned(ap_const_lv12_C01));

    -- sobelxMat_data_stream_0_V_read assign process. --
    sobelxMat_data_stream_0_V_read_assign_proc : process(exitcond5_reg_596, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond5_reg_596 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))))) then 
            sobelxMat_data_stream_0_V_read <= ap_const_logic_1;
        else 
            sobelxMat_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- sobelyMat_data_stream_0_V_read assign process. --
    sobelyMat_data_stream_0_V_read_assign_proc : process(exitcond5_reg_596, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_89, ap_reg_ppiten_pp0_it1, ap_sig_bdd_208, ap_reg_ppiten_pp0_it56)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond5_reg_596 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_89 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_208 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it56)))))) then 
            sobelyMat_data_stream_0_V_read <= ap_const_logic_1;
        else 
            sobelyMat_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp9_demorgan_fu_522_p2 <= (tmp_26_reg_708 or tmp_21_fu_518_p2);
    tmp9_fu_532_p2 <= (tmp9_demorgan_reg_720 xor ap_const_lv1_1);
    tmp_10_fu_318_p1 <= abs_value_to_int_fu_305_p1(52 - 1 downto 0);
    tmp_11_fu_334_p2 <= (notrhs_fu_328_p2 or notlhs_fu_322_p2);
    tmp_12_fu_221_opcode <= ap_const_lv5_2;
    tmp_12_fu_221_p0 <= abs_value_reg_637;
    tmp_12_fu_221_p1 <= ap_const_lv64_406FE00000000000;
    tmp_13_fu_340_p2 <= (tmp_11_fu_334_p2 and tmp_12_fu_221_p2);
    tmp_15_fu_468_p4 <= angle_to_int_fu_465_p1(62 downto 52);
    tmp_16_fu_478_p1 <= angle_to_int_fu_465_p1(52 - 1 downto 0);
    tmp_17_fu_494_p2 <= (notrhs1_fu_488_p2 or notlhs1_fu_482_p2);
    tmp_18_fu_226_opcode <= ap_const_lv5_5;
    tmp_18_fu_226_p0 <= angle_reg_684;
    tmp_18_fu_226_p1 <= ap_const_lv64_3FD921FB5496FD7F;
    tmp_19_fu_500_p2 <= (tmp_17_fu_494_p2 and tmp_18_fu_226_p2);
    tmp_1_fu_257_p1 <= cols(12 - 1 downto 0);
    tmp_20_fu_231_opcode <= ap_const_lv5_2;
    tmp_20_fu_231_p0 <= angle_reg_684;
    tmp_20_fu_231_p1 <= ap_const_lv64_4005FDBBE9B14F3A;
    tmp_21_fu_518_p2 <= (tmp_19_reg_693 and tmp_20_reg_698);
    tmp_22_fu_236_opcode <= ap_const_lv5_5;
    tmp_22_fu_236_p0 <= angle_reg_684;
    tmp_22_fu_236_p1 <= ap_const_lv64_3FF2D97C80841EDE;
    tmp_23_fu_506_p2 <= (tmp_17_fu_494_p2 and tmp_22_fu_236_p2);
    tmp_24_fu_527_p2 <= (ap_reg_ppstg_tmp_23_reg_703_pp0_it55 xor ap_const_lv1_1);
    tmp_25_fu_241_opcode <= ap_const_lv5_5;
    tmp_25_fu_241_p0 <= angle_reg_684;
    tmp_25_fu_241_p1 <= ap_const_lv64_3FFF6A7A29BCBCDF;
    tmp_26_fu_512_p2 <= (tmp_17_fu_494_p2 and tmp_25_fu_241_p2);
    tmp_27_fu_550_p2 <= (tmp_21_reg_713 or sel_tmp2_fu_537_p2);
    tmp_28_fu_456_p1 <= std_logic_vector(resize(unsigned(tmp_32_reg_659),8));
    tmp_5_fu_287_p2 <= "1" when (sobelyMat_data_stream_0_V_dout = ap_const_lv8_0) else "0";
    tmp_85_i_cast_i_fu_418_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_i_cast_i_fu_414_p1),53));
    tmp_86_i_i_fu_422_p2 <= std_logic_vector(shift_right(unsigned(p_Result_s_fu_366_p3),to_integer(unsigned('0' & tmp_85_i_cast_i_fu_418_p1(31-1 downto 0)))));
    tmp_87_i_cast_i_fu_428_p1 <= std_logic_vector(resize(unsigned(sh_assign_1_i_cast_i_fu_414_p1),60));
    tmp_88_i_i_fu_432_p2 <= std_logic_vector(shift_left(unsigned(tmp_i_cast_i_fu_374_p1),to_integer(unsigned('0' & tmp_87_i_cast_i_fu_428_p1(31-1 downto 0)))));
    tmp_9_fu_308_p4 <= abs_value_to_int_fu_305_p1(62 downto 52);
    tmp_fu_253_p1 <= rows(12 - 1 downto 0);
        tmp_i_cast_i_41_fu_402_p1 <= std_logic_vector(resize(signed(tmp_i_i_fu_396_p2),12));

    tmp_i_cast_i_fu_374_p1 <= std_logic_vector(resize(unsigned(p_Result_s_fu_366_p3),60));
    tmp_i_i_cast_i_fu_378_p1 <= std_logic_vector(resize(unsigned(loc_V_fu_352_p4),12));
    tmp_i_i_fu_396_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(loc_V_fu_352_p4));
    y1_fu_298_p3 <= 
        ap_const_lv64_3FF0000000000000 when (ap_reg_ppstg_tmp_5_reg_610_pp0_it5(0) = '1') else 
        grp_fu_246_p1;
end behav;

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity toThreshold_Dilate_0_0_1080_1920_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of toThreshold_Dilate_0_0_1080_1920_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st12_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv12_FFC : STD_LOGIC_VECTOR (11 downto 0) := "111111111100";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_FFB : STD_LOGIC_VECTOR (11 downto 0) := "111111111011";
    constant ap_const_lv12_FFA : STD_LOGIC_VECTOR (11 downto 0) := "111111111010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal p_025_0_i_i_reg_265 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_bdd_47 : BOOLEAN;
    signal heightloop_fu_357_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal heightloop_reg_1156 : STD_LOGIC_VECTOR (10 downto 0);
    signal widthloop_fu_363_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal widthloop_reg_1161 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_93_cast_fu_375_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_93_cast_reg_1166 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_neg228_i_i_cast_fu_383_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_neg228_i_i_cast_reg_1171 : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_fu_389_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ref_reg_1177 : STD_LOGIC_VECTOR (10 downto 0);
    signal ref_cast_fu_395_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ref_cast_reg_1182 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_87_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_71 : BOOLEAN;
    signal i_V_fu_408_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1191 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_88_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_reg_1196 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_y_cast_fu_426_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_y_cast_reg_1201 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_124_reg_1206 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_fu_478_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_125_reg_1210 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_1_cast_fu_488_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_1_cast_reg_1216 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_126_fu_492_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_126_reg_1221 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_1_1_cast_fu_502_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal y_1_1_cast_reg_1228 : STD_LOGIC_VECTOR (12 downto 0);
    signal brmerge_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_1237 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_102 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_91_reg_1237_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_1254 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1254_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_125 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal or_cond221_i_i_reg_1246 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_141 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_91_reg_1237_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_91_reg_1237_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_91_reg_1237_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_91_reg_1237_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_91_reg_1237_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_521_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond221_i_i_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_reg_1250 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_95_reg_1250_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_95_reg_1250_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_95_reg_1250_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_95_reg_1250_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1254_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1254_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond2_reg_1254_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_130_reg_1258_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_130_reg_1258_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_130_reg_1258_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_130_reg_1258_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_96_reg_1262_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_96_reg_1262_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_96_reg_1262_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_fu_593_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_reg_1266 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_reg_1266_pp0_it1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_reg_1266_pp0_it2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_reg_1266_pp0_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_277_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal x_reg_1272 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_129_fu_598_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_129_reg_1277 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_133_fu_602_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_133_reg_1282 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_0_addr_reg_1287 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_1_addr_reg_1293 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_2_addr_reg_1299 : STD_LOGIC_VECTOR (10 downto 0);
    signal locy_2_t_fu_616_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal locy_2_t_reg_1305 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_2_fu_620_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_2_reg_1309 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_0_reg_1315 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_0_reg_1320 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_reg_1328 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_131_fu_629_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_131_reg_1335 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_fu_633_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_reg_1341 : STD_LOGIC_VECTOR (1 downto 0);
    signal src_kernel_win_0_val_0_1_18_reg_1347 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_18_reg_1354 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_1_18_reg_1354_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_057_i_i_1_0_1_fu_909_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_057_i_i_1_0_1_reg_1361 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_lo_reg_1367 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1367_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_lo_reg_1373 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_057_i_i_1_1_fu_952_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_057_i_i_1_1_reg_1379 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_192_1_1_fu_960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_1_1_reg_1384 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_057_i_i_1_2_fu_995_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_057_i_i_1_2_reg_1389 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_0_ce0 : STD_LOGIC;
    signal k_buf_0_val_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_0_ce1 : STD_LOGIC;
    signal k_buf_0_val_0_we1 : STD_LOGIC;
    signal k_buf_0_val_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_1_ce0 : STD_LOGIC;
    signal k_buf_0_val_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_1_ce1 : STD_LOGIC;
    signal k_buf_0_val_1_we1 : STD_LOGIC;
    signal k_buf_0_val_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_2_ce0 : STD_LOGIC;
    signal k_buf_0_val_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_2_ce1 : STD_LOGIC;
    signal k_buf_0_val_2_we1 : STD_LOGIC;
    signal k_buf_0_val_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_277_p : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_277_len : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_277_borderType : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_277_ap_ce : STD_LOGIC;
    signal grp_toThreshold_borderInterpolate_fu_285_p : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_285_len : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_285_borderType : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_285_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_285_ap_ce : STD_LOGIC;
    signal grp_toThreshold_borderInterpolate_fu_293_p : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_293_len : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_293_borderType : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_293_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_293_ap_ce : STD_LOGIC;
    signal grp_toThreshold_borderInterpolate_fu_301_p : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_301_len : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_301_borderType : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_301_ap_return : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_toThreshold_borderInterpolate_fu_301_ap_ce : STD_LOGIC;
    signal p_012_0_i_i_reg_254 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_384 : BOOLEAN;
    signal tmp_93_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_val_0_1_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_762_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_37_fu_850_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_2_fu_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_30_fu_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_fu_120 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_794_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_11_fu_867_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_2_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_31_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_2_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_32_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_1_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_8_fu_705_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_2_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_6_fu_696_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_7_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_4_fu_679_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_0_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_2_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_349_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_121_fu_353_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_86_fu_369_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_122_fu_379_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_cast_cast3_fu_399_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_y_fu_420_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_123_fu_436_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_i_fu_471_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_1_fu_482_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal y_1_1_fu_496_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_89_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_fu_527_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp3_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_cast_fu_512_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_548_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_94_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_554_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_3_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp16_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal right_border_buf_0_val_1_2_3_fu_666_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_5_fu_688_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp8_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal locy_fu_738_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp10_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_749_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp12_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal locy_1_t_fu_770_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp14_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_781_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_buf_0_val_0_0_33_fu_837_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_2_fu_859_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_192_0_1_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_0_2_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_057_i_i_1_0_2_fu_939_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_192_1_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_057_i_i_1_1_1_fu_972_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_192_1_2_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_057_i_i_1_1_2_fu_982_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_192_2_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_192_2_1_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_057_i_i_1_2_1_fu_1011_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_192_2_2_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component toThreshold_borderInterpolate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p : IN STD_LOGIC_VECTOR (12 downto 0);
        len : IN STD_LOGIC_VECTOR (11 downto 0);
        borderType : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (14 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component toThreshold_Dilate_0_0_1080_1920_s_k_buf_0_val_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_0_U : component toThreshold_Dilate_0_0_1080_1920_s_k_buf_0_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_0_address0,
        ce0 => k_buf_0_val_0_ce0,
        q0 => k_buf_0_val_0_q0,
        address1 => k_buf_0_val_0_address1,
        ce1 => k_buf_0_val_0_ce1,
        we1 => k_buf_0_val_0_we1,
        d1 => k_buf_0_val_0_d1);

    k_buf_0_val_1_U : component toThreshold_Dilate_0_0_1080_1920_s_k_buf_0_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_1_address0,
        ce0 => k_buf_0_val_1_ce0,
        q0 => k_buf_0_val_1_q0,
        address1 => k_buf_0_val_1_address1,
        ce1 => k_buf_0_val_1_ce1,
        we1 => k_buf_0_val_1_we1,
        d1 => k_buf_0_val_1_d1);

    k_buf_0_val_2_U : component toThreshold_Dilate_0_0_1080_1920_s_k_buf_0_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_2_address0,
        ce0 => k_buf_0_val_2_ce0,
        q0 => k_buf_0_val_2_q0,
        address1 => k_buf_0_val_2_address1,
        ce1 => k_buf_0_val_2_ce1,
        we1 => k_buf_0_val_2_we1,
        d1 => k_buf_0_val_2_d1);

    grp_toThreshold_borderInterpolate_fu_277 : component toThreshold_borderInterpolate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p => grp_toThreshold_borderInterpolate_fu_277_p,
        len => grp_toThreshold_borderInterpolate_fu_277_len,
        borderType => grp_toThreshold_borderInterpolate_fu_277_borderType,
        ap_return => grp_toThreshold_borderInterpolate_fu_277_ap_return,
        ap_ce => grp_toThreshold_borderInterpolate_fu_277_ap_ce);

    grp_toThreshold_borderInterpolate_fu_285 : component toThreshold_borderInterpolate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p => grp_toThreshold_borderInterpolate_fu_285_p,
        len => grp_toThreshold_borderInterpolate_fu_285_len,
        borderType => grp_toThreshold_borderInterpolate_fu_285_borderType,
        ap_return => grp_toThreshold_borderInterpolate_fu_285_ap_return,
        ap_ce => grp_toThreshold_borderInterpolate_fu_285_ap_ce);

    grp_toThreshold_borderInterpolate_fu_293 : component toThreshold_borderInterpolate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p => grp_toThreshold_borderInterpolate_fu_293_p,
        len => grp_toThreshold_borderInterpolate_fu_293_len,
        borderType => grp_toThreshold_borderInterpolate_fu_293_borderType,
        ap_return => grp_toThreshold_borderInterpolate_fu_293_ap_return,
        ap_ce => grp_toThreshold_borderInterpolate_fu_293_ap_ce);

    grp_toThreshold_borderInterpolate_fu_301 : component toThreshold_borderInterpolate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p => grp_toThreshold_borderInterpolate_fu_301_p,
        len => grp_toThreshold_borderInterpolate_fu_301_len,
        borderType => grp_toThreshold_borderInterpolate_fu_301_borderType,
        ap_return => grp_toThreshold_borderInterpolate_fu_301_ap_return,
        ap_ce => grp_toThreshold_borderInterpolate_fu_301_ap_ce);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_87_fu_403_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_91_fu_516_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_87_fu_403_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_87_fu_403_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))) then 
                        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then 
                        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_87_fu_403_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_012_0_i_i_reg_254 assign process. --
    p_012_0_i_i_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_3)) then 
                p_012_0_i_i_reg_254 <= i_V_reg_1191;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_47))) then 
                p_012_0_i_i_reg_254 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_025_0_i_i_reg_265 assign process. --
    p_025_0_i_i_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_91_fu_516_p2)))) then 
                p_025_0_i_i_reg_265 <= j_V_fu_521_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_87_fu_403_p2 = ap_const_lv1_0)))) then 
                p_025_0_i_i_reg_265 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- src_kernel_win_0_val_0_1_fu_108 assign process. --
    src_kernel_win_0_val_0_1_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4))) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4))))) then 
                src_kernel_win_0_val_0_1_fu_108 <= right_border_buf_0_val_2_0_reg_1315;
            elsif (((not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_1)) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_0)) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and not((ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_1)) and not((ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_0))))) then 
                src_kernel_win_0_val_0_1_fu_108 <= col_buf_0_val_0_0_37_fu_850_p3;
            elsif ((((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_1)) or ((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_0)) or ((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and not((ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_1)) and not((ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_0))))) then 
                src_kernel_win_0_val_0_1_fu_108 <= src_kernel_win_0_val_0_0_fu_762_p3;
            end if; 
        end if;
    end process;

    -- src_kernel_win_0_val_1_1_fu_124 assign process. --
    src_kernel_win_0_val_1_1_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4))) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4))))) then 
                src_kernel_win_0_val_1_1_fu_124 <= right_border_buf_0_val_1_0_reg_1320;
            elsif (((not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_1)) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_0)) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and not((ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_1)) and not((ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_0))))) then 
                src_kernel_win_0_val_1_1_fu_124 <= right_border_buf_0_val_1_2_11_fu_867_p3;
            elsif ((((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_1)) or ((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_0)) or ((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and not((ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_1)) and not((ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_0))))) then 
                src_kernel_win_0_val_1_1_fu_124 <= src_kernel_win_0_val_1_0_fu_794_p3;
            end if; 
        end if;
    end process;

    -- src_kernel_win_0_val_2_1_fu_120 assign process. --
    src_kernel_win_0_val_2_1_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and not((ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_1)) and not((ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_0)))) then 
                src_kernel_win_0_val_2_1_fu_120 <= right_border_buf_0_val_0_2_fu_176;
            elsif ((not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_0))) then 
                src_kernel_win_0_val_2_1_fu_120 <= right_border_buf_0_val_0_0_fu_168;
            elsif ((not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it4) and (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_1))) then 
                src_kernel_win_0_val_2_1_fu_120 <= right_border_buf_0_val_0_1_fu_172;
            elsif ((((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and not((ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_1)) and not((ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_0))) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it4))) or (not((ap_const_lv1_0 = brmerge_reg_1233)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it4))))) then 
                src_kernel_win_0_val_2_1_fu_120 <= src_kernel_win_0_val_2_0_reg_1328;
            elsif (((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_0))) then 
                src_kernel_win_0_val_2_1_fu_120 <= col_buf_0_val_0_0_fu_180;
            elsif (((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and (ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 = ap_const_lv2_1))) then 
                src_kernel_win_0_val_2_1_fu_120 <= right_border_buf_0_val_1_0_reg_1320;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_87_fu_403_p2 = ap_const_lv1_0)))) then
                ImagLoc_y_cast_reg_1201 <= ImagLoc_y_cast_fu_426_p1;
                brmerge_reg_1233 <= brmerge_fu_506_p2;
                tmp_124_reg_1206 <= ImagLoc_y_fu_420_p2(11 downto 11);
                tmp_125_reg_1210 <= tmp_125_fu_478_p1;
                tmp_126_reg_1221 <= tmp_126_fu_492_p1;
                tmp_88_reg_1196 <= tmp_88_fu_414_p2;
                y_1_1_cast_reg_1228 <= y_1_1_cast_fu_502_p1;
                y_1_cast_reg_1216 <= y_1_cast_fu_488_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))) then
                ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 <= col_assign_2_reg_1309;
                ap_reg_ppstg_col_assign_reg_1266_pp0_it2 <= ap_reg_ppstg_col_assign_reg_1266_pp0_it1;
                ap_reg_ppstg_col_assign_reg_1266_pp0_it3 <= ap_reg_ppstg_col_assign_reg_1266_pp0_it2;
                ap_reg_ppstg_locy_2_t_reg_1305_pp0_it4 <= locy_2_t_reg_1305;
                ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it2 <= ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it1;
                ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it3 <= ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it2;
                ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it4 <= ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it3;
                ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it5 <= ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it4;
                ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it6 <= ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it5;
                ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it7 <= ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it6;
                ap_reg_ppstg_or_cond2_reg_1254_pp0_it2 <= ap_reg_ppstg_or_cond2_reg_1254_pp0_it1;
                ap_reg_ppstg_or_cond2_reg_1254_pp0_it3 <= ap_reg_ppstg_or_cond2_reg_1254_pp0_it2;
                ap_reg_ppstg_or_cond2_reg_1254_pp0_it4 <= ap_reg_ppstg_or_cond2_reg_1254_pp0_it3;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it6 <= src_kernel_win_0_val_0_1_18_reg_1347;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it7 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it6;
                ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1367_pp0_it7 <= src_kernel_win_0_val_0_1_lo_reg_1367;
                ap_reg_ppstg_src_kernel_win_0_val_1_1_18_reg_1354_pp0_it6 <= src_kernel_win_0_val_1_1_18_reg_1354;
                ap_reg_ppstg_tmp_130_reg_1258_pp0_it2 <= ap_reg_ppstg_tmp_130_reg_1258_pp0_it1;
                ap_reg_ppstg_tmp_130_reg_1258_pp0_it3 <= ap_reg_ppstg_tmp_130_reg_1258_pp0_it2;
                ap_reg_ppstg_tmp_130_reg_1258_pp0_it4 <= ap_reg_ppstg_tmp_130_reg_1258_pp0_it3;
                ap_reg_ppstg_tmp_91_reg_1237_pp0_it2 <= ap_reg_ppstg_tmp_91_reg_1237_pp0_it1;
                ap_reg_ppstg_tmp_91_reg_1237_pp0_it3 <= ap_reg_ppstg_tmp_91_reg_1237_pp0_it2;
                ap_reg_ppstg_tmp_91_reg_1237_pp0_it4 <= ap_reg_ppstg_tmp_91_reg_1237_pp0_it3;
                ap_reg_ppstg_tmp_91_reg_1237_pp0_it5 <= ap_reg_ppstg_tmp_91_reg_1237_pp0_it4;
                ap_reg_ppstg_tmp_91_reg_1237_pp0_it6 <= ap_reg_ppstg_tmp_91_reg_1237_pp0_it5;
                ap_reg_ppstg_tmp_95_reg_1250_pp0_it2 <= ap_reg_ppstg_tmp_95_reg_1250_pp0_it1;
                ap_reg_ppstg_tmp_95_reg_1250_pp0_it3 <= ap_reg_ppstg_tmp_95_reg_1250_pp0_it2;
                ap_reg_ppstg_tmp_95_reg_1250_pp0_it4 <= ap_reg_ppstg_tmp_95_reg_1250_pp0_it3;
                ap_reg_ppstg_tmp_96_reg_1262_pp0_it2 <= ap_reg_ppstg_tmp_96_reg_1262_pp0_it1;
                ap_reg_ppstg_tmp_96_reg_1262_pp0_it3 <= ap_reg_ppstg_tmp_96_reg_1262_pp0_it2;
                src_kernel_win_0_val_0_1_18_reg_1347 <= src_kernel_win_0_val_0_1_fu_108;
                src_kernel_win_0_val_1_1_18_reg_1354 <= src_kernel_win_0_val_1_1_fu_124;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                ap_reg_ppstg_col_assign_reg_1266_pp0_it1 <= col_assign_reg_1266;
                ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it1 <= or_cond221_i_i_reg_1246;
                ap_reg_ppstg_or_cond2_reg_1254_pp0_it1 <= or_cond2_reg_1254;
                ap_reg_ppstg_tmp_130_reg_1258_pp0_it1 <= tmp_130_reg_1258;
                ap_reg_ppstg_tmp_91_reg_1237_pp0_it1 <= tmp_91_reg_1237;
                ap_reg_ppstg_tmp_95_reg_1250_pp0_it1 <= tmp_95_reg_1250;
                ap_reg_ppstg_tmp_96_reg_1262_pp0_it1 <= tmp_96_reg_1262;
                tmp_91_reg_1237 <= tmp_91_fu_516_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = brmerge_reg_1233)) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it2)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_130_reg_1258_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_95_reg_1250_pp0_it2))) then
                col_assign_2_reg_1309 <= col_assign_2_fu_620_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_91_fu_516_p2)) and not((ap_const_lv1_0 = or_cond2_fu_574_p2)) and (ap_const_lv1_0 = tmp_96_fu_588_p2))) then
                col_assign_reg_1266 <= col_assign_fu_593_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3) and not((ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_1)) and not((ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_0)))) then
                col_buf_0_val_0_0_30_fu_116 <= k_buf_0_val_0_q0;
                right_border_buf_0_val_0_2_fu_176 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3) and (ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_1))) then
                col_buf_0_val_0_0_31_fu_132 <= k_buf_0_val_0_q0;
                right_border_buf_0_val_0_1_fu_172 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3) and (ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_0))) then
                col_buf_0_val_0_0_32_fu_140 <= k_buf_0_val_0_q0;
                right_border_buf_0_val_0_0_fu_168 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                col_buf_0_val_0_0_fu_180 <= k_buf_0_val_0_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_47))) then
                heightloop_reg_1156 <= heightloop_fu_357_p2;
                p_neg228_i_i_cast_reg_1171 <= p_neg228_i_i_cast_fu_383_p2;
                ref_cast_reg_1182(0) <= ref_cast_fu_395_p1(0);
    ref_cast_reg_1182(1) <= ref_cast_fu_395_p1(1);
    ref_cast_reg_1182(2) <= ref_cast_fu_395_p1(2);
    ref_cast_reg_1182(3) <= ref_cast_fu_395_p1(3);
    ref_cast_reg_1182(4) <= ref_cast_fu_395_p1(4);
    ref_cast_reg_1182(5) <= ref_cast_fu_395_p1(5);
    ref_cast_reg_1182(6) <= ref_cast_fu_395_p1(6);
    ref_cast_reg_1182(7) <= ref_cast_fu_395_p1(7);
    ref_cast_reg_1182(8) <= ref_cast_fu_395_p1(8);
    ref_cast_reg_1182(9) <= ref_cast_fu_395_p1(9);
    ref_cast_reg_1182(10) <= ref_cast_fu_395_p1(10);
                ref_reg_1177 <= ref_fu_389_p2;
                tmp_93_cast_reg_1166(0) <= tmp_93_cast_fu_375_p1(0);
    tmp_93_cast_reg_1166(1) <= tmp_93_cast_fu_375_p1(1);
    tmp_93_cast_reg_1166(2) <= tmp_93_cast_fu_375_p1(2);
    tmp_93_cast_reg_1166(3) <= tmp_93_cast_fu_375_p1(3);
    tmp_93_cast_reg_1166(4) <= tmp_93_cast_fu_375_p1(4);
    tmp_93_cast_reg_1166(5) <= tmp_93_cast_fu_375_p1(5);
    tmp_93_cast_reg_1166(6) <= tmp_93_cast_fu_375_p1(6);
    tmp_93_cast_reg_1166(7) <= tmp_93_cast_fu_375_p1(7);
    tmp_93_cast_reg_1166(8) <= tmp_93_cast_fu_375_p1(8);
    tmp_93_cast_reg_1166(9) <= tmp_93_cast_fu_375_p1(9);
    tmp_93_cast_reg_1166(10) <= tmp_93_cast_fu_375_p1(10);
                widthloop_reg_1161 <= widthloop_fu_363_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_V_reg_1191 <= i_V_fu_408_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it2)))) then
                k_buf_0_val_0_addr_reg_1287 <= tmp_93_fu_609_p1(11 - 1 downto 0);
                k_buf_0_val_1_addr_reg_1293 <= tmp_93_fu_609_p1(11 - 1 downto 0);
                k_buf_0_val_2_addr_reg_1299 <= tmp_93_fu_609_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = brmerge_reg_1233) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it2)))) then
                locy_2_t_reg_1305 <= locy_2_t_fu_616_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_91_fu_516_p2)))) then
                or_cond221_i_i_reg_1246 <= or_cond221_i_i_fu_543_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_91_fu_516_p2)))) then
                or_cond2_reg_1254 <= or_cond2_fu_574_p2;
                tmp_95_reg_1250 <= tmp_95_fu_569_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then
                right_border_buf_0_val_1_0_reg_1320 <= k_buf_0_val_1_q0;
                right_border_buf_0_val_2_0_reg_1315 <= k_buf_0_val_0_q0;
                src_kernel_win_0_val_2_0_reg_1328 <= k_buf_0_val_2_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3) and not((ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_1)) and not((ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_0))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3) and (ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_1)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3) and (ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_0)))) then
                right_border_buf_0_val_1_2_1_fu_144 <= right_border_buf_0_val_1_2_8_fu_705_p3;
                right_border_buf_0_val_1_2_2_fu_148 <= right_border_buf_0_val_1_2_6_fu_696_p3;
                right_border_buf_0_val_1_2_7_fu_152 <= right_border_buf_0_val_1_2_4_fu_679_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it5)))) then
                src_kernel_win_0_val_0_1_lo_reg_1367 <= src_kernel_win_0_val_0_1_fu_108;
                src_kernel_win_0_val_1_1_lo_reg_1373 <= src_kernel_win_0_val_1_1_fu_124;
                temp_0_i_i_i_057_i_i_1_1_reg_1379 <= temp_0_i_i_i_057_i_i_1_1_fu_952_p3;
                tmp_192_1_1_reg_1384 <= tmp_192_1_1_fu_960_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it6)))) then
                src_kernel_win_0_val_0_2_fu_112 <= ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it6;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it5)))) then
                src_kernel_win_0_val_1_2_fu_128 <= src_kernel_win_0_val_1_1_18_reg_1354;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)))) then
                src_kernel_win_0_val_2_2_fu_136 <= src_kernel_win_0_val_2_1_fu_120;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it4)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it4)))) then
                temp_0_i_i_i_057_i_i_1_0_1_reg_1361 <= temp_0_i_i_i_057_i_i_1_0_1_fu_909_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it6)))) then
                temp_0_i_i_i_057_i_i_1_2_reg_1389 <= temp_0_i_i_i_057_i_i_1_2_fu_995_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)))) then
                tmp_129_reg_1277 <= tmp_129_fu_598_p1;
                x_reg_1272 <= grp_toThreshold_borderInterpolate_fu_277_ap_return;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_91_fu_516_p2)) and (ap_const_lv1_0 = or_cond2_fu_574_p2))) then
                tmp_130_reg_1258 <= ImagLoc_x_fu_548_p2(11 downto 11);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and (ap_const_lv1_0 = brmerge_reg_1233) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = tmp_124_reg_1206))) then
                tmp_131_reg_1335 <= tmp_131_fu_629_p1;
                tmp_132_reg_1341 <= tmp_132_fu_633_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = brmerge_reg_1233) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)) and (ap_const_lv1_0 = tmp_124_reg_1206))) then
                tmp_133_reg_1282 <= tmp_133_fu_602_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = tmp_91_fu_516_p2)) and not((ap_const_lv1_0 = or_cond2_fu_574_p2)))) then
                tmp_96_reg_1262 <= tmp_96_fu_588_p2;
            end if;
        end if;
    end process;
    tmp_93_cast_reg_1166(11) <= '0';
    ref_cast_reg_1182(11) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_47, tmp_87_fu_403_p2, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_47)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_87_fu_403_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st12_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_548_p2 <= std_logic_vector(unsigned(tmp_97_cast_fu_512_p1) + unsigned(ap_const_lv12_FFF));
        ImagLoc_y_cast_fu_426_p1 <= std_logic_vector(resize(signed(ImagLoc_y_fu_420_p2),13));

    ImagLoc_y_fu_420_p2 <= std_logic_vector(unsigned(tmp_94_cast_cast3_fu_399_p1) + unsigned(ap_const_lv12_FFC));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, tmp_87_fu_403_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_87_fu_403_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(tmp_87_fu_403_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_87_fu_403_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_102 assign process. --
    ap_sig_bdd_102_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_102 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_125 assign process. --
    ap_sig_bdd_125_assign_proc : process(p_src_data_stream_V_empty_n, brmerge_reg_1233, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)
    begin
                ap_sig_bdd_125 <= ((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)));
    end process;


    -- ap_sig_bdd_141 assign process. --
    ap_sig_bdd_141_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it7)
    begin
                ap_sig_bdd_141 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it7)));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_384 assign process. --
    ap_sig_bdd_384_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_384 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_47 assign process. --
    ap_sig_bdd_47_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_47 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_71 assign process. --
    ap_sig_bdd_71_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_71 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_102)
    begin
        if (ap_sig_bdd_102) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_3 assign process. --
    ap_sig_cseq_ST_st12_fsm_3_assign_proc : process(ap_sig_bdd_384)
    begin
        if (ap_sig_bdd_384) then 
            ap_sig_cseq_ST_st12_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_71)
    begin
        if (ap_sig_bdd_71) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_506_p2 <= (tmp_89_fu_430_p2 or or_cond_fu_457_p2);
    col_assign_2_fu_620_p2 <= std_logic_vector(unsigned(tmp_129_reg_1277) + unsigned(p_neg228_i_i_cast_reg_1171));
    col_assign_fu_593_p2 <= std_logic_vector(unsigned(tmp_128_fu_554_p1) + unsigned(p_neg228_i_i_cast_reg_1171));
    col_buf_0_val_0_0_33_fu_837_p3 <= 
        col_buf_0_val_0_0_31_fu_132 when (sel_tmp_fu_832_p2(0) = '1') else 
        col_buf_0_val_0_0_30_fu_116;
    col_buf_0_val_0_0_37_fu_850_p3 <= 
        col_buf_0_val_0_0_32_fu_140 when (sel_tmp2_fu_845_p2(0) = '1') else 
        col_buf_0_val_0_0_33_fu_837_p3;

    -- grp_toThreshold_borderInterpolate_fu_277_ap_ce assign process. --
    grp_toThreshold_borderInterpolate_fu_277_ap_ce_assign_proc : process(tmp_91_fu_516_p2, tmp_91_reg_1237, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (not((ap_const_lv1_0 = tmp_91_fu_516_p2)) or not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)) or not((ap_const_lv1_0 = tmp_91_reg_1237))))) then 
            grp_toThreshold_borderInterpolate_fu_277_ap_ce <= ap_const_logic_1;
        else 
            grp_toThreshold_borderInterpolate_fu_277_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_toThreshold_borderInterpolate_fu_277_borderType <= ap_const_lv4_1;
    grp_toThreshold_borderInterpolate_fu_277_len <= p_src_cols_V_read;
        grp_toThreshold_borderInterpolate_fu_277_p <= std_logic_vector(resize(signed(ImagLoc_x_fu_548_p2),13));


    -- grp_toThreshold_borderInterpolate_fu_285_ap_ce assign process. --
    grp_toThreshold_borderInterpolate_fu_285_ap_ce_assign_proc : process(tmp_124_reg_1206, brmerge_reg_1233, tmp_91_fu_516_p2, tmp_91_reg_1237, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (((ap_const_lv1_0 = brmerge_reg_1233) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)) and (ap_const_lv1_0 = tmp_124_reg_1206)) or ((ap_const_lv1_0 = brmerge_reg_1233) and not((ap_const_lv1_0 = tmp_91_fu_516_p2)) and (ap_const_lv1_0 = tmp_124_reg_1206)) or ((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = tmp_91_reg_1237)))))) then 
            grp_toThreshold_borderInterpolate_fu_285_ap_ce <= ap_const_logic_1;
        else 
            grp_toThreshold_borderInterpolate_fu_285_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_toThreshold_borderInterpolate_fu_285_borderType <= ap_const_lv4_1;
    grp_toThreshold_borderInterpolate_fu_285_len <= p_src_rows_V_read;
    grp_toThreshold_borderInterpolate_fu_285_p <= y_1_1_cast_reg_1228;

    -- grp_toThreshold_borderInterpolate_fu_293_ap_ce assign process. --
    grp_toThreshold_borderInterpolate_fu_293_ap_ce_assign_proc : process(tmp_124_reg_1206, brmerge_reg_1233, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_91_reg_1237_pp0_it1, ap_reg_ppstg_tmp_91_reg_1237_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (((ap_const_lv1_0 = brmerge_reg_1233) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)) and (ap_const_lv1_0 = tmp_124_reg_1206)) or ((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it2))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and (ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_lv1_0 = tmp_124_reg_1206))))) then 
            grp_toThreshold_borderInterpolate_fu_293_ap_ce <= ap_const_logic_1;
        else 
            grp_toThreshold_borderInterpolate_fu_293_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_toThreshold_borderInterpolate_fu_293_borderType <= ap_const_lv4_1;
    grp_toThreshold_borderInterpolate_fu_293_len <= p_src_rows_V_read;
    grp_toThreshold_borderInterpolate_fu_293_p <= ImagLoc_y_cast_reg_1201;

    -- grp_toThreshold_borderInterpolate_fu_301_ap_ce assign process. --
    grp_toThreshold_borderInterpolate_fu_301_ap_ce_assign_proc : process(tmp_124_reg_1206, brmerge_reg_1233, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_91_reg_1237_pp0_it1, ap_reg_ppstg_tmp_91_reg_1237_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (((ap_const_lv1_0 = brmerge_reg_1233) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it1)) and (ap_const_lv1_0 = tmp_124_reg_1206)) or ((ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_lv1_0 = tmp_124_reg_1206) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it2))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and (ap_const_lv1_0 = brmerge_reg_1233) and (ap_const_lv1_0 = tmp_124_reg_1206))))) then 
            grp_toThreshold_borderInterpolate_fu_301_ap_ce <= ap_const_logic_1;
        else 
            grp_toThreshold_borderInterpolate_fu_301_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_toThreshold_borderInterpolate_fu_301_borderType <= ap_const_lv4_1;
    grp_toThreshold_borderInterpolate_fu_301_len <= p_src_rows_V_read;
    grp_toThreshold_borderInterpolate_fu_301_p <= y_1_cast_reg_1216;
    heightloop_fu_357_p2 <= std_logic_vector(unsigned(tmp_fu_349_p1) + unsigned(ap_const_lv11_5));
    i_V_fu_408_p2 <= std_logic_vector(unsigned(p_012_0_i_i_reg_254) + unsigned(ap_const_lv11_1));
    icmp3_fu_537_p2 <= "0" when (tmp_127_fu_527_p4 = ap_const_lv10_0) else "1";
    icmp_fu_446_p2 <= "1" when (signed(tmp_123_fu_436_p4) > signed(ap_const_lv11_0)) else "0";
    j_V_fu_521_p2 <= std_logic_vector(unsigned(p_025_0_i_i_reg_265) + unsigned(ap_const_lv11_1));
    k_buf_0_val_0_address0 <= tmp_93_fu_609_p1(11 - 1 downto 0);
    k_buf_0_val_0_address1 <= k_buf_0_val_0_addr_reg_1287;

    -- k_buf_0_val_0_ce0 assign process. --
    k_buf_0_val_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            k_buf_0_val_0_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_0_ce1 assign process. --
    k_buf_0_val_0_ce1_assign_proc : process(ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            k_buf_0_val_0_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_0_d1 <= p_src_data_stream_V_dout;

    -- k_buf_0_val_0_we1 assign process. --
    k_buf_0_val_0_we1_assign_proc : process(brmerge_reg_1233, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_reg_ppstg_or_cond2_reg_1254_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8))))))) then 
            k_buf_0_val_0_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_1_address0 <= tmp_93_fu_609_p1(11 - 1 downto 0);
    k_buf_0_val_1_address1 <= k_buf_0_val_1_addr_reg_1293;

    -- k_buf_0_val_1_ce0 assign process. --
    k_buf_0_val_1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            k_buf_0_val_1_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_1_ce1 assign process. --
    k_buf_0_val_1_ce1_assign_proc : process(brmerge_reg_1233, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_reg_ppstg_or_cond2_reg_1254_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3))))) then 
            k_buf_0_val_1_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_1_d1 <= k_buf_0_val_0_q0;

    -- k_buf_0_val_1_we1 assign process. --
    k_buf_0_val_1_we1_assign_proc : process(brmerge_reg_1233, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_reg_ppstg_or_cond2_reg_1254_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3))))) then 
            k_buf_0_val_1_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_2_address0 <= tmp_93_fu_609_p1(11 - 1 downto 0);
    k_buf_0_val_2_address1 <= k_buf_0_val_2_addr_reg_1299;

    -- k_buf_0_val_2_ce0 assign process. --
    k_buf_0_val_2_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            k_buf_0_val_2_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_2_ce1 assign process. --
    k_buf_0_val_2_ce1_assign_proc : process(brmerge_reg_1233, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_reg_ppstg_or_cond2_reg_1254_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3))))) then 
            k_buf_0_val_2_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_2_d1 <= k_buf_0_val_1_q0;

    -- k_buf_0_val_2_we1 assign process. --
    k_buf_0_val_2_we1_assign_proc : process(brmerge_reg_1233, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_reg_ppstg_or_cond2_reg_1254_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_96_reg_1262_pp0_it3))))) then 
            k_buf_0_val_2_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    locy_1_t_fu_770_p2 <= std_logic_vector(unsigned(tmp_126_reg_1221) - unsigned(tmp_132_reg_1341));
    locy_2_t_fu_616_p2 <= std_logic_vector(unsigned(tmp_126_reg_1221) - unsigned(tmp_133_reg_1282));
    locy_fu_738_p2 <= std_logic_vector(unsigned(tmp_125_reg_1210) - unsigned(tmp_131_reg_1335));
    or_cond221_i_i_fu_543_p2 <= (tmp_88_reg_1196 and icmp3_fu_537_p2);
    or_cond2_fu_574_p2 <= (tmp_94_fu_563_p2 and tmp_95_fu_569_p2);
    or_cond_fu_457_p2 <= (icmp_fu_446_p2 and tmp_90_fu_452_p2);
    p_dst_data_stream_V_din <= 
        ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1367_pp0_it7 when (tmp_192_2_2_fu_1017_p2(0) = '1') else 
        temp_0_i_i_i_057_i_i_1_2_1_fu_1011_p3;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it7, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond221_i_i_reg_1246_pp0_it7)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_fu_471_p3 <= 
        ap_const_lv11_2 when (tmp_90_fu_452_p2(0) = '1') else 
        ref_reg_1177;
    p_neg228_i_i_cast_fu_383_p2 <= (tmp_122_fu_379_p1 xor ap_const_lv2_3);

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(brmerge_reg_1233, ap_reg_ppstg_tmp_91_reg_1237_pp0_it3, ap_reg_ppstg_or_cond2_reg_1254_pp0_it3, ap_sig_bdd_125, ap_reg_ppiten_pp0_it4, ap_sig_bdd_141, ap_reg_ppiten_pp0_it8)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_91_reg_1237_pp0_it3)) and not((ap_const_lv1_0 = brmerge_reg_1233)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond2_reg_1254_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_125 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_141 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ref_cast_fu_395_p1 <= std_logic_vector(resize(unsigned(ref_fu_389_p2),12));
    ref_fu_389_p2 <= std_logic_vector(unsigned(tmp_fu_349_p1) + unsigned(ap_const_lv11_7FF));
    right_border_buf_0_val_1_2_11_fu_867_p3 <= 
        right_border_buf_0_val_1_2_1_fu_144 when (sel_tmp2_fu_845_p2(0) = '1') else 
        right_border_buf_0_val_1_2_fu_859_p3;
    right_border_buf_0_val_1_2_3_fu_666_p3 <= 
        right_border_buf_0_val_1_2_7_fu_152 when (sel_tmp16_fu_661_p2(0) = '1') else 
        k_buf_0_val_1_q0;
    right_border_buf_0_val_1_2_4_fu_679_p3 <= 
        right_border_buf_0_val_1_2_7_fu_152 when (sel_tmp18_fu_674_p2(0) = '1') else 
        right_border_buf_0_val_1_2_3_fu_666_p3;
    right_border_buf_0_val_1_2_5_fu_688_p3 <= 
        k_buf_0_val_1_q0 when (sel_tmp16_fu_661_p2(0) = '1') else 
        right_border_buf_0_val_1_2_2_fu_148;
    right_border_buf_0_val_1_2_6_fu_696_p3 <= 
        right_border_buf_0_val_1_2_2_fu_148 when (sel_tmp18_fu_674_p2(0) = '1') else 
        right_border_buf_0_val_1_2_5_fu_688_p3;
    right_border_buf_0_val_1_2_8_fu_705_p3 <= 
        k_buf_0_val_1_q0 when (sel_tmp18_fu_674_p2(0) = '1') else 
        right_border_buf_0_val_1_2_1_fu_144;
    right_border_buf_0_val_1_2_fu_859_p3 <= 
        right_border_buf_0_val_1_2_2_fu_148 when (sel_tmp_fu_832_p2(0) = '1') else 
        right_border_buf_0_val_1_2_7_fu_152;
    sel_tmp10_fu_756_p2 <= "1" when (locy_fu_738_p2 = ap_const_lv2_1) else "0";
    sel_tmp12_fu_777_p2 <= "1" when (tmp_126_reg_1221 = tmp_132_reg_1341) else "0";
    sel_tmp13_fu_781_p3 <= 
        col_buf_0_val_0_0_fu_180 when (sel_tmp12_fu_777_p2(0) = '1') else 
        src_kernel_win_0_val_2_0_reg_1328;
    sel_tmp14_fu_788_p2 <= "1" when (locy_1_t_fu_770_p2 = ap_const_lv2_1) else "0";
    sel_tmp16_fu_661_p2 <= "1" when (ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_1) else "0";
    sel_tmp18_fu_674_p2 <= "1" when (ap_reg_ppstg_col_assign_reg_1266_pp0_it3 = ap_const_lv2_0) else "0";
    sel_tmp2_fu_845_p2 <= "1" when (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_0) else "0";
    sel_tmp8_fu_745_p2 <= "1" when (tmp_125_reg_1210 = tmp_131_reg_1335) else "0";
    sel_tmp9_fu_749_p3 <= 
        col_buf_0_val_0_0_fu_180 when (sel_tmp8_fu_745_p2(0) = '1') else 
        src_kernel_win_0_val_2_0_reg_1328;
    sel_tmp_fu_832_p2 <= "1" when (ap_reg_ppstg_col_assign_2_reg_1309_pp0_it4 = ap_const_lv2_1) else "0";
    src_kernel_win_0_val_0_0_fu_762_p3 <= 
        right_border_buf_0_val_1_0_reg_1320 when (sel_tmp10_fu_756_p2(0) = '1') else 
        sel_tmp9_fu_749_p3;
    src_kernel_win_0_val_1_0_fu_794_p3 <= 
        right_border_buf_0_val_1_0_reg_1320 when (sel_tmp14_fu_788_p2(0) = '1') else 
        sel_tmp13_fu_781_p3;
    temp_0_i_i_i_057_i_i_1_0_1_fu_909_p3 <= 
        src_kernel_win_0_val_2_1_fu_120 when (tmp_192_0_1_fu_903_p2(0) = '1') else 
        src_kernel_win_0_val_2_2_fu_136;
    temp_0_i_i_i_057_i_i_1_0_2_fu_939_p3 <= 
        src_kernel_win_0_val_2_1_fu_120 when (tmp_192_0_2_fu_934_p2(0) = '1') else 
        temp_0_i_i_i_057_i_i_1_0_1_reg_1361;
    temp_0_i_i_i_057_i_i_1_1_1_fu_972_p3 <= 
        ap_reg_ppstg_src_kernel_win_0_val_1_1_18_reg_1354_pp0_it6 when (tmp_192_1_1_reg_1384(0) = '1') else 
        temp_0_i_i_i_057_i_i_1_1_reg_1379;
    temp_0_i_i_i_057_i_i_1_1_2_fu_982_p3 <= 
        src_kernel_win_0_val_1_1_lo_reg_1373 when (tmp_192_1_2_fu_977_p2(0) = '1') else 
        temp_0_i_i_i_057_i_i_1_1_1_fu_972_p3;
    temp_0_i_i_i_057_i_i_1_1_fu_952_p3 <= 
        src_kernel_win_0_val_1_2_fu_128 when (tmp_192_1_fu_946_p2(0) = '1') else 
        temp_0_i_i_i_057_i_i_1_0_2_fu_939_p3;
    temp_0_i_i_i_057_i_i_1_2_1_fu_1011_p3 <= 
        ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it7 when (tmp_192_2_1_fu_1007_p2(0) = '1') else 
        temp_0_i_i_i_057_i_i_1_2_reg_1389;
    temp_0_i_i_i_057_i_i_1_2_fu_995_p3 <= 
        src_kernel_win_0_val_0_2_fu_112 when (tmp_192_2_fu_989_p2(0) = '1') else 
        temp_0_i_i_i_057_i_i_1_1_2_fu_982_p3;
    tmp_121_fu_353_p1 <= p_src_cols_V_read(11 - 1 downto 0);
    tmp_122_fu_379_p1 <= p_src_cols_V_read(2 - 1 downto 0);
    tmp_123_fu_436_p4 <= ImagLoc_y_fu_420_p2(11 downto 1);
    tmp_125_fu_478_p1 <= p_i_i_fu_471_p3(2 - 1 downto 0);
    tmp_126_fu_492_p1 <= p_i_i_fu_471_p3(2 - 1 downto 0);
    tmp_127_fu_527_p4 <= p_025_0_i_i_reg_265(10 downto 1);
    tmp_128_fu_554_p1 <= ImagLoc_x_fu_548_p2(2 - 1 downto 0);
    tmp_129_fu_598_p1 <= grp_toThreshold_borderInterpolate_fu_277_ap_return(2 - 1 downto 0);
    tmp_131_fu_629_p1 <= grp_toThreshold_borderInterpolate_fu_293_ap_return(2 - 1 downto 0);
    tmp_132_fu_633_p1 <= grp_toThreshold_borderInterpolate_fu_301_ap_return(2 - 1 downto 0);
    tmp_133_fu_602_p1 <= grp_toThreshold_borderInterpolate_fu_285_ap_return(2 - 1 downto 0);
    tmp_192_0_1_fu_903_p2 <= "1" when (unsigned(src_kernel_win_0_val_2_1_fu_120) > unsigned(src_kernel_win_0_val_2_2_fu_136)) else "0";
    tmp_192_0_2_fu_934_p2 <= "1" when (unsigned(src_kernel_win_0_val_2_1_fu_120) > unsigned(temp_0_i_i_i_057_i_i_1_0_1_reg_1361)) else "0";
    tmp_192_1_1_fu_960_p2 <= "1" when (unsigned(src_kernel_win_0_val_1_1_18_reg_1354) > unsigned(temp_0_i_i_i_057_i_i_1_1_fu_952_p3)) else "0";
    tmp_192_1_2_fu_977_p2 <= "1" when (unsigned(src_kernel_win_0_val_1_1_lo_reg_1373) > unsigned(temp_0_i_i_i_057_i_i_1_1_1_fu_972_p3)) else "0";
    tmp_192_1_fu_946_p2 <= "1" when (unsigned(src_kernel_win_0_val_1_2_fu_128) > unsigned(temp_0_i_i_i_057_i_i_1_0_2_fu_939_p3)) else "0";
    tmp_192_2_1_fu_1007_p2 <= "1" when (unsigned(ap_reg_ppstg_src_kernel_win_0_val_0_1_18_reg_1347_pp0_it7) > unsigned(temp_0_i_i_i_057_i_i_1_2_reg_1389)) else "0";
    tmp_192_2_2_fu_1017_p2 <= "1" when (unsigned(ap_reg_ppstg_src_kernel_win_0_val_0_1_lo_reg_1367_pp0_it7) > unsigned(temp_0_i_i_i_057_i_i_1_2_1_fu_1011_p3)) else "0";
    tmp_192_2_fu_989_p2 <= "1" when (unsigned(src_kernel_win_0_val_0_2_fu_112) > unsigned(temp_0_i_i_i_057_i_i_1_1_2_fu_982_p3)) else "0";
    tmp_86_fu_369_p2 <= std_logic_vector(unsigned(tmp_121_fu_353_p1) + unsigned(ap_const_lv11_7FD));
    tmp_87_fu_403_p2 <= "1" when (unsigned(p_012_0_i_i_reg_254) < unsigned(heightloop_reg_1156)) else "0";
    tmp_88_fu_414_p2 <= "1" when (unsigned(p_012_0_i_i_reg_254) > unsigned(ap_const_lv11_4)) else "0";
    tmp_89_fu_430_p2 <= "1" when (signed(ImagLoc_y_fu_420_p2) < signed(ap_const_lv12_FFF)) else "0";
    tmp_90_fu_452_p2 <= "1" when (signed(ImagLoc_y_fu_420_p2) < signed(ref_cast_reg_1182)) else "0";
    tmp_91_fu_516_p2 <= "1" when (unsigned(p_025_0_i_i_reg_265) < unsigned(widthloop_reg_1161)) else "0";
    tmp_93_cast_fu_375_p1 <= std_logic_vector(resize(unsigned(tmp_86_fu_369_p2),12));
    tmp_93_fu_609_p1 <= std_logic_vector(resize(unsigned(x_3_fu_606_p1),64));
    tmp_94_cast_cast3_fu_399_p1 <= std_logic_vector(resize(unsigned(p_012_0_i_i_reg_254),12));
    tmp_94_fu_563_p2 <= "0" when (p_025_0_i_i_reg_265 = ap_const_lv11_0) else "1";
    tmp_95_fu_569_p2 <= "1" when (signed(ImagLoc_x_fu_548_p2) < signed(p_src_cols_V_read)) else "0";
    tmp_96_fu_588_p2 <= "1" when (signed(ImagLoc_x_fu_548_p2) < signed(tmp_93_cast_reg_1166)) else "0";
    tmp_97_cast_fu_512_p1 <= std_logic_vector(resize(unsigned(p_025_0_i_i_reg_265),12));
    tmp_fu_349_p1 <= p_src_rows_V_read(11 - 1 downto 0);
    widthloop_fu_363_p2 <= std_logic_vector(unsigned(tmp_121_fu_353_p1) + unsigned(ap_const_lv11_2));
        x_3_fu_606_p1 <= std_logic_vector(resize(signed(x_reg_1272),32));

        y_1_1_cast_fu_502_p1 <= std_logic_vector(resize(signed(y_1_1_fu_496_p2),13));

    y_1_1_fu_496_p2 <= std_logic_vector(unsigned(tmp_94_cast_cast3_fu_399_p1) + unsigned(ap_const_lv12_FFA));
        y_1_cast_fu_488_p1 <= std_logic_vector(resize(signed(y_1_fu_482_p2),13));

    y_1_fu_482_p2 <= std_logic_vector(unsigned(tmp_94_cast_cast3_fu_399_p1) + unsigned(ap_const_lv12_FFB));
end behav;

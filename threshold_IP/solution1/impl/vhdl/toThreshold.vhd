-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity toThreshold is
port (
    IN_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    IN_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    IN_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    IN_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    IN_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    IN_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    IN_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    OUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    IN_STREAM_TVALID : IN STD_LOGIC;
    IN_STREAM_TREADY : OUT STD_LOGIC;
    OUT_STREAM_TVALID : OUT STD_LOGIC;
    OUT_STREAM_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of toThreshold is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "toThreshold,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.734000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=25,HLS_SYN_DSP=86,HLS_SYN_FF=16603,HLS_SYN_LUT=29521}";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_true : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal ap_rst_n_inv : STD_LOGIC;
    signal toThreshold_Block_proc_U0_ap_start : STD_LOGIC;
    signal toThreshold_Block_proc_U0_ap_done : STD_LOGIC;
    signal toThreshold_Block_proc_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Block_proc_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Block_proc_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Block_proc_U0_rows : STD_LOGIC_VECTOR (31 downto 0);
    signal toThreshold_Block_proc_U0_cols : STD_LOGIC_VECTOR (31 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_3 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_4 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_5 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_6 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_7 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_8 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_9 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_10 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_11 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_12 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_13 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_14 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_15 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_16 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_17 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_18 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_19 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_20 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_21 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_22 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_23 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_24 : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Block_proc_U0_ap_return_25 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel : STD_LOGIC;
    signal inMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_inMat_cols_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_inMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel1 : STD_LOGIC;
    signal inMat_rows_V_channel1_full_n : STD_LOGIC;
    signal ap_reg_ready_inMat_rows_V_channel1_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_inMat_rows_V_channel1_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel : STD_LOGIC;
    signal inMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_inMat_rows_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_inMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel1 : STD_LOGIC;
    signal inMat_cols_V_channel1_full_n : STD_LOGIC;
    signal ap_reg_ready_inMat_cols_V_channel1_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_inMat_cols_V_channel1_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_grayMat_rows_V : STD_LOGIC;
    signal grayMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_grayMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_grayMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_grayMat_cols_V : STD_LOGIC;
    signal grayMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_grayMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_grayMat_cols_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V_channel : STD_LOGIC;
    signal dilateMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_dilateMat_cols_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_dilateMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V : STD_LOGIC;
    signal dilateMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_dilateMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_dilateMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V_channel : STD_LOGIC;
    signal dilateMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_dilateMat_rows_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_dilateMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V : STD_LOGIC;
    signal dilateMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_dilateMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_dilateMat_cols_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_threshMat_rows_V : STD_LOGIC;
    signal threshMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_threshMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_threshMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_threshMat_cols_V : STD_LOGIC;
    signal threshMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_threshMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_threshMat_cols_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blurMat_rows_V : STD_LOGIC;
    signal blurMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_blurMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blurMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blurMat_cols_V : STD_LOGIC;
    signal blurMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_blurMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blurMat_cols_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V : STD_LOGIC;
    signal blursobelyMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelyMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelyMat_cols_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V : STD_LOGIC;
    signal blursobelxMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelxMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelxMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V_channel : STD_LOGIC;
    signal blursobelxMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelxMat_rows_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelxMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V : STD_LOGIC;
    signal blursobelxMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelxMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelxMat_cols_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V_channel : STD_LOGIC;
    signal blursobelxMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelxMat_cols_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelxMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V : STD_LOGIC;
    signal blursobelyMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelyMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelyMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V_channel : STD_LOGIC;
    signal blursobelyMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelyMat_rows_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelyMat_rows_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V_channel : STD_LOGIC;
    signal blursobelyMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_blursobelyMat_cols_V_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_blursobelyMat_cols_V_channel_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_rows_V : STD_LOGIC;
    signal nmsupressionMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_nmsupressionMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_nmsupressionMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_cols_V : STD_LOGIC;
    signal nmsupressionMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_nmsupressionMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_nmsupressionMat_cols_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_outMat_rows_V : STD_LOGIC;
    signal outMat_rows_V_full_n : STD_LOGIC;
    signal ap_reg_ready_outMat_rows_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_outMat_rows_V_full_n : STD_LOGIC;
    signal ap_chn_write_toThreshold_Block_proc_U0_outMat_cols_V : STD_LOGIC;
    signal outMat_cols_V_full_n : STD_LOGIC;
    signal ap_reg_ready_outMat_cols_V_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_outMat_cols_V_full_n : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TVALID : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TREADY : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_IN_STREAM_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_full_n : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_full_n : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_full_n : STD_LOGIC;
    signal toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal toThreshold_CvtColor_U0_ap_start : STD_LOGIC;
    signal toThreshold_CvtColor_U0_ap_done : STD_LOGIC;
    signal toThreshold_CvtColor_U0_ap_continue : STD_LOGIC;
    signal toThreshold_CvtColor_U0_ap_idle : STD_LOGIC;
    signal toThreshold_CvtColor_U0_ap_ready : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_CvtColor_U0_p_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_CvtColor_U0_p_src_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_CvtColor_U0_p_src_data_stream_0_V_empty_n : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_src_data_stream_0_V_read : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_src_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_CvtColor_U0_p_src_data_stream_1_V_empty_n : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_src_data_stream_1_V_read : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_src_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_CvtColor_U0_p_src_data_stream_2_V_empty_n : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_src_data_stream_2_V_read : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_CvtColor_U0_p_dst_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_CvtColor_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_ap_start : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_ap_done : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Threshold_1080_1920_0_0_U0_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_read : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_dst_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Threshold_1080_1920_0_0_U0_dst_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_ap_start : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_ap_done : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_ap_start : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_ap_done : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_ap_continue : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_ap_idle : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_ap_ready : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_p_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_GaussianBlur_U0_p_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_GaussianBlur_U0_p_src_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_GaussianBlur_U0_p_src_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_GaussianBlur_U0_p_dst_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_GaussianBlur_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_ap_start : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_ap_done : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_read : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst1_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst1_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst2_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst2_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Sobel_U0_ap_start : STD_LOGIC;
    signal toThreshold_Sobel_U0_ap_done : STD_LOGIC;
    signal toThreshold_Sobel_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Sobel_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Sobel_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Sobel_U0_p_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Sobel_U0_p_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Sobel_U0_p_src_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Sobel_U0_p_src_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_Sobel_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal toThreshold_Sobel_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Sobel_U0_p_dst_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_Sobel_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_ap_start : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_ap_done : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_p_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Sobel_1_U0_p_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Sobel_1_U0_p_src_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Sobel_1_U0_p_src_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Sobel_1_U0_p_dst_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_Sobel_1_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_ap_start : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_ap_done : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_rows : STD_LOGIC_VECTOR (31 downto 0);
    signal toThreshold_Loop_GradientLoop_proc_U0_cols : STD_LOGIC_VECTOR (31 downto 0);
    signal toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_read : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_read : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_full_n : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_write : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_full_n : STD_LOGIC;
    signal toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_write : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_ap_start : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_ap_done : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_cols : STD_LOGIC_VECTOR (31 downto 0);
    signal toThreshold_Loop_LineBufferLoop_proc_U0_rows : STD_LOGIC_VECTOR (31 downto 0);
    signal toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_read : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_read : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_full_n : STD_LOGIC;
    signal toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_write : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_ap_start : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_ap_done : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_full_n : STD_LOGIC;
    signal toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_start : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_done : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read : STD_LOGIC_VECTOR (11 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY : STD_LOGIC;
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal inMat_rows_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal inMat_rows_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_rows_V_channel_write : STD_LOGIC;
    signal inMat_rows_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_rows_V_channel_empty_n : STD_LOGIC;
    signal inMat_rows_V_channel_read : STD_LOGIC;
    signal inMat_rows_V_channel1_U_ap_dummy_ce : STD_LOGIC;
    signal inMat_rows_V_channel1_din : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_rows_V_channel1_write : STD_LOGIC;
    signal inMat_rows_V_channel1_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_rows_V_channel1_empty_n : STD_LOGIC;
    signal inMat_rows_V_channel1_read : STD_LOGIC;
    signal inMat_cols_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal inMat_cols_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_cols_V_channel_write : STD_LOGIC;
    signal inMat_cols_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_cols_V_channel_empty_n : STD_LOGIC;
    signal inMat_cols_V_channel_read : STD_LOGIC;
    signal inMat_cols_V_channel1_U_ap_dummy_ce : STD_LOGIC;
    signal inMat_cols_V_channel1_din : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_cols_V_channel1_write : STD_LOGIC;
    signal inMat_cols_V_channel1_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal inMat_cols_V_channel1_empty_n : STD_LOGIC;
    signal inMat_cols_V_channel1_read : STD_LOGIC;
    signal grayMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal grayMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal grayMat_rows_V_write : STD_LOGIC;
    signal grayMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal grayMat_rows_V_empty_n : STD_LOGIC;
    signal grayMat_rows_V_read : STD_LOGIC;
    signal grayMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal grayMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal grayMat_cols_V_write : STD_LOGIC;
    signal grayMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal grayMat_cols_V_empty_n : STD_LOGIC;
    signal grayMat_cols_V_read : STD_LOGIC;
    signal dilateMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal dilateMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_rows_V_write : STD_LOGIC;
    signal dilateMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_rows_V_empty_n : STD_LOGIC;
    signal dilateMat_rows_V_read : STD_LOGIC;
    signal dilateMat_rows_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal dilateMat_rows_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_rows_V_channel_write : STD_LOGIC;
    signal dilateMat_rows_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_rows_V_channel_empty_n : STD_LOGIC;
    signal dilateMat_rows_V_channel_read : STD_LOGIC;
    signal dilateMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal dilateMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_cols_V_write : STD_LOGIC;
    signal dilateMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_cols_V_empty_n : STD_LOGIC;
    signal dilateMat_cols_V_read : STD_LOGIC;
    signal dilateMat_cols_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal dilateMat_cols_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_cols_V_channel_write : STD_LOGIC;
    signal dilateMat_cols_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal dilateMat_cols_V_channel_empty_n : STD_LOGIC;
    signal dilateMat_cols_V_channel_read : STD_LOGIC;
    signal threshMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal threshMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal threshMat_rows_V_write : STD_LOGIC;
    signal threshMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal threshMat_rows_V_empty_n : STD_LOGIC;
    signal threshMat_rows_V_read : STD_LOGIC;
    signal threshMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal threshMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal threshMat_cols_V_write : STD_LOGIC;
    signal threshMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal threshMat_cols_V_empty_n : STD_LOGIC;
    signal threshMat_cols_V_read : STD_LOGIC;
    signal blurMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal blurMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blurMat_rows_V_write : STD_LOGIC;
    signal blurMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blurMat_rows_V_empty_n : STD_LOGIC;
    signal blurMat_rows_V_read : STD_LOGIC;
    signal blurMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal blurMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blurMat_cols_V_write : STD_LOGIC;
    signal blurMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blurMat_cols_V_empty_n : STD_LOGIC;
    signal blurMat_cols_V_read : STD_LOGIC;
    signal blursobelxMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelxMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_rows_V_write : STD_LOGIC;
    signal blursobelxMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_rows_V_empty_n : STD_LOGIC;
    signal blursobelxMat_rows_V_read : STD_LOGIC;
    signal blursobelxMat_rows_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelxMat_rows_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_rows_V_channel_write : STD_LOGIC;
    signal blursobelxMat_rows_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_rows_V_channel_empty_n : STD_LOGIC;
    signal blursobelxMat_rows_V_channel_read : STD_LOGIC;
    signal blursobelxMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelxMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_cols_V_write : STD_LOGIC;
    signal blursobelxMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_cols_V_empty_n : STD_LOGIC;
    signal blursobelxMat_cols_V_read : STD_LOGIC;
    signal blursobelxMat_cols_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelxMat_cols_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_cols_V_channel_write : STD_LOGIC;
    signal blursobelxMat_cols_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelxMat_cols_V_channel_empty_n : STD_LOGIC;
    signal blursobelxMat_cols_V_channel_read : STD_LOGIC;
    signal blursobelyMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelyMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_rows_V_write : STD_LOGIC;
    signal blursobelyMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_rows_V_empty_n : STD_LOGIC;
    signal blursobelyMat_rows_V_read : STD_LOGIC;
    signal blursobelyMat_rows_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelyMat_rows_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_rows_V_channel_write : STD_LOGIC;
    signal blursobelyMat_rows_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_rows_V_channel_empty_n : STD_LOGIC;
    signal blursobelyMat_rows_V_channel_read : STD_LOGIC;
    signal blursobelyMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelyMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_cols_V_write : STD_LOGIC;
    signal blursobelyMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_cols_V_empty_n : STD_LOGIC;
    signal blursobelyMat_cols_V_read : STD_LOGIC;
    signal blursobelyMat_cols_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelyMat_cols_V_channel_din : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_cols_V_channel_write : STD_LOGIC;
    signal blursobelyMat_cols_V_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal blursobelyMat_cols_V_channel_empty_n : STD_LOGIC;
    signal blursobelyMat_cols_V_channel_read : STD_LOGIC;
    signal nmsupressionMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal nmsupressionMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal nmsupressionMat_rows_V_write : STD_LOGIC;
    signal nmsupressionMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal nmsupressionMat_rows_V_empty_n : STD_LOGIC;
    signal nmsupressionMat_rows_V_read : STD_LOGIC;
    signal nmsupressionMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal nmsupressionMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal nmsupressionMat_cols_V_write : STD_LOGIC;
    signal nmsupressionMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal nmsupressionMat_cols_V_empty_n : STD_LOGIC;
    signal nmsupressionMat_cols_V_read : STD_LOGIC;
    signal outMat_rows_V_U_ap_dummy_ce : STD_LOGIC;
    signal outMat_rows_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal outMat_rows_V_write : STD_LOGIC;
    signal outMat_rows_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal outMat_rows_V_empty_n : STD_LOGIC;
    signal outMat_rows_V_read : STD_LOGIC;
    signal outMat_cols_V_U_ap_dummy_ce : STD_LOGIC;
    signal outMat_cols_V_din : STD_LOGIC_VECTOR (11 downto 0);
    signal outMat_cols_V_write : STD_LOGIC;
    signal outMat_cols_V_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal outMat_cols_V_empty_n : STD_LOGIC;
    signal outMat_cols_V_read : STD_LOGIC;
    signal inMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal inMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal inMat_data_stream_0_V_full_n : STD_LOGIC;
    signal inMat_data_stream_0_V_write : STD_LOGIC;
    signal inMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal inMat_data_stream_0_V_read : STD_LOGIC;
    signal inMat_data_stream_1_V_U_ap_dummy_ce : STD_LOGIC;
    signal inMat_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal inMat_data_stream_1_V_full_n : STD_LOGIC;
    signal inMat_data_stream_1_V_write : STD_LOGIC;
    signal inMat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inMat_data_stream_1_V_empty_n : STD_LOGIC;
    signal inMat_data_stream_1_V_read : STD_LOGIC;
    signal inMat_data_stream_2_V_U_ap_dummy_ce : STD_LOGIC;
    signal inMat_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal inMat_data_stream_2_V_full_n : STD_LOGIC;
    signal inMat_data_stream_2_V_write : STD_LOGIC;
    signal inMat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal inMat_data_stream_2_V_empty_n : STD_LOGIC;
    signal inMat_data_stream_2_V_read : STD_LOGIC;
    signal grayMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal grayMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grayMat_data_stream_0_V_full_n : STD_LOGIC;
    signal grayMat_data_stream_0_V_write : STD_LOGIC;
    signal grayMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal grayMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal grayMat_data_stream_0_V_read : STD_LOGIC;
    signal dilateMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal dilateMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal dilateMat_data_stream_0_V_full_n : STD_LOGIC;
    signal dilateMat_data_stream_0_V_write : STD_LOGIC;
    signal dilateMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dilateMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal dilateMat_data_stream_0_V_read : STD_LOGIC;
    signal threshMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal threshMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal threshMat_data_stream_0_V_full_n : STD_LOGIC;
    signal threshMat_data_stream_0_V_write : STD_LOGIC;
    signal threshMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal threshMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal threshMat_data_stream_0_V_read : STD_LOGIC;
    signal blurMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal blurMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blurMat_data_stream_0_V_full_n : STD_LOGIC;
    signal blurMat_data_stream_0_V_write : STD_LOGIC;
    signal blurMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal blurMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal blurMat_data_stream_0_V_read : STD_LOGIC;
    signal blursobelxMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelxMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blursobelxMat_data_stream_0_V_full_n : STD_LOGIC;
    signal blursobelxMat_data_stream_0_V_write : STD_LOGIC;
    signal blursobelxMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal blursobelxMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal blursobelxMat_data_stream_0_V_read : STD_LOGIC;
    signal blursobelyMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal blursobelyMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal blursobelyMat_data_stream_0_V_full_n : STD_LOGIC;
    signal blursobelyMat_data_stream_0_V_write : STD_LOGIC;
    signal blursobelyMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal blursobelyMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal blursobelyMat_data_stream_0_V_read : STD_LOGIC;
    signal sobelxMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal sobelxMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal sobelxMat_data_stream_0_V_full_n : STD_LOGIC;
    signal sobelxMat_data_stream_0_V_write : STD_LOGIC;
    signal sobelxMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal sobelxMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal sobelxMat_data_stream_0_V_read : STD_LOGIC;
    signal sobelyMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal sobelyMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal sobelyMat_data_stream_0_V_full_n : STD_LOGIC;
    signal sobelyMat_data_stream_0_V_write : STD_LOGIC;
    signal sobelyMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal sobelyMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal sobelyMat_data_stream_0_V_read : STD_LOGIC;
    signal absvalueMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal absvalueMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal absvalueMat_data_stream_0_V_full_n : STD_LOGIC;
    signal absvalueMat_data_stream_0_V_write : STD_LOGIC;
    signal absvalueMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal absvalueMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal absvalueMat_data_stream_0_V_read : STD_LOGIC;
    signal angleMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal angleMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal angleMat_data_stream_0_V_full_n : STD_LOGIC;
    signal angleMat_data_stream_0_V_write : STD_LOGIC;
    signal angleMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal angleMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal angleMat_data_stream_0_V_read : STD_LOGIC;
    signal nmsupressionMat_data_stream_0_U_ap_dummy_ce : STD_LOGIC;
    signal nmsupressionMat_data_stream_0_din : STD_LOGIC_VECTOR (7 downto 0);
    signal nmsupressionMat_data_stream_0_full_n : STD_LOGIC;
    signal nmsupressionMat_data_stream_0_write : STD_LOGIC;
    signal nmsupressionMat_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal nmsupressionMat_data_stream_0_empty_n : STD_LOGIC;
    signal nmsupressionMat_data_stream_0_read : STD_LOGIC;
    signal outMat_data_stream_0_V_U_ap_dummy_ce : STD_LOGIC;
    signal outMat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal outMat_data_stream_0_V_full_n : STD_LOGIC;
    signal outMat_data_stream_0_V_write : STD_LOGIC;
    signal outMat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal outMat_data_stream_0_V_empty_n : STD_LOGIC;
    signal outMat_data_stream_0_V_read : STD_LOGIC;
    signal ap_reg_procdone_toThreshold_Block_proc_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_reg_procdone_toThreshold_AXIvideo2Mat_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_CvtColor_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Threshold_1080_1920_0_0_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_GaussianBlur_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Duplicate_1080_1920_0_0_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Sobel_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Sobel_1_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Loop_GradientLoop_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Loop_LineBufferLoop_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_1_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_toThreshold_Mat2AXIvideo_8_1080_1920_0_U0 : STD_LOGIC := '0';
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;

    component toThreshold_Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (11 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component toThreshold_AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        IN_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        IN_STREAM_TVALID : IN STD_LOGIC;
        IN_STREAM_TREADY : OUT STD_LOGIC;
        IN_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        IN_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        IN_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        IN_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        IN_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        IN_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        img_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Threshold_1080_1920_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        dst_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        dst_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_V_full_n : IN STD_LOGIC;
        dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Dilate_0_0_1080_1920_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_GaussianBlur IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Duplicate_1080_1920_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        dst1_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        dst1_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        dst2_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Sobel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Sobel_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Loop_GradientLoop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        sobelxMat_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        sobelxMat_data_stream_0_V_empty_n : IN STD_LOGIC;
        sobelxMat_data_stream_0_V_read : OUT STD_LOGIC;
        sobelyMat_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        sobelyMat_data_stream_0_V_empty_n : IN STD_LOGIC;
        sobelyMat_data_stream_0_V_read : OUT STD_LOGIC;
        absvalueMat_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        absvalueMat_data_stream_0_V_full_n : IN STD_LOGIC;
        absvalueMat_data_stream_0_V_write : OUT STD_LOGIC;
        angleMat_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        angleMat_data_stream_0_V_full_n : IN STD_LOGIC;
        angleMat_data_stream_0_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Loop_LineBufferLoop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        absvalueMat_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        absvalueMat_data_stream_0_V_empty_n : IN STD_LOGIC;
        absvalueMat_data_stream_0_V_read : OUT STD_LOGIC;
        angleMat_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        angleMat_data_stream_0_V_empty_n : IN STD_LOGIC;
        angleMat_data_stream_0_V_read : OUT STD_LOGIC;
        nmsupressionMat_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        nmsupressionMat_data_stream_0_V_full_n : IN STD_LOGIC;
        nmsupressionMat_data_stream_0_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Dilate_0_0_1080_1920_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component toThreshold_Mat2AXIvideo_8_1080_1920_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        img_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
        img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_empty_n : IN STD_LOGIC;
        img_data_stream_V_read : OUT STD_LOGIC;
        OUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        OUT_STREAM_TVALID : OUT STD_LOGIC;
        OUT_STREAM_TREADY : IN STD_LOGIC;
        OUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FIFO_toThreshold_inMat_rows_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_inMat_rows_V_channel1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_inMat_cols_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_inMat_cols_V_channel1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_grayMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_grayMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_dilateMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_dilateMat_rows_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_dilateMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_dilateMat_cols_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_threshMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_threshMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blurMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blurMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelxMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelxMat_rows_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelxMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelxMat_cols_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelyMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelyMat_rows_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelyMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelyMat_cols_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_nmsupressionMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_nmsupressionMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_outMat_rows_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_outMat_cols_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_inMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_inMat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_inMat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_grayMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_dilateMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_threshMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blurMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelxMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_blursobelyMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_sobelxMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_sobelyMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_absvalueMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_angleMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_nmsupressionMat_data_stream_0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_toThreshold_outMat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    toThreshold_Block_proc_U0 : component toThreshold_Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Block_proc_U0_ap_start,
        ap_done => toThreshold_Block_proc_U0_ap_done,
        ap_continue => toThreshold_Block_proc_U0_ap_continue,
        ap_idle => toThreshold_Block_proc_U0_ap_idle,
        ap_ready => toThreshold_Block_proc_U0_ap_ready,
        rows => toThreshold_Block_proc_U0_rows,
        cols => toThreshold_Block_proc_U0_cols,
        ap_return_0 => toThreshold_Block_proc_U0_ap_return_0,
        ap_return_1 => toThreshold_Block_proc_U0_ap_return_1,
        ap_return_2 => toThreshold_Block_proc_U0_ap_return_2,
        ap_return_3 => toThreshold_Block_proc_U0_ap_return_3,
        ap_return_4 => toThreshold_Block_proc_U0_ap_return_4,
        ap_return_5 => toThreshold_Block_proc_U0_ap_return_5,
        ap_return_6 => toThreshold_Block_proc_U0_ap_return_6,
        ap_return_7 => toThreshold_Block_proc_U0_ap_return_7,
        ap_return_8 => toThreshold_Block_proc_U0_ap_return_8,
        ap_return_9 => toThreshold_Block_proc_U0_ap_return_9,
        ap_return_10 => toThreshold_Block_proc_U0_ap_return_10,
        ap_return_11 => toThreshold_Block_proc_U0_ap_return_11,
        ap_return_12 => toThreshold_Block_proc_U0_ap_return_12,
        ap_return_13 => toThreshold_Block_proc_U0_ap_return_13,
        ap_return_14 => toThreshold_Block_proc_U0_ap_return_14,
        ap_return_15 => toThreshold_Block_proc_U0_ap_return_15,
        ap_return_16 => toThreshold_Block_proc_U0_ap_return_16,
        ap_return_17 => toThreshold_Block_proc_U0_ap_return_17,
        ap_return_18 => toThreshold_Block_proc_U0_ap_return_18,
        ap_return_19 => toThreshold_Block_proc_U0_ap_return_19,
        ap_return_20 => toThreshold_Block_proc_U0_ap_return_20,
        ap_return_21 => toThreshold_Block_proc_U0_ap_return_21,
        ap_return_22 => toThreshold_Block_proc_U0_ap_return_22,
        ap_return_23 => toThreshold_Block_proc_U0_ap_return_23,
        ap_return_24 => toThreshold_Block_proc_U0_ap_return_24,
        ap_return_25 => toThreshold_Block_proc_U0_ap_return_25);

    toThreshold_AXIvideo2Mat_U0 : component toThreshold_AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_AXIvideo2Mat_U0_ap_start,
        ap_done => toThreshold_AXIvideo2Mat_U0_ap_done,
        ap_continue => toThreshold_AXIvideo2Mat_U0_ap_continue,
        ap_idle => toThreshold_AXIvideo2Mat_U0_ap_idle,
        ap_ready => toThreshold_AXIvideo2Mat_U0_ap_ready,
        IN_STREAM_TDATA => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TDATA,
        IN_STREAM_TVALID => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TVALID,
        IN_STREAM_TREADY => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TREADY,
        IN_STREAM_TKEEP => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TKEEP,
        IN_STREAM_TSTRB => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TSTRB,
        IN_STREAM_TUSER => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TUSER,
        IN_STREAM_TLAST => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TLAST,
        IN_STREAM_TID => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TID,
        IN_STREAM_TDEST => toThreshold_AXIvideo2Mat_U0_IN_STREAM_TDEST,
        img_rows_V_read => toThreshold_AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_read => toThreshold_AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_0_V_din => toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_full_n,
        img_data_stream_0_V_write => toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_full_n,
        img_data_stream_1_V_write => toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_full_n,
        img_data_stream_2_V_write => toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_write);

    toThreshold_CvtColor_U0 : component toThreshold_CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_CvtColor_U0_ap_start,
        ap_done => toThreshold_CvtColor_U0_ap_done,
        ap_continue => toThreshold_CvtColor_U0_ap_continue,
        ap_idle => toThreshold_CvtColor_U0_ap_idle,
        ap_ready => toThreshold_CvtColor_U0_ap_ready,
        p_src_rows_V_read => toThreshold_CvtColor_U0_p_src_rows_V_read,
        p_src_cols_V_read => toThreshold_CvtColor_U0_p_src_cols_V_read,
        p_src_data_stream_0_V_dout => toThreshold_CvtColor_U0_p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n => toThreshold_CvtColor_U0_p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read => toThreshold_CvtColor_U0_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => toThreshold_CvtColor_U0_p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n => toThreshold_CvtColor_U0_p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read => toThreshold_CvtColor_U0_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => toThreshold_CvtColor_U0_p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n => toThreshold_CvtColor_U0_p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read => toThreshold_CvtColor_U0_p_src_data_stream_2_V_read,
        p_dst_data_stream_V_din => toThreshold_CvtColor_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => toThreshold_CvtColor_U0_p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write => toThreshold_CvtColor_U0_p_dst_data_stream_V_write);

    toThreshold_Threshold_1080_1920_0_0_U0 : component toThreshold_Threshold_1080_1920_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Threshold_1080_1920_0_0_U0_ap_start,
        ap_done => toThreshold_Threshold_1080_1920_0_0_U0_ap_done,
        ap_continue => toThreshold_Threshold_1080_1920_0_0_U0_ap_continue,
        ap_idle => toThreshold_Threshold_1080_1920_0_0_U0_ap_idle,
        ap_ready => toThreshold_Threshold_1080_1920_0_0_U0_ap_ready,
        src_rows_V_read => toThreshold_Threshold_1080_1920_0_0_U0_src_rows_V_read,
        src_cols_V_read => toThreshold_Threshold_1080_1920_0_0_U0_src_cols_V_read,
        src_data_stream_V_dout => toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_dout,
        src_data_stream_V_empty_n => toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_empty_n,
        src_data_stream_V_read => toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_read,
        dst_rows_V_read => toThreshold_Threshold_1080_1920_0_0_U0_dst_rows_V_read,
        dst_cols_V_read => toThreshold_Threshold_1080_1920_0_0_U0_dst_cols_V_read,
        dst_data_stream_V_din => toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_din,
        dst_data_stream_V_full_n => toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_full_n,
        dst_data_stream_V_write => toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_write);

    toThreshold_Dilate_0_0_1080_1920_U0 : component toThreshold_Dilate_0_0_1080_1920_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Dilate_0_0_1080_1920_U0_ap_start,
        ap_done => toThreshold_Dilate_0_0_1080_1920_U0_ap_done,
        ap_continue => toThreshold_Dilate_0_0_1080_1920_U0_ap_continue,
        ap_idle => toThreshold_Dilate_0_0_1080_1920_U0_ap_idle,
        ap_ready => toThreshold_Dilate_0_0_1080_1920_U0_ap_ready,
        p_src_rows_V_read => toThreshold_Dilate_0_0_1080_1920_U0_p_src_rows_V_read,
        p_src_cols_V_read => toThreshold_Dilate_0_0_1080_1920_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n => toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read => toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write => toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write);

    toThreshold_GaussianBlur_U0 : component toThreshold_GaussianBlur
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_GaussianBlur_U0_ap_start,
        ap_done => toThreshold_GaussianBlur_U0_ap_done,
        ap_continue => toThreshold_GaussianBlur_U0_ap_continue,
        ap_idle => toThreshold_GaussianBlur_U0_ap_idle,
        ap_ready => toThreshold_GaussianBlur_U0_ap_ready,
        p_src_rows_V_read => toThreshold_GaussianBlur_U0_p_src_rows_V_read,
        p_src_cols_V_read => toThreshold_GaussianBlur_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => toThreshold_GaussianBlur_U0_p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n => toThreshold_GaussianBlur_U0_p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read => toThreshold_GaussianBlur_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => toThreshold_GaussianBlur_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => toThreshold_GaussianBlur_U0_p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write => toThreshold_GaussianBlur_U0_p_dst_data_stream_V_write);

    toThreshold_Duplicate_1080_1920_0_0_U0 : component toThreshold_Duplicate_1080_1920_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Duplicate_1080_1920_0_0_U0_ap_start,
        ap_done => toThreshold_Duplicate_1080_1920_0_0_U0_ap_done,
        ap_continue => toThreshold_Duplicate_1080_1920_0_0_U0_ap_continue,
        ap_idle => toThreshold_Duplicate_1080_1920_0_0_U0_ap_idle,
        ap_ready => toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready,
        src_rows_V_read => toThreshold_Duplicate_1080_1920_0_0_U0_src_rows_V_read,
        src_cols_V_read => toThreshold_Duplicate_1080_1920_0_0_U0_src_cols_V_read,
        src_data_stream_V_dout => toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_dout,
        src_data_stream_V_empty_n => toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_empty_n,
        src_data_stream_V_read => toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_read,
        dst1_rows_V_read => toThreshold_Duplicate_1080_1920_0_0_U0_dst1_rows_V_read,
        dst1_cols_V_read => toThreshold_Duplicate_1080_1920_0_0_U0_dst1_cols_V_read,
        dst1_data_stream_V_din => toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_full_n,
        dst1_data_stream_V_write => toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_write,
        dst2_rows_V_read => toThreshold_Duplicate_1080_1920_0_0_U0_dst2_rows_V_read,
        dst2_cols_V_read => toThreshold_Duplicate_1080_1920_0_0_U0_dst2_cols_V_read,
        dst2_data_stream_V_din => toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_full_n,
        dst2_data_stream_V_write => toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_write);

    toThreshold_Sobel_U0 : component toThreshold_Sobel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Sobel_U0_ap_start,
        ap_done => toThreshold_Sobel_U0_ap_done,
        ap_continue => toThreshold_Sobel_U0_ap_continue,
        ap_idle => toThreshold_Sobel_U0_ap_idle,
        ap_ready => toThreshold_Sobel_U0_ap_ready,
        p_src_rows_V_read => toThreshold_Sobel_U0_p_src_rows_V_read,
        p_src_cols_V_read => toThreshold_Sobel_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => toThreshold_Sobel_U0_p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n => toThreshold_Sobel_U0_p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read => toThreshold_Sobel_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => toThreshold_Sobel_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => toThreshold_Sobel_U0_p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write => toThreshold_Sobel_U0_p_dst_data_stream_V_write);

    toThreshold_Sobel_1_U0 : component toThreshold_Sobel_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Sobel_1_U0_ap_start,
        ap_done => toThreshold_Sobel_1_U0_ap_done,
        ap_continue => toThreshold_Sobel_1_U0_ap_continue,
        ap_idle => toThreshold_Sobel_1_U0_ap_idle,
        ap_ready => toThreshold_Sobel_1_U0_ap_ready,
        p_src_rows_V_read => toThreshold_Sobel_1_U0_p_src_rows_V_read,
        p_src_cols_V_read => toThreshold_Sobel_1_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => toThreshold_Sobel_1_U0_p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n => toThreshold_Sobel_1_U0_p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read => toThreshold_Sobel_1_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => toThreshold_Sobel_1_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => toThreshold_Sobel_1_U0_p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write => toThreshold_Sobel_1_U0_p_dst_data_stream_V_write);

    toThreshold_Loop_GradientLoop_proc_U0 : component toThreshold_Loop_GradientLoop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Loop_GradientLoop_proc_U0_ap_start,
        ap_done => toThreshold_Loop_GradientLoop_proc_U0_ap_done,
        ap_continue => toThreshold_Loop_GradientLoop_proc_U0_ap_continue,
        ap_idle => toThreshold_Loop_GradientLoop_proc_U0_ap_idle,
        ap_ready => toThreshold_Loop_GradientLoop_proc_U0_ap_ready,
        rows => toThreshold_Loop_GradientLoop_proc_U0_rows,
        cols => toThreshold_Loop_GradientLoop_proc_U0_cols,
        sobelxMat_data_stream_0_V_dout => toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_dout,
        sobelxMat_data_stream_0_V_empty_n => toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_empty_n,
        sobelxMat_data_stream_0_V_read => toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_read,
        sobelyMat_data_stream_0_V_dout => toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_dout,
        sobelyMat_data_stream_0_V_empty_n => toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_empty_n,
        sobelyMat_data_stream_0_V_read => toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_read,
        absvalueMat_data_stream_0_V_din => toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_din,
        absvalueMat_data_stream_0_V_full_n => toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_full_n,
        absvalueMat_data_stream_0_V_write => toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_write,
        angleMat_data_stream_0_V_din => toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_din,
        angleMat_data_stream_0_V_full_n => toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_full_n,
        angleMat_data_stream_0_V_write => toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_write);

    toThreshold_Loop_LineBufferLoop_proc_U0 : component toThreshold_Loop_LineBufferLoop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Loop_LineBufferLoop_proc_U0_ap_start,
        ap_done => toThreshold_Loop_LineBufferLoop_proc_U0_ap_done,
        ap_continue => toThreshold_Loop_LineBufferLoop_proc_U0_ap_continue,
        ap_idle => toThreshold_Loop_LineBufferLoop_proc_U0_ap_idle,
        ap_ready => toThreshold_Loop_LineBufferLoop_proc_U0_ap_ready,
        cols => toThreshold_Loop_LineBufferLoop_proc_U0_cols,
        rows => toThreshold_Loop_LineBufferLoop_proc_U0_rows,
        absvalueMat_data_stream_0_V_dout => toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_dout,
        absvalueMat_data_stream_0_V_empty_n => toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_empty_n,
        absvalueMat_data_stream_0_V_read => toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_read,
        angleMat_data_stream_0_V_dout => toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_dout,
        angleMat_data_stream_0_V_empty_n => toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_empty_n,
        angleMat_data_stream_0_V_read => toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_read,
        nmsupressionMat_data_stream_0_V_din => toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_din,
        nmsupressionMat_data_stream_0_V_full_n => toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_full_n,
        nmsupressionMat_data_stream_0_V_write => toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_write);

    toThreshold_Dilate_0_0_1080_1920_1_U0 : component toThreshold_Dilate_0_0_1080_1920_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Dilate_0_0_1080_1920_1_U0_ap_start,
        ap_done => toThreshold_Dilate_0_0_1080_1920_1_U0_ap_done,
        ap_continue => toThreshold_Dilate_0_0_1080_1920_1_U0_ap_continue,
        ap_idle => toThreshold_Dilate_0_0_1080_1920_1_U0_ap_idle,
        ap_ready => toThreshold_Dilate_0_0_1080_1920_1_U0_ap_ready,
        p_src_rows_V_read => toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_rows_V_read,
        p_src_cols_V_read => toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n => toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read => toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write => toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_write);

    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0 : component toThreshold_Mat2AXIvideo_8_1080_1920_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_start,
        ap_done => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_done,
        ap_continue => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue,
        ap_idle => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle,
        ap_ready => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready,
        img_rows_V_read => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read,
        img_cols_V_read => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read,
        img_data_stream_V_dout => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout,
        img_data_stream_V_empty_n => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n,
        img_data_stream_V_read => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read,
        OUT_STREAM_TDATA => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA,
        OUT_STREAM_TVALID => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID,
        OUT_STREAM_TREADY => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY,
        OUT_STREAM_TKEEP => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP,
        OUT_STREAM_TSTRB => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB,
        OUT_STREAM_TUSER => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER,
        OUT_STREAM_TLAST => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST,
        OUT_STREAM_TID => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID,
        OUT_STREAM_TDEST => toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST);

    inMat_rows_V_channel_U : component FIFO_toThreshold_inMat_rows_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => inMat_rows_V_channel_U_ap_dummy_ce,
        if_write_ce => inMat_rows_V_channel_U_ap_dummy_ce,
        if_din => inMat_rows_V_channel_din,
        if_full_n => inMat_rows_V_channel_full_n,
        if_write => inMat_rows_V_channel_write,
        if_dout => inMat_rows_V_channel_dout,
        if_empty_n => inMat_rows_V_channel_empty_n,
        if_read => inMat_rows_V_channel_read);

    inMat_rows_V_channel1_U : component FIFO_toThreshold_inMat_rows_V_channel1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => inMat_rows_V_channel1_U_ap_dummy_ce,
        if_write_ce => inMat_rows_V_channel1_U_ap_dummy_ce,
        if_din => inMat_rows_V_channel1_din,
        if_full_n => inMat_rows_V_channel1_full_n,
        if_write => inMat_rows_V_channel1_write,
        if_dout => inMat_rows_V_channel1_dout,
        if_empty_n => inMat_rows_V_channel1_empty_n,
        if_read => inMat_rows_V_channel1_read);

    inMat_cols_V_channel_U : component FIFO_toThreshold_inMat_cols_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => inMat_cols_V_channel_U_ap_dummy_ce,
        if_write_ce => inMat_cols_V_channel_U_ap_dummy_ce,
        if_din => inMat_cols_V_channel_din,
        if_full_n => inMat_cols_V_channel_full_n,
        if_write => inMat_cols_V_channel_write,
        if_dout => inMat_cols_V_channel_dout,
        if_empty_n => inMat_cols_V_channel_empty_n,
        if_read => inMat_cols_V_channel_read);

    inMat_cols_V_channel1_U : component FIFO_toThreshold_inMat_cols_V_channel1
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => inMat_cols_V_channel1_U_ap_dummy_ce,
        if_write_ce => inMat_cols_V_channel1_U_ap_dummy_ce,
        if_din => inMat_cols_V_channel1_din,
        if_full_n => inMat_cols_V_channel1_full_n,
        if_write => inMat_cols_V_channel1_write,
        if_dout => inMat_cols_V_channel1_dout,
        if_empty_n => inMat_cols_V_channel1_empty_n,
        if_read => inMat_cols_V_channel1_read);

    grayMat_rows_V_U : component FIFO_toThreshold_grayMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => grayMat_rows_V_U_ap_dummy_ce,
        if_write_ce => grayMat_rows_V_U_ap_dummy_ce,
        if_din => grayMat_rows_V_din,
        if_full_n => grayMat_rows_V_full_n,
        if_write => grayMat_rows_V_write,
        if_dout => grayMat_rows_V_dout,
        if_empty_n => grayMat_rows_V_empty_n,
        if_read => grayMat_rows_V_read);

    grayMat_cols_V_U : component FIFO_toThreshold_grayMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => grayMat_cols_V_U_ap_dummy_ce,
        if_write_ce => grayMat_cols_V_U_ap_dummy_ce,
        if_din => grayMat_cols_V_din,
        if_full_n => grayMat_cols_V_full_n,
        if_write => grayMat_cols_V_write,
        if_dout => grayMat_cols_V_dout,
        if_empty_n => grayMat_cols_V_empty_n,
        if_read => grayMat_cols_V_read);

    dilateMat_rows_V_U : component FIFO_toThreshold_dilateMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => dilateMat_rows_V_U_ap_dummy_ce,
        if_write_ce => dilateMat_rows_V_U_ap_dummy_ce,
        if_din => dilateMat_rows_V_din,
        if_full_n => dilateMat_rows_V_full_n,
        if_write => dilateMat_rows_V_write,
        if_dout => dilateMat_rows_V_dout,
        if_empty_n => dilateMat_rows_V_empty_n,
        if_read => dilateMat_rows_V_read);

    dilateMat_rows_V_channel_U : component FIFO_toThreshold_dilateMat_rows_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => dilateMat_rows_V_channel_U_ap_dummy_ce,
        if_write_ce => dilateMat_rows_V_channel_U_ap_dummy_ce,
        if_din => dilateMat_rows_V_channel_din,
        if_full_n => dilateMat_rows_V_channel_full_n,
        if_write => dilateMat_rows_V_channel_write,
        if_dout => dilateMat_rows_V_channel_dout,
        if_empty_n => dilateMat_rows_V_channel_empty_n,
        if_read => dilateMat_rows_V_channel_read);

    dilateMat_cols_V_U : component FIFO_toThreshold_dilateMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => dilateMat_cols_V_U_ap_dummy_ce,
        if_write_ce => dilateMat_cols_V_U_ap_dummy_ce,
        if_din => dilateMat_cols_V_din,
        if_full_n => dilateMat_cols_V_full_n,
        if_write => dilateMat_cols_V_write,
        if_dout => dilateMat_cols_V_dout,
        if_empty_n => dilateMat_cols_V_empty_n,
        if_read => dilateMat_cols_V_read);

    dilateMat_cols_V_channel_U : component FIFO_toThreshold_dilateMat_cols_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => dilateMat_cols_V_channel_U_ap_dummy_ce,
        if_write_ce => dilateMat_cols_V_channel_U_ap_dummy_ce,
        if_din => dilateMat_cols_V_channel_din,
        if_full_n => dilateMat_cols_V_channel_full_n,
        if_write => dilateMat_cols_V_channel_write,
        if_dout => dilateMat_cols_V_channel_dout,
        if_empty_n => dilateMat_cols_V_channel_empty_n,
        if_read => dilateMat_cols_V_channel_read);

    threshMat_rows_V_U : component FIFO_toThreshold_threshMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => threshMat_rows_V_U_ap_dummy_ce,
        if_write_ce => threshMat_rows_V_U_ap_dummy_ce,
        if_din => threshMat_rows_V_din,
        if_full_n => threshMat_rows_V_full_n,
        if_write => threshMat_rows_V_write,
        if_dout => threshMat_rows_V_dout,
        if_empty_n => threshMat_rows_V_empty_n,
        if_read => threshMat_rows_V_read);

    threshMat_cols_V_U : component FIFO_toThreshold_threshMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => threshMat_cols_V_U_ap_dummy_ce,
        if_write_ce => threshMat_cols_V_U_ap_dummy_ce,
        if_din => threshMat_cols_V_din,
        if_full_n => threshMat_cols_V_full_n,
        if_write => threshMat_cols_V_write,
        if_dout => threshMat_cols_V_dout,
        if_empty_n => threshMat_cols_V_empty_n,
        if_read => threshMat_cols_V_read);

    blurMat_rows_V_U : component FIFO_toThreshold_blurMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blurMat_rows_V_U_ap_dummy_ce,
        if_write_ce => blurMat_rows_V_U_ap_dummy_ce,
        if_din => blurMat_rows_V_din,
        if_full_n => blurMat_rows_V_full_n,
        if_write => blurMat_rows_V_write,
        if_dout => blurMat_rows_V_dout,
        if_empty_n => blurMat_rows_V_empty_n,
        if_read => blurMat_rows_V_read);

    blurMat_cols_V_U : component FIFO_toThreshold_blurMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blurMat_cols_V_U_ap_dummy_ce,
        if_write_ce => blurMat_cols_V_U_ap_dummy_ce,
        if_din => blurMat_cols_V_din,
        if_full_n => blurMat_cols_V_full_n,
        if_write => blurMat_cols_V_write,
        if_dout => blurMat_cols_V_dout,
        if_empty_n => blurMat_cols_V_empty_n,
        if_read => blurMat_cols_V_read);

    blursobelxMat_rows_V_U : component FIFO_toThreshold_blursobelxMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelxMat_rows_V_U_ap_dummy_ce,
        if_write_ce => blursobelxMat_rows_V_U_ap_dummy_ce,
        if_din => blursobelxMat_rows_V_din,
        if_full_n => blursobelxMat_rows_V_full_n,
        if_write => blursobelxMat_rows_V_write,
        if_dout => blursobelxMat_rows_V_dout,
        if_empty_n => blursobelxMat_rows_V_empty_n,
        if_read => blursobelxMat_rows_V_read);

    blursobelxMat_rows_V_channel_U : component FIFO_toThreshold_blursobelxMat_rows_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelxMat_rows_V_channel_U_ap_dummy_ce,
        if_write_ce => blursobelxMat_rows_V_channel_U_ap_dummy_ce,
        if_din => blursobelxMat_rows_V_channel_din,
        if_full_n => blursobelxMat_rows_V_channel_full_n,
        if_write => blursobelxMat_rows_V_channel_write,
        if_dout => blursobelxMat_rows_V_channel_dout,
        if_empty_n => blursobelxMat_rows_V_channel_empty_n,
        if_read => blursobelxMat_rows_V_channel_read);

    blursobelxMat_cols_V_U : component FIFO_toThreshold_blursobelxMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelxMat_cols_V_U_ap_dummy_ce,
        if_write_ce => blursobelxMat_cols_V_U_ap_dummy_ce,
        if_din => blursobelxMat_cols_V_din,
        if_full_n => blursobelxMat_cols_V_full_n,
        if_write => blursobelxMat_cols_V_write,
        if_dout => blursobelxMat_cols_V_dout,
        if_empty_n => blursobelxMat_cols_V_empty_n,
        if_read => blursobelxMat_cols_V_read);

    blursobelxMat_cols_V_channel_U : component FIFO_toThreshold_blursobelxMat_cols_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelxMat_cols_V_channel_U_ap_dummy_ce,
        if_write_ce => blursobelxMat_cols_V_channel_U_ap_dummy_ce,
        if_din => blursobelxMat_cols_V_channel_din,
        if_full_n => blursobelxMat_cols_V_channel_full_n,
        if_write => blursobelxMat_cols_V_channel_write,
        if_dout => blursobelxMat_cols_V_channel_dout,
        if_empty_n => blursobelxMat_cols_V_channel_empty_n,
        if_read => blursobelxMat_cols_V_channel_read);

    blursobelyMat_rows_V_U : component FIFO_toThreshold_blursobelyMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelyMat_rows_V_U_ap_dummy_ce,
        if_write_ce => blursobelyMat_rows_V_U_ap_dummy_ce,
        if_din => blursobelyMat_rows_V_din,
        if_full_n => blursobelyMat_rows_V_full_n,
        if_write => blursobelyMat_rows_V_write,
        if_dout => blursobelyMat_rows_V_dout,
        if_empty_n => blursobelyMat_rows_V_empty_n,
        if_read => blursobelyMat_rows_V_read);

    blursobelyMat_rows_V_channel_U : component FIFO_toThreshold_blursobelyMat_rows_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelyMat_rows_V_channel_U_ap_dummy_ce,
        if_write_ce => blursobelyMat_rows_V_channel_U_ap_dummy_ce,
        if_din => blursobelyMat_rows_V_channel_din,
        if_full_n => blursobelyMat_rows_V_channel_full_n,
        if_write => blursobelyMat_rows_V_channel_write,
        if_dout => blursobelyMat_rows_V_channel_dout,
        if_empty_n => blursobelyMat_rows_V_channel_empty_n,
        if_read => blursobelyMat_rows_V_channel_read);

    blursobelyMat_cols_V_U : component FIFO_toThreshold_blursobelyMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelyMat_cols_V_U_ap_dummy_ce,
        if_write_ce => blursobelyMat_cols_V_U_ap_dummy_ce,
        if_din => blursobelyMat_cols_V_din,
        if_full_n => blursobelyMat_cols_V_full_n,
        if_write => blursobelyMat_cols_V_write,
        if_dout => blursobelyMat_cols_V_dout,
        if_empty_n => blursobelyMat_cols_V_empty_n,
        if_read => blursobelyMat_cols_V_read);

    blursobelyMat_cols_V_channel_U : component FIFO_toThreshold_blursobelyMat_cols_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelyMat_cols_V_channel_U_ap_dummy_ce,
        if_write_ce => blursobelyMat_cols_V_channel_U_ap_dummy_ce,
        if_din => blursobelyMat_cols_V_channel_din,
        if_full_n => blursobelyMat_cols_V_channel_full_n,
        if_write => blursobelyMat_cols_V_channel_write,
        if_dout => blursobelyMat_cols_V_channel_dout,
        if_empty_n => blursobelyMat_cols_V_channel_empty_n,
        if_read => blursobelyMat_cols_V_channel_read);

    nmsupressionMat_rows_V_U : component FIFO_toThreshold_nmsupressionMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => nmsupressionMat_rows_V_U_ap_dummy_ce,
        if_write_ce => nmsupressionMat_rows_V_U_ap_dummy_ce,
        if_din => nmsupressionMat_rows_V_din,
        if_full_n => nmsupressionMat_rows_V_full_n,
        if_write => nmsupressionMat_rows_V_write,
        if_dout => nmsupressionMat_rows_V_dout,
        if_empty_n => nmsupressionMat_rows_V_empty_n,
        if_read => nmsupressionMat_rows_V_read);

    nmsupressionMat_cols_V_U : component FIFO_toThreshold_nmsupressionMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => nmsupressionMat_cols_V_U_ap_dummy_ce,
        if_write_ce => nmsupressionMat_cols_V_U_ap_dummy_ce,
        if_din => nmsupressionMat_cols_V_din,
        if_full_n => nmsupressionMat_cols_V_full_n,
        if_write => nmsupressionMat_cols_V_write,
        if_dout => nmsupressionMat_cols_V_dout,
        if_empty_n => nmsupressionMat_cols_V_empty_n,
        if_read => nmsupressionMat_cols_V_read);

    outMat_rows_V_U : component FIFO_toThreshold_outMat_rows_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => outMat_rows_V_U_ap_dummy_ce,
        if_write_ce => outMat_rows_V_U_ap_dummy_ce,
        if_din => outMat_rows_V_din,
        if_full_n => outMat_rows_V_full_n,
        if_write => outMat_rows_V_write,
        if_dout => outMat_rows_V_dout,
        if_empty_n => outMat_rows_V_empty_n,
        if_read => outMat_rows_V_read);

    outMat_cols_V_U : component FIFO_toThreshold_outMat_cols_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => outMat_cols_V_U_ap_dummy_ce,
        if_write_ce => outMat_cols_V_U_ap_dummy_ce,
        if_din => outMat_cols_V_din,
        if_full_n => outMat_cols_V_full_n,
        if_write => outMat_cols_V_write,
        if_dout => outMat_cols_V_dout,
        if_empty_n => outMat_cols_V_empty_n,
        if_read => outMat_cols_V_read);

    inMat_data_stream_0_V_U : component FIFO_toThreshold_inMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => inMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => inMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => inMat_data_stream_0_V_din,
        if_full_n => inMat_data_stream_0_V_full_n,
        if_write => inMat_data_stream_0_V_write,
        if_dout => inMat_data_stream_0_V_dout,
        if_empty_n => inMat_data_stream_0_V_empty_n,
        if_read => inMat_data_stream_0_V_read);

    inMat_data_stream_1_V_U : component FIFO_toThreshold_inMat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => inMat_data_stream_1_V_U_ap_dummy_ce,
        if_write_ce => inMat_data_stream_1_V_U_ap_dummy_ce,
        if_din => inMat_data_stream_1_V_din,
        if_full_n => inMat_data_stream_1_V_full_n,
        if_write => inMat_data_stream_1_V_write,
        if_dout => inMat_data_stream_1_V_dout,
        if_empty_n => inMat_data_stream_1_V_empty_n,
        if_read => inMat_data_stream_1_V_read);

    inMat_data_stream_2_V_U : component FIFO_toThreshold_inMat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => inMat_data_stream_2_V_U_ap_dummy_ce,
        if_write_ce => inMat_data_stream_2_V_U_ap_dummy_ce,
        if_din => inMat_data_stream_2_V_din,
        if_full_n => inMat_data_stream_2_V_full_n,
        if_write => inMat_data_stream_2_V_write,
        if_dout => inMat_data_stream_2_V_dout,
        if_empty_n => inMat_data_stream_2_V_empty_n,
        if_read => inMat_data_stream_2_V_read);

    grayMat_data_stream_0_V_U : component FIFO_toThreshold_grayMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => grayMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => grayMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => grayMat_data_stream_0_V_din,
        if_full_n => grayMat_data_stream_0_V_full_n,
        if_write => grayMat_data_stream_0_V_write,
        if_dout => grayMat_data_stream_0_V_dout,
        if_empty_n => grayMat_data_stream_0_V_empty_n,
        if_read => grayMat_data_stream_0_V_read);

    dilateMat_data_stream_0_V_U : component FIFO_toThreshold_dilateMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => dilateMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => dilateMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => dilateMat_data_stream_0_V_din,
        if_full_n => dilateMat_data_stream_0_V_full_n,
        if_write => dilateMat_data_stream_0_V_write,
        if_dout => dilateMat_data_stream_0_V_dout,
        if_empty_n => dilateMat_data_stream_0_V_empty_n,
        if_read => dilateMat_data_stream_0_V_read);

    threshMat_data_stream_0_V_U : component FIFO_toThreshold_threshMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => threshMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => threshMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => threshMat_data_stream_0_V_din,
        if_full_n => threshMat_data_stream_0_V_full_n,
        if_write => threshMat_data_stream_0_V_write,
        if_dout => threshMat_data_stream_0_V_dout,
        if_empty_n => threshMat_data_stream_0_V_empty_n,
        if_read => threshMat_data_stream_0_V_read);

    blurMat_data_stream_0_V_U : component FIFO_toThreshold_blurMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blurMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => blurMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => blurMat_data_stream_0_V_din,
        if_full_n => blurMat_data_stream_0_V_full_n,
        if_write => blurMat_data_stream_0_V_write,
        if_dout => blurMat_data_stream_0_V_dout,
        if_empty_n => blurMat_data_stream_0_V_empty_n,
        if_read => blurMat_data_stream_0_V_read);

    blursobelxMat_data_stream_0_V_U : component FIFO_toThreshold_blursobelxMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelxMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => blursobelxMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => blursobelxMat_data_stream_0_V_din,
        if_full_n => blursobelxMat_data_stream_0_V_full_n,
        if_write => blursobelxMat_data_stream_0_V_write,
        if_dout => blursobelxMat_data_stream_0_V_dout,
        if_empty_n => blursobelxMat_data_stream_0_V_empty_n,
        if_read => blursobelxMat_data_stream_0_V_read);

    blursobelyMat_data_stream_0_V_U : component FIFO_toThreshold_blursobelyMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => blursobelyMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => blursobelyMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => blursobelyMat_data_stream_0_V_din,
        if_full_n => blursobelyMat_data_stream_0_V_full_n,
        if_write => blursobelyMat_data_stream_0_V_write,
        if_dout => blursobelyMat_data_stream_0_V_dout,
        if_empty_n => blursobelyMat_data_stream_0_V_empty_n,
        if_read => blursobelyMat_data_stream_0_V_read);

    sobelxMat_data_stream_0_V_U : component FIFO_toThreshold_sobelxMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => sobelxMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => sobelxMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => sobelxMat_data_stream_0_V_din,
        if_full_n => sobelxMat_data_stream_0_V_full_n,
        if_write => sobelxMat_data_stream_0_V_write,
        if_dout => sobelxMat_data_stream_0_V_dout,
        if_empty_n => sobelxMat_data_stream_0_V_empty_n,
        if_read => sobelxMat_data_stream_0_V_read);

    sobelyMat_data_stream_0_V_U : component FIFO_toThreshold_sobelyMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => sobelyMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => sobelyMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => sobelyMat_data_stream_0_V_din,
        if_full_n => sobelyMat_data_stream_0_V_full_n,
        if_write => sobelyMat_data_stream_0_V_write,
        if_dout => sobelyMat_data_stream_0_V_dout,
        if_empty_n => sobelyMat_data_stream_0_V_empty_n,
        if_read => sobelyMat_data_stream_0_V_read);

    absvalueMat_data_stream_0_V_U : component FIFO_toThreshold_absvalueMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => absvalueMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => absvalueMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => absvalueMat_data_stream_0_V_din,
        if_full_n => absvalueMat_data_stream_0_V_full_n,
        if_write => absvalueMat_data_stream_0_V_write,
        if_dout => absvalueMat_data_stream_0_V_dout,
        if_empty_n => absvalueMat_data_stream_0_V_empty_n,
        if_read => absvalueMat_data_stream_0_V_read);

    angleMat_data_stream_0_V_U : component FIFO_toThreshold_angleMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => angleMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => angleMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => angleMat_data_stream_0_V_din,
        if_full_n => angleMat_data_stream_0_V_full_n,
        if_write => angleMat_data_stream_0_V_write,
        if_dout => angleMat_data_stream_0_V_dout,
        if_empty_n => angleMat_data_stream_0_V_empty_n,
        if_read => angleMat_data_stream_0_V_read);

    nmsupressionMat_data_stream_0_U : component FIFO_toThreshold_nmsupressionMat_data_stream_0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => nmsupressionMat_data_stream_0_U_ap_dummy_ce,
        if_write_ce => nmsupressionMat_data_stream_0_U_ap_dummy_ce,
        if_din => nmsupressionMat_data_stream_0_din,
        if_full_n => nmsupressionMat_data_stream_0_full_n,
        if_write => nmsupressionMat_data_stream_0_write,
        if_dout => nmsupressionMat_data_stream_0_dout,
        if_empty_n => nmsupressionMat_data_stream_0_empty_n,
        if_read => nmsupressionMat_data_stream_0_read);

    outMat_data_stream_0_V_U : component FIFO_toThreshold_outMat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => outMat_data_stream_0_V_U_ap_dummy_ce,
        if_write_ce => outMat_data_stream_0_V_U_ap_dummy_ce,
        if_din => outMat_data_stream_0_V_din,
        if_full_n => outMat_data_stream_0_V_full_n,
        if_write => outMat_data_stream_0_V_write,
        if_dout => outMat_data_stream_0_V_dout,
        if_empty_n => outMat_data_stream_0_V_empty_n,
        if_read => outMat_data_stream_0_V_read);





    -- ap_reg_procdone_toThreshold_AXIvideo2Mat_U0 assign process. --
    ap_reg_procdone_toThreshold_AXIvideo2Mat_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_AXIvideo2Mat_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_AXIvideo2Mat_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_AXIvideo2Mat_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_AXIvideo2Mat_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Block_proc_U0 assign process. --
    ap_reg_procdone_toThreshold_Block_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Block_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Block_proc_U0 <= ap_const_logic_0;
                elsif ((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1)) then 
                    ap_reg_procdone_toThreshold_Block_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_CvtColor_U0 assign process. --
    ap_reg_procdone_toThreshold_CvtColor_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_CvtColor_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_CvtColor_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_CvtColor_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_CvtColor_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_1_U0 assign process. --
    ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_1_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_1_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_1_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Dilate_0_0_1080_1920_1_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_1_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_U0 assign process. --
    ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Dilate_0_0_1080_1920_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Dilate_0_0_1080_1920_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Duplicate_1080_1920_0_0_U0 assign process. --
    ap_reg_procdone_toThreshold_Duplicate_1080_1920_0_0_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Duplicate_1080_1920_0_0_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Duplicate_1080_1920_0_0_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Duplicate_1080_1920_0_0_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Duplicate_1080_1920_0_0_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_GaussianBlur_U0 assign process. --
    ap_reg_procdone_toThreshold_GaussianBlur_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_GaussianBlur_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_GaussianBlur_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_GaussianBlur_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_GaussianBlur_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Loop_GradientLoop_proc_U0 assign process. --
    ap_reg_procdone_toThreshold_Loop_GradientLoop_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Loop_GradientLoop_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Loop_GradientLoop_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Loop_GradientLoop_proc_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Loop_GradientLoop_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Loop_LineBufferLoop_proc_U0 assign process. --
    ap_reg_procdone_toThreshold_Loop_LineBufferLoop_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Loop_LineBufferLoop_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Loop_LineBufferLoop_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Loop_LineBufferLoop_proc_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Loop_LineBufferLoop_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Mat2AXIvideo_8_1080_1920_0_U0 assign process. --
    ap_reg_procdone_toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Mat2AXIvideo_8_1080_1920_0_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Mat2AXIvideo_8_1080_1920_0_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Mat2AXIvideo_8_1080_1920_0_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Sobel_1_U0 assign process. --
    ap_reg_procdone_toThreshold_Sobel_1_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Sobel_1_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Sobel_1_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Sobel_1_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Sobel_1_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Sobel_U0 assign process. --
    ap_reg_procdone_toThreshold_Sobel_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Sobel_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Sobel_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Sobel_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Sobel_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_toThreshold_Threshold_1080_1920_0_0_U0 assign process. --
    ap_reg_procdone_toThreshold_Threshold_1080_1920_0_0_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_toThreshold_Threshold_1080_1920_0_0_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_toThreshold_Threshold_1080_1920_0_0_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = toThreshold_Threshold_1080_1920_0_0_U0_ap_done)) then 
                    ap_reg_procdone_toThreshold_Threshold_1080_1920_0_0_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blurMat_cols_V_full_n assign process. --
    ap_reg_ready_blurMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blurMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blurMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blurMat_cols_V_full_n))) then 
                    ap_reg_ready_blurMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blurMat_rows_V_full_n assign process. --
    ap_reg_ready_blurMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blurMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blurMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blurMat_rows_V_full_n))) then 
                    ap_reg_ready_blurMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelxMat_cols_V_channel_full_n assign process. --
    ap_reg_ready_blursobelxMat_cols_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelxMat_cols_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelxMat_cols_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelxMat_cols_V_channel_full_n))) then 
                    ap_reg_ready_blursobelxMat_cols_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelxMat_cols_V_full_n assign process. --
    ap_reg_ready_blursobelxMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelxMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelxMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelxMat_cols_V_full_n))) then 
                    ap_reg_ready_blursobelxMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelxMat_rows_V_channel_full_n assign process. --
    ap_reg_ready_blursobelxMat_rows_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelxMat_rows_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelxMat_rows_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelxMat_rows_V_channel_full_n))) then 
                    ap_reg_ready_blursobelxMat_rows_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelxMat_rows_V_full_n assign process. --
    ap_reg_ready_blursobelxMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelxMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelxMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelxMat_rows_V_full_n))) then 
                    ap_reg_ready_blursobelxMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelyMat_cols_V_channel_full_n assign process. --
    ap_reg_ready_blursobelyMat_cols_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelyMat_cols_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelyMat_cols_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelyMat_cols_V_channel_full_n))) then 
                    ap_reg_ready_blursobelyMat_cols_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelyMat_cols_V_full_n assign process. --
    ap_reg_ready_blursobelyMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelyMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelyMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelyMat_cols_V_full_n))) then 
                    ap_reg_ready_blursobelyMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelyMat_rows_V_channel_full_n assign process. --
    ap_reg_ready_blursobelyMat_rows_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelyMat_rows_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelyMat_rows_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelyMat_rows_V_channel_full_n))) then 
                    ap_reg_ready_blursobelyMat_rows_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_blursobelyMat_rows_V_full_n assign process. --
    ap_reg_ready_blursobelyMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_blursobelyMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_blursobelyMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = blursobelyMat_rows_V_full_n))) then 
                    ap_reg_ready_blursobelyMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dilateMat_cols_V_channel_full_n assign process. --
    ap_reg_ready_dilateMat_cols_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_dilateMat_cols_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_dilateMat_cols_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = dilateMat_cols_V_channel_full_n))) then 
                    ap_reg_ready_dilateMat_cols_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dilateMat_cols_V_full_n assign process. --
    ap_reg_ready_dilateMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_dilateMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_dilateMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = dilateMat_cols_V_full_n))) then 
                    ap_reg_ready_dilateMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dilateMat_rows_V_channel_full_n assign process. --
    ap_reg_ready_dilateMat_rows_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_dilateMat_rows_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_dilateMat_rows_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = dilateMat_rows_V_channel_full_n))) then 
                    ap_reg_ready_dilateMat_rows_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dilateMat_rows_V_full_n assign process. --
    ap_reg_ready_dilateMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_dilateMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_dilateMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = dilateMat_rows_V_full_n))) then 
                    ap_reg_ready_dilateMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_grayMat_cols_V_full_n assign process. --
    ap_reg_ready_grayMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_grayMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_grayMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = grayMat_cols_V_full_n))) then 
                    ap_reg_ready_grayMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_grayMat_rows_V_full_n assign process. --
    ap_reg_ready_grayMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_grayMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_grayMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = grayMat_rows_V_full_n))) then 
                    ap_reg_ready_grayMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_inMat_cols_V_channel1_full_n assign process. --
    ap_reg_ready_inMat_cols_V_channel1_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_inMat_cols_V_channel1_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_inMat_cols_V_channel1_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = inMat_cols_V_channel1_full_n))) then 
                    ap_reg_ready_inMat_cols_V_channel1_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_inMat_cols_V_channel_full_n assign process. --
    ap_reg_ready_inMat_cols_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_inMat_cols_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_inMat_cols_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (inMat_cols_V_channel_full_n = ap_const_logic_1))) then 
                    ap_reg_ready_inMat_cols_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_inMat_rows_V_channel1_full_n assign process. --
    ap_reg_ready_inMat_rows_V_channel1_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_inMat_rows_V_channel1_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_inMat_rows_V_channel1_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = inMat_rows_V_channel1_full_n))) then 
                    ap_reg_ready_inMat_rows_V_channel1_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_inMat_rows_V_channel_full_n assign process. --
    ap_reg_ready_inMat_rows_V_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_inMat_rows_V_channel_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_inMat_rows_V_channel_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = inMat_rows_V_channel_full_n))) then 
                    ap_reg_ready_inMat_rows_V_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_nmsupressionMat_cols_V_full_n assign process. --
    ap_reg_ready_nmsupressionMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_nmsupressionMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_nmsupressionMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = nmsupressionMat_cols_V_full_n))) then 
                    ap_reg_ready_nmsupressionMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_nmsupressionMat_rows_V_full_n assign process. --
    ap_reg_ready_nmsupressionMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_nmsupressionMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_nmsupressionMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = nmsupressionMat_rows_V_full_n))) then 
                    ap_reg_ready_nmsupressionMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_outMat_cols_V_full_n assign process. --
    ap_reg_ready_outMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_outMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_outMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = outMat_cols_V_full_n))) then 
                    ap_reg_ready_outMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_outMat_rows_V_full_n assign process. --
    ap_reg_ready_outMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_outMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_outMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = outMat_rows_V_full_n))) then 
                    ap_reg_ready_outMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_threshMat_cols_V_full_n assign process. --
    ap_reg_ready_threshMat_cols_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_threshMat_cols_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_threshMat_cols_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = threshMat_cols_V_full_n))) then 
                    ap_reg_ready_threshMat_cols_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_threshMat_rows_V_full_n assign process. --
    ap_reg_ready_threshMat_rows_V_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_threshMat_rows_V_full_n <= ap_const_logic_0;
            else
                if (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (toThreshold_Block_proc_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_threshMat_rows_V_full_n <= ap_const_logic_0;
                elsif (((toThreshold_Block_proc_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = threshMat_rows_V_full_n))) then 
                    ap_reg_ready_threshMat_rows_V_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    IN_STREAM_TREADY <= toThreshold_AXIvideo2Mat_U0_IN_STREAM_TREADY;
    OUT_STREAM_TDATA <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDATA;
    OUT_STREAM_TDEST <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TDEST;
    OUT_STREAM_TID <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TID;
    OUT_STREAM_TKEEP <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TKEEP;
    OUT_STREAM_TLAST <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TLAST;
    OUT_STREAM_TSTRB <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TSTRB;
    OUT_STREAM_TUSER <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TUSER;
    OUT_STREAM_TVALID <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TVALID;
    absvalueMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    absvalueMat_data_stream_0_V_din <= toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_din;
    absvalueMat_data_stream_0_V_read <= toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_read;
    absvalueMat_data_stream_0_V_write <= toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_write;
    angleMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    angleMat_data_stream_0_V_din <= toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_din;
    angleMat_data_stream_0_V_read <= toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_read;
    angleMat_data_stream_0_V_write <= toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_write;

    -- ap_chn_write_toThreshold_Block_proc_U0_blurMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blurMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blurMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blurMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blurMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blurMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blurMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blurMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blurMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blurMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blurMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blurMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelxMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelxMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelxMat_cols_V_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelxMat_cols_V_channel_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelxMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelxMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelxMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelxMat_rows_V_channel_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelyMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelyMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelyMat_cols_V_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelyMat_cols_V_channel_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelyMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelyMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_blursobelyMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_blursobelyMat_rows_V_channel_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_dilateMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dilateMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_dilateMat_cols_V_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dilateMat_cols_V_channel_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_dilateMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dilateMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_dilateMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dilateMat_rows_V_channel_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_grayMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_grayMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_grayMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_grayMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_grayMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_grayMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_grayMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_grayMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_grayMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_grayMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_grayMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_grayMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_inMat_cols_V_channel_full_n)
    begin
        if ((ap_reg_ready_inMat_cols_V_channel_full_n = ap_const_logic_1)) then 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel1 assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel1_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_inMat_cols_V_channel1_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_inMat_cols_V_channel1_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel1 <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel1 <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_inMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_inMat_rows_V_channel_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel1 assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel1_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_inMat_rows_V_channel1_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_inMat_rows_V_channel1_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel1 <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel1 <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_nmsupressionMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_nmsupressionMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_nmsupressionMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_nmsupressionMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_outMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_outMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_outMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_outMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_outMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_outMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_outMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_outMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_outMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_outMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_outMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_outMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_threshMat_cols_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_threshMat_cols_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_threshMat_cols_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_threshMat_cols_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_threshMat_cols_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_threshMat_cols_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_toThreshold_Block_proc_U0_threshMat_rows_V assign process. --
    ap_chn_write_toThreshold_Block_proc_U0_threshMat_rows_V_assign_proc : process(toThreshold_Block_proc_U0_ap_done, ap_reg_ready_threshMat_rows_V_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_threshMat_rows_V_full_n)) then 
            ap_chn_write_toThreshold_Block_proc_U0_threshMat_rows_V <= ap_const_logic_0;
        else 
            ap_chn_write_toThreshold_Block_proc_U0_threshMat_rows_V <= toThreshold_Block_proc_U0_ap_done;
        end if; 
    end process;

    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(toThreshold_Block_proc_U0_ap_idle, toThreshold_AXIvideo2Mat_U0_ap_idle, toThreshold_CvtColor_U0_ap_idle, toThreshold_Threshold_1080_1920_0_0_U0_ap_idle, toThreshold_Dilate_0_0_1080_1920_U0_ap_idle, toThreshold_GaussianBlur_U0_ap_idle, toThreshold_Duplicate_1080_1920_0_0_U0_ap_idle, toThreshold_Sobel_U0_ap_idle, toThreshold_Sobel_1_U0_ap_idle, toThreshold_Loop_GradientLoop_proc_U0_ap_idle, toThreshold_Loop_LineBufferLoop_proc_U0_ap_idle, toThreshold_Dilate_0_0_1080_1920_1_U0_ap_idle, toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle, inMat_rows_V_channel_empty_n, inMat_rows_V_channel1_empty_n, inMat_cols_V_channel_empty_n, inMat_cols_V_channel1_empty_n, grayMat_rows_V_empty_n, grayMat_cols_V_empty_n, dilateMat_rows_V_empty_n, dilateMat_rows_V_channel_empty_n, dilateMat_cols_V_empty_n, dilateMat_cols_V_channel_empty_n, threshMat_rows_V_empty_n, threshMat_cols_V_empty_n, blurMat_rows_V_empty_n, blurMat_cols_V_empty_n, blursobelxMat_rows_V_empty_n, blursobelxMat_rows_V_channel_empty_n, blursobelxMat_cols_V_empty_n, blursobelxMat_cols_V_channel_empty_n, blursobelyMat_rows_V_empty_n, blursobelyMat_rows_V_channel_empty_n, blursobelyMat_cols_V_empty_n, blursobelyMat_cols_V_channel_empty_n, nmsupressionMat_rows_V_empty_n, nmsupressionMat_cols_V_empty_n, outMat_rows_V_empty_n, outMat_cols_V_empty_n)
    begin
        if (((toThreshold_Block_proc_U0_ap_idle = ap_const_logic_1) and (ap_const_logic_1 = toThreshold_AXIvideo2Mat_U0_ap_idle) and (ap_const_logic_1 = toThreshold_CvtColor_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Threshold_1080_1920_0_0_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Dilate_0_0_1080_1920_U0_ap_idle) and (ap_const_logic_1 = toThreshold_GaussianBlur_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Duplicate_1080_1920_0_0_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Sobel_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Sobel_1_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Loop_GradientLoop_proc_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Loop_LineBufferLoop_proc_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Dilate_0_0_1080_1920_1_U0_ap_idle) and (ap_const_logic_1 = toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_idle) and (ap_const_logic_0 = inMat_rows_V_channel_empty_n) and (ap_const_logic_0 = inMat_rows_V_channel1_empty_n) and (ap_const_logic_0 = inMat_cols_V_channel_empty_n) and (ap_const_logic_0 = inMat_cols_V_channel1_empty_n) and (ap_const_logic_0 = grayMat_rows_V_empty_n) and (ap_const_logic_0 = grayMat_cols_V_empty_n) and (ap_const_logic_0 = dilateMat_rows_V_empty_n) and (ap_const_logic_0 = dilateMat_rows_V_channel_empty_n) and (ap_const_logic_0 = dilateMat_cols_V_empty_n) and (ap_const_logic_0 = dilateMat_cols_V_channel_empty_n) and (ap_const_logic_0 = threshMat_rows_V_empty_n) and (ap_const_logic_0 = threshMat_cols_V_empty_n) and (ap_const_logic_0 = blurMat_rows_V_empty_n) and (ap_const_logic_0 = blurMat_cols_V_empty_n) and (ap_const_logic_0 = blursobelxMat_rows_V_empty_n) and (ap_const_logic_0 = blursobelxMat_rows_V_channel_empty_n) and (ap_const_logic_0 = blursobelxMat_cols_V_empty_n) and (ap_const_logic_0 = blursobelxMat_cols_V_channel_empty_n) and (ap_const_logic_0 = blursobelyMat_rows_V_empty_n) and (ap_const_logic_0 = blursobelyMat_rows_V_channel_empty_n) and (ap_const_logic_0 = blursobelyMat_cols_V_empty_n) and (ap_const_logic_0 = blursobelyMat_cols_V_channel_empty_n) and (ap_const_logic_0 = nmsupressionMat_rows_V_empty_n) and (ap_const_logic_0 = nmsupressionMat_cols_V_empty_n) and (ap_const_logic_0 = outMat_rows_V_empty_n) and (ap_const_logic_0 = outMat_cols_V_empty_n))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_done)
    begin
        if ((ap_const_logic_1 = toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ready_blurMat_cols_V_full_n assign process. --
    ap_sig_ready_blurMat_cols_V_full_n_assign_proc : process(blurMat_cols_V_full_n, ap_reg_ready_blurMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blurMat_cols_V_full_n)) then 
            ap_sig_ready_blurMat_cols_V_full_n <= blurMat_cols_V_full_n;
        else 
            ap_sig_ready_blurMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blurMat_rows_V_full_n assign process. --
    ap_sig_ready_blurMat_rows_V_full_n_assign_proc : process(blurMat_rows_V_full_n, ap_reg_ready_blurMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blurMat_rows_V_full_n)) then 
            ap_sig_ready_blurMat_rows_V_full_n <= blurMat_rows_V_full_n;
        else 
            ap_sig_ready_blurMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelxMat_cols_V_channel_full_n assign process. --
    ap_sig_ready_blursobelxMat_cols_V_channel_full_n_assign_proc : process(blursobelxMat_cols_V_channel_full_n, ap_reg_ready_blursobelxMat_cols_V_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelxMat_cols_V_channel_full_n)) then 
            ap_sig_ready_blursobelxMat_cols_V_channel_full_n <= blursobelxMat_cols_V_channel_full_n;
        else 
            ap_sig_ready_blursobelxMat_cols_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelxMat_cols_V_full_n assign process. --
    ap_sig_ready_blursobelxMat_cols_V_full_n_assign_proc : process(blursobelxMat_cols_V_full_n, ap_reg_ready_blursobelxMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelxMat_cols_V_full_n)) then 
            ap_sig_ready_blursobelxMat_cols_V_full_n <= blursobelxMat_cols_V_full_n;
        else 
            ap_sig_ready_blursobelxMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelxMat_rows_V_channel_full_n assign process. --
    ap_sig_ready_blursobelxMat_rows_V_channel_full_n_assign_proc : process(blursobelxMat_rows_V_channel_full_n, ap_reg_ready_blursobelxMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelxMat_rows_V_channel_full_n)) then 
            ap_sig_ready_blursobelxMat_rows_V_channel_full_n <= blursobelxMat_rows_V_channel_full_n;
        else 
            ap_sig_ready_blursobelxMat_rows_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelxMat_rows_V_full_n assign process. --
    ap_sig_ready_blursobelxMat_rows_V_full_n_assign_proc : process(blursobelxMat_rows_V_full_n, ap_reg_ready_blursobelxMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelxMat_rows_V_full_n)) then 
            ap_sig_ready_blursobelxMat_rows_V_full_n <= blursobelxMat_rows_V_full_n;
        else 
            ap_sig_ready_blursobelxMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelyMat_cols_V_channel_full_n assign process. --
    ap_sig_ready_blursobelyMat_cols_V_channel_full_n_assign_proc : process(blursobelyMat_cols_V_channel_full_n, ap_reg_ready_blursobelyMat_cols_V_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelyMat_cols_V_channel_full_n)) then 
            ap_sig_ready_blursobelyMat_cols_V_channel_full_n <= blursobelyMat_cols_V_channel_full_n;
        else 
            ap_sig_ready_blursobelyMat_cols_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelyMat_cols_V_full_n assign process. --
    ap_sig_ready_blursobelyMat_cols_V_full_n_assign_proc : process(blursobelyMat_cols_V_full_n, ap_reg_ready_blursobelyMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelyMat_cols_V_full_n)) then 
            ap_sig_ready_blursobelyMat_cols_V_full_n <= blursobelyMat_cols_V_full_n;
        else 
            ap_sig_ready_blursobelyMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelyMat_rows_V_channel_full_n assign process. --
    ap_sig_ready_blursobelyMat_rows_V_channel_full_n_assign_proc : process(blursobelyMat_rows_V_channel_full_n, ap_reg_ready_blursobelyMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelyMat_rows_V_channel_full_n)) then 
            ap_sig_ready_blursobelyMat_rows_V_channel_full_n <= blursobelyMat_rows_V_channel_full_n;
        else 
            ap_sig_ready_blursobelyMat_rows_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_blursobelyMat_rows_V_full_n assign process. --
    ap_sig_ready_blursobelyMat_rows_V_full_n_assign_proc : process(blursobelyMat_rows_V_full_n, ap_reg_ready_blursobelyMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_blursobelyMat_rows_V_full_n)) then 
            ap_sig_ready_blursobelyMat_rows_V_full_n <= blursobelyMat_rows_V_full_n;
        else 
            ap_sig_ready_blursobelyMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dilateMat_cols_V_channel_full_n assign process. --
    ap_sig_ready_dilateMat_cols_V_channel_full_n_assign_proc : process(dilateMat_cols_V_channel_full_n, ap_reg_ready_dilateMat_cols_V_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dilateMat_cols_V_channel_full_n)) then 
            ap_sig_ready_dilateMat_cols_V_channel_full_n <= dilateMat_cols_V_channel_full_n;
        else 
            ap_sig_ready_dilateMat_cols_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dilateMat_cols_V_full_n assign process. --
    ap_sig_ready_dilateMat_cols_V_full_n_assign_proc : process(dilateMat_cols_V_full_n, ap_reg_ready_dilateMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dilateMat_cols_V_full_n)) then 
            ap_sig_ready_dilateMat_cols_V_full_n <= dilateMat_cols_V_full_n;
        else 
            ap_sig_ready_dilateMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dilateMat_rows_V_channel_full_n assign process. --
    ap_sig_ready_dilateMat_rows_V_channel_full_n_assign_proc : process(dilateMat_rows_V_channel_full_n, ap_reg_ready_dilateMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dilateMat_rows_V_channel_full_n)) then 
            ap_sig_ready_dilateMat_rows_V_channel_full_n <= dilateMat_rows_V_channel_full_n;
        else 
            ap_sig_ready_dilateMat_rows_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dilateMat_rows_V_full_n assign process. --
    ap_sig_ready_dilateMat_rows_V_full_n_assign_proc : process(dilateMat_rows_V_full_n, ap_reg_ready_dilateMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dilateMat_rows_V_full_n)) then 
            ap_sig_ready_dilateMat_rows_V_full_n <= dilateMat_rows_V_full_n;
        else 
            ap_sig_ready_dilateMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_grayMat_cols_V_full_n assign process. --
    ap_sig_ready_grayMat_cols_V_full_n_assign_proc : process(grayMat_cols_V_full_n, ap_reg_ready_grayMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_grayMat_cols_V_full_n)) then 
            ap_sig_ready_grayMat_cols_V_full_n <= grayMat_cols_V_full_n;
        else 
            ap_sig_ready_grayMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_grayMat_rows_V_full_n assign process. --
    ap_sig_ready_grayMat_rows_V_full_n_assign_proc : process(grayMat_rows_V_full_n, ap_reg_ready_grayMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_grayMat_rows_V_full_n)) then 
            ap_sig_ready_grayMat_rows_V_full_n <= grayMat_rows_V_full_n;
        else 
            ap_sig_ready_grayMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_inMat_cols_V_channel1_full_n assign process. --
    ap_sig_ready_inMat_cols_V_channel1_full_n_assign_proc : process(inMat_cols_V_channel1_full_n, ap_reg_ready_inMat_cols_V_channel1_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_inMat_cols_V_channel1_full_n)) then 
            ap_sig_ready_inMat_cols_V_channel1_full_n <= inMat_cols_V_channel1_full_n;
        else 
            ap_sig_ready_inMat_cols_V_channel1_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_inMat_cols_V_channel_full_n assign process. --
    ap_sig_ready_inMat_cols_V_channel_full_n_assign_proc : process(inMat_cols_V_channel_full_n, ap_reg_ready_inMat_cols_V_channel_full_n)
    begin
        if ((ap_reg_ready_inMat_cols_V_channel_full_n = ap_const_logic_0)) then 
            ap_sig_ready_inMat_cols_V_channel_full_n <= inMat_cols_V_channel_full_n;
        else 
            ap_sig_ready_inMat_cols_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_inMat_rows_V_channel1_full_n assign process. --
    ap_sig_ready_inMat_rows_V_channel1_full_n_assign_proc : process(inMat_rows_V_channel1_full_n, ap_reg_ready_inMat_rows_V_channel1_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_inMat_rows_V_channel1_full_n)) then 
            ap_sig_ready_inMat_rows_V_channel1_full_n <= inMat_rows_V_channel1_full_n;
        else 
            ap_sig_ready_inMat_rows_V_channel1_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_inMat_rows_V_channel_full_n assign process. --
    ap_sig_ready_inMat_rows_V_channel_full_n_assign_proc : process(inMat_rows_V_channel_full_n, ap_reg_ready_inMat_rows_V_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_inMat_rows_V_channel_full_n)) then 
            ap_sig_ready_inMat_rows_V_channel_full_n <= inMat_rows_V_channel_full_n;
        else 
            ap_sig_ready_inMat_rows_V_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_nmsupressionMat_cols_V_full_n assign process. --
    ap_sig_ready_nmsupressionMat_cols_V_full_n_assign_proc : process(nmsupressionMat_cols_V_full_n, ap_reg_ready_nmsupressionMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_nmsupressionMat_cols_V_full_n)) then 
            ap_sig_ready_nmsupressionMat_cols_V_full_n <= nmsupressionMat_cols_V_full_n;
        else 
            ap_sig_ready_nmsupressionMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_nmsupressionMat_rows_V_full_n assign process. --
    ap_sig_ready_nmsupressionMat_rows_V_full_n_assign_proc : process(nmsupressionMat_rows_V_full_n, ap_reg_ready_nmsupressionMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_nmsupressionMat_rows_V_full_n)) then 
            ap_sig_ready_nmsupressionMat_rows_V_full_n <= nmsupressionMat_rows_V_full_n;
        else 
            ap_sig_ready_nmsupressionMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_outMat_cols_V_full_n assign process. --
    ap_sig_ready_outMat_cols_V_full_n_assign_proc : process(outMat_cols_V_full_n, ap_reg_ready_outMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_outMat_cols_V_full_n)) then 
            ap_sig_ready_outMat_cols_V_full_n <= outMat_cols_V_full_n;
        else 
            ap_sig_ready_outMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_outMat_rows_V_full_n assign process. --
    ap_sig_ready_outMat_rows_V_full_n_assign_proc : process(outMat_rows_V_full_n, ap_reg_ready_outMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_outMat_rows_V_full_n)) then 
            ap_sig_ready_outMat_rows_V_full_n <= outMat_rows_V_full_n;
        else 
            ap_sig_ready_outMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_threshMat_cols_V_full_n assign process. --
    ap_sig_ready_threshMat_cols_V_full_n_assign_proc : process(threshMat_cols_V_full_n, ap_reg_ready_threshMat_cols_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_threshMat_cols_V_full_n)) then 
            ap_sig_ready_threshMat_cols_V_full_n <= threshMat_cols_V_full_n;
        else 
            ap_sig_ready_threshMat_cols_V_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_threshMat_rows_V_full_n assign process. --
    ap_sig_ready_threshMat_rows_V_full_n_assign_proc : process(threshMat_rows_V_full_n, ap_reg_ready_threshMat_rows_V_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_threshMat_rows_V_full_n)) then 
            ap_sig_ready_threshMat_rows_V_full_n <= threshMat_rows_V_full_n;
        else 
            ap_sig_ready_threshMat_rows_V_full_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_sig_top_allready <= toThreshold_AXIvideo2Mat_U0_ap_ready;
    blurMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    blurMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_13;
    blurMat_cols_V_read <= toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready;
    blurMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_blurMat_cols_V;
    blurMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    blurMat_data_stream_0_V_din <= toThreshold_GaussianBlur_U0_p_dst_data_stream_V_din;
    blurMat_data_stream_0_V_read <= toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_read;
    blurMat_data_stream_0_V_write <= toThreshold_GaussianBlur_U0_p_dst_data_stream_V_write;
    blurMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    blurMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_12;
    blurMat_rows_V_read <= toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready;
    blurMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_blurMat_rows_V;
    blursobelxMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelxMat_cols_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelxMat_cols_V_channel_din <= toThreshold_Block_proc_U0_ap_return_17;
    blursobelxMat_cols_V_channel_read <= toThreshold_Sobel_U0_ap_ready;
    blursobelxMat_cols_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V_channel;
    blursobelxMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_16;
    blursobelxMat_cols_V_read <= toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready;
    blursobelxMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_cols_V;
    blursobelxMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelxMat_data_stream_0_V_din <= toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_din;
    blursobelxMat_data_stream_0_V_read <= toThreshold_Sobel_U0_p_src_data_stream_V_read;
    blursobelxMat_data_stream_0_V_write <= toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_write;
    blursobelxMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelxMat_rows_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelxMat_rows_V_channel_din <= toThreshold_Block_proc_U0_ap_return_15;
    blursobelxMat_rows_V_channel_read <= toThreshold_Sobel_U0_ap_ready;
    blursobelxMat_rows_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V_channel;
    blursobelxMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_14;
    blursobelxMat_rows_V_read <= toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready;
    blursobelxMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelxMat_rows_V;
    blursobelyMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelyMat_cols_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelyMat_cols_V_channel_din <= toThreshold_Block_proc_U0_ap_return_21;
    blursobelyMat_cols_V_channel_read <= toThreshold_Sobel_1_U0_ap_ready;
    blursobelyMat_cols_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V_channel;
    blursobelyMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_20;
    blursobelyMat_cols_V_read <= toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready;
    blursobelyMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_cols_V;
    blursobelyMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelyMat_data_stream_0_V_din <= toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_din;
    blursobelyMat_data_stream_0_V_read <= toThreshold_Sobel_1_U0_p_src_data_stream_V_read;
    blursobelyMat_data_stream_0_V_write <= toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_write;
    blursobelyMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelyMat_rows_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    blursobelyMat_rows_V_channel_din <= toThreshold_Block_proc_U0_ap_return_19;
    blursobelyMat_rows_V_channel_read <= toThreshold_Sobel_1_U0_ap_ready;
    blursobelyMat_rows_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V_channel;
    blursobelyMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_18;
    blursobelyMat_rows_V_read <= toThreshold_Duplicate_1080_1920_0_0_U0_ap_ready;
    blursobelyMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_blursobelyMat_rows_V;
    dilateMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    dilateMat_cols_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    dilateMat_cols_V_channel_din <= toThreshold_Block_proc_U0_ap_return_9;
    dilateMat_cols_V_channel_read <= toThreshold_Dilate_0_0_1080_1920_U0_ap_ready;
    dilateMat_cols_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V_channel;
    dilateMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_8;
    dilateMat_cols_V_read <= toThreshold_Threshold_1080_1920_0_0_U0_ap_ready;
    dilateMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_dilateMat_cols_V;
    dilateMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    dilateMat_data_stream_0_V_din <= toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_din;
    dilateMat_data_stream_0_V_read <= toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read;
    dilateMat_data_stream_0_V_write <= toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_write;
    dilateMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    dilateMat_rows_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    dilateMat_rows_V_channel_din <= toThreshold_Block_proc_U0_ap_return_7;
    dilateMat_rows_V_channel_read <= toThreshold_Dilate_0_0_1080_1920_U0_ap_ready;
    dilateMat_rows_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V_channel;
    dilateMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_6;
    dilateMat_rows_V_read <= toThreshold_Threshold_1080_1920_0_0_U0_ap_ready;
    dilateMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_dilateMat_rows_V;
    grayMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    grayMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_5;
    grayMat_cols_V_read <= toThreshold_Threshold_1080_1920_0_0_U0_ap_ready;
    grayMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_grayMat_cols_V;
    grayMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    grayMat_data_stream_0_V_din <= toThreshold_CvtColor_U0_p_dst_data_stream_V_din;
    grayMat_data_stream_0_V_read <= toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_read;
    grayMat_data_stream_0_V_write <= toThreshold_CvtColor_U0_p_dst_data_stream_V_write;
    grayMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    grayMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_4;
    grayMat_rows_V_read <= toThreshold_Threshold_1080_1920_0_0_U0_ap_ready;
    grayMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_grayMat_rows_V;
    inMat_cols_V_channel1_U_ap_dummy_ce <= ap_const_logic_1;
    inMat_cols_V_channel1_din <= toThreshold_Block_proc_U0_ap_return_3;
    inMat_cols_V_channel1_read <= toThreshold_CvtColor_U0_ap_ready;
    inMat_cols_V_channel1_write <= ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel1;
    inMat_cols_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    inMat_cols_V_channel_din <= toThreshold_Block_proc_U0_ap_return_2;
    inMat_cols_V_channel_read <= toThreshold_AXIvideo2Mat_U0_ap_ready;
    inMat_cols_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_inMat_cols_V_channel;
    inMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    inMat_data_stream_0_V_din <= toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_din;
    inMat_data_stream_0_V_read <= toThreshold_CvtColor_U0_p_src_data_stream_0_V_read;
    inMat_data_stream_0_V_write <= toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_write;
    inMat_data_stream_1_V_U_ap_dummy_ce <= ap_const_logic_1;
    inMat_data_stream_1_V_din <= toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_din;
    inMat_data_stream_1_V_read <= toThreshold_CvtColor_U0_p_src_data_stream_1_V_read;
    inMat_data_stream_1_V_write <= toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_write;
    inMat_data_stream_2_V_U_ap_dummy_ce <= ap_const_logic_1;
    inMat_data_stream_2_V_din <= toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_din;
    inMat_data_stream_2_V_read <= toThreshold_CvtColor_U0_p_src_data_stream_2_V_read;
    inMat_data_stream_2_V_write <= toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_write;
    inMat_rows_V_channel1_U_ap_dummy_ce <= ap_const_logic_1;
    inMat_rows_V_channel1_din <= toThreshold_Block_proc_U0_ap_return_1;
    inMat_rows_V_channel1_read <= toThreshold_CvtColor_U0_ap_ready;
    inMat_rows_V_channel1_write <= ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel1;
    inMat_rows_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    inMat_rows_V_channel_din <= toThreshold_Block_proc_U0_ap_return_0;
    inMat_rows_V_channel_read <= toThreshold_AXIvideo2Mat_U0_ap_ready;
    inMat_rows_V_channel_write <= ap_chn_write_toThreshold_Block_proc_U0_inMat_rows_V_channel;
    nmsupressionMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    nmsupressionMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_23;
    nmsupressionMat_cols_V_read <= toThreshold_Dilate_0_0_1080_1920_1_U0_ap_ready;
    nmsupressionMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_cols_V;
    nmsupressionMat_data_stream_0_U_ap_dummy_ce <= ap_const_logic_1;
    nmsupressionMat_data_stream_0_din <= toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_din;
    nmsupressionMat_data_stream_0_read <= toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_read;
    nmsupressionMat_data_stream_0_write <= toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_write;
    nmsupressionMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    nmsupressionMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_22;
    nmsupressionMat_rows_V_read <= toThreshold_Dilate_0_0_1080_1920_1_U0_ap_ready;
    nmsupressionMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_nmsupressionMat_rows_V;
    outMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    outMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_25;
    outMat_cols_V_read <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready;
    outMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_outMat_cols_V;
    outMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    outMat_data_stream_0_V_din <= toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_din;
    outMat_data_stream_0_V_read <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_read;
    outMat_data_stream_0_V_write <= toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_write;
    outMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    outMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_24;
    outMat_rows_V_read <= toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_ready;
    outMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_outMat_rows_V;
    sobelxMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    sobelxMat_data_stream_0_V_din <= toThreshold_Sobel_U0_p_dst_data_stream_V_din;
    sobelxMat_data_stream_0_V_read <= toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_read;
    sobelxMat_data_stream_0_V_write <= toThreshold_Sobel_U0_p_dst_data_stream_V_write;
    sobelyMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    sobelyMat_data_stream_0_V_din <= toThreshold_Sobel_1_U0_p_dst_data_stream_V_din;
    sobelyMat_data_stream_0_V_read <= toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_read;
    sobelyMat_data_stream_0_V_write <= toThreshold_Sobel_1_U0_p_dst_data_stream_V_write;
    threshMat_cols_V_U_ap_dummy_ce <= ap_const_logic_1;
    threshMat_cols_V_din <= toThreshold_Block_proc_U0_ap_return_11;
    threshMat_cols_V_read <= toThreshold_GaussianBlur_U0_ap_ready;
    threshMat_cols_V_write <= ap_chn_write_toThreshold_Block_proc_U0_threshMat_cols_V;
    threshMat_data_stream_0_V_U_ap_dummy_ce <= ap_const_logic_1;
    threshMat_data_stream_0_V_din <= toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din;
    threshMat_data_stream_0_V_read <= toThreshold_GaussianBlur_U0_p_src_data_stream_V_read;
    threshMat_data_stream_0_V_write <= toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write;
    threshMat_rows_V_U_ap_dummy_ce <= ap_const_logic_1;
    threshMat_rows_V_din <= toThreshold_Block_proc_U0_ap_return_10;
    threshMat_rows_V_read <= toThreshold_GaussianBlur_U0_ap_ready;
    threshMat_rows_V_write <= ap_chn_write_toThreshold_Block_proc_U0_threshMat_rows_V;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TDATA <= IN_STREAM_TDATA;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TDEST <= IN_STREAM_TDEST;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TID <= IN_STREAM_TID;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TKEEP <= IN_STREAM_TKEEP;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TLAST <= IN_STREAM_TLAST;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TSTRB <= IN_STREAM_TSTRB;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TUSER <= IN_STREAM_TUSER;
    toThreshold_AXIvideo2Mat_U0_IN_STREAM_TVALID <= IN_STREAM_TVALID;
    toThreshold_AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    toThreshold_AXIvideo2Mat_U0_ap_start <= (ap_start and inMat_rows_V_channel_empty_n and inMat_cols_V_channel_empty_n);
    toThreshold_AXIvideo2Mat_U0_img_cols_V_read <= inMat_cols_V_channel_dout;
    toThreshold_AXIvideo2Mat_U0_img_data_stream_0_V_full_n <= inMat_data_stream_0_V_full_n;
    toThreshold_AXIvideo2Mat_U0_img_data_stream_1_V_full_n <= inMat_data_stream_1_V_full_n;
    toThreshold_AXIvideo2Mat_U0_img_data_stream_2_V_full_n <= inMat_data_stream_2_V_full_n;
    toThreshold_AXIvideo2Mat_U0_img_rows_V_read <= inMat_rows_V_channel_dout;

    -- toThreshold_Block_proc_U0_ap_continue assign process. --
    toThreshold_Block_proc_U0_ap_continue_assign_proc : process(ap_sig_ready_inMat_cols_V_channel_full_n, ap_sig_ready_inMat_rows_V_channel1_full_n, ap_sig_ready_inMat_rows_V_channel_full_n, ap_sig_ready_inMat_cols_V_channel1_full_n, ap_sig_ready_grayMat_rows_V_full_n, ap_sig_ready_grayMat_cols_V_full_n, ap_sig_ready_dilateMat_cols_V_channel_full_n, ap_sig_ready_dilateMat_rows_V_full_n, ap_sig_ready_dilateMat_rows_V_channel_full_n, ap_sig_ready_dilateMat_cols_V_full_n, ap_sig_ready_threshMat_rows_V_full_n, ap_sig_ready_threshMat_cols_V_full_n, ap_sig_ready_blurMat_rows_V_full_n, ap_sig_ready_blurMat_cols_V_full_n, ap_sig_ready_blursobelyMat_cols_V_full_n, ap_sig_ready_blursobelxMat_rows_V_full_n, ap_sig_ready_blursobelxMat_rows_V_channel_full_n, ap_sig_ready_blursobelxMat_cols_V_full_n, ap_sig_ready_blursobelxMat_cols_V_channel_full_n, ap_sig_ready_blursobelyMat_rows_V_full_n, ap_sig_ready_blursobelyMat_rows_V_channel_full_n, ap_sig_ready_blursobelyMat_cols_V_channel_full_n, ap_sig_ready_nmsupressionMat_rows_V_full_n, ap_sig_ready_nmsupressionMat_cols_V_full_n, ap_sig_ready_outMat_rows_V_full_n, ap_sig_ready_outMat_cols_V_full_n)
    begin
        if (((ap_sig_ready_inMat_cols_V_channel_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_sig_ready_inMat_rows_V_channel1_full_n) and (ap_const_logic_1 = ap_sig_ready_inMat_rows_V_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_inMat_cols_V_channel1_full_n) and (ap_const_logic_1 = ap_sig_ready_grayMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_grayMat_cols_V_full_n) and (ap_const_logic_1 = ap_sig_ready_dilateMat_cols_V_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_dilateMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_dilateMat_rows_V_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_dilateMat_cols_V_full_n) and (ap_const_logic_1 = ap_sig_ready_threshMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_threshMat_cols_V_full_n) and (ap_const_logic_1 = ap_sig_ready_blurMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_blurMat_cols_V_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelyMat_cols_V_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelxMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelxMat_rows_V_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelxMat_cols_V_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelxMat_cols_V_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelyMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelyMat_rows_V_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_blursobelyMat_cols_V_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_nmsupressionMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_nmsupressionMat_cols_V_full_n) and (ap_const_logic_1 = ap_sig_ready_outMat_rows_V_full_n) and (ap_const_logic_1 = ap_sig_ready_outMat_cols_V_full_n))) then 
            toThreshold_Block_proc_U0_ap_continue <= ap_const_logic_1;
        else 
            toThreshold_Block_proc_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    toThreshold_Block_proc_U0_ap_start <= ap_start;
    toThreshold_Block_proc_U0_cols <= cols;
    toThreshold_Block_proc_U0_rows <= rows;
    toThreshold_CvtColor_U0_ap_continue <= ap_const_logic_1;
    toThreshold_CvtColor_U0_ap_start <= (inMat_rows_V_channel1_empty_n and inMat_cols_V_channel1_empty_n);
    toThreshold_CvtColor_U0_p_dst_data_stream_V_full_n <= grayMat_data_stream_0_V_full_n;
    toThreshold_CvtColor_U0_p_src_cols_V_read <= inMat_cols_V_channel1_dout;
    toThreshold_CvtColor_U0_p_src_data_stream_0_V_dout <= inMat_data_stream_0_V_dout;
    toThreshold_CvtColor_U0_p_src_data_stream_0_V_empty_n <= inMat_data_stream_0_V_empty_n;
    toThreshold_CvtColor_U0_p_src_data_stream_1_V_dout <= inMat_data_stream_1_V_dout;
    toThreshold_CvtColor_U0_p_src_data_stream_1_V_empty_n <= inMat_data_stream_1_V_empty_n;
    toThreshold_CvtColor_U0_p_src_data_stream_2_V_dout <= inMat_data_stream_2_V_dout;
    toThreshold_CvtColor_U0_p_src_data_stream_2_V_empty_n <= inMat_data_stream_2_V_empty_n;
    toThreshold_CvtColor_U0_p_src_rows_V_read <= inMat_rows_V_channel1_dout;
    toThreshold_Dilate_0_0_1080_1920_1_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Dilate_0_0_1080_1920_1_U0_ap_start <= (nmsupressionMat_rows_V_empty_n and nmsupressionMat_cols_V_empty_n);
    toThreshold_Dilate_0_0_1080_1920_1_U0_p_dst_data_stream_V_full_n <= outMat_data_stream_0_V_full_n;
    toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_cols_V_read <= nmsupressionMat_cols_V_dout;
    toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_dout <= nmsupressionMat_data_stream_0_dout;
    toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_data_stream_V_empty_n <= nmsupressionMat_data_stream_0_empty_n;
    toThreshold_Dilate_0_0_1080_1920_1_U0_p_src_rows_V_read <= nmsupressionMat_rows_V_dout;
    toThreshold_Dilate_0_0_1080_1920_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Dilate_0_0_1080_1920_U0_ap_start <= (dilateMat_rows_V_channel_empty_n and dilateMat_cols_V_channel_empty_n);
    toThreshold_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n <= threshMat_data_stream_0_V_full_n;
    toThreshold_Dilate_0_0_1080_1920_U0_p_src_cols_V_read <= dilateMat_cols_V_channel_dout;
    toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout <= dilateMat_data_stream_0_V_dout;
    toThreshold_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n <= dilateMat_data_stream_0_V_empty_n;
    toThreshold_Dilate_0_0_1080_1920_U0_p_src_rows_V_read <= dilateMat_rows_V_channel_dout;
    toThreshold_Duplicate_1080_1920_0_0_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Duplicate_1080_1920_0_0_U0_ap_start <= (blurMat_rows_V_empty_n and blurMat_cols_V_empty_n and blursobelxMat_rows_V_empty_n and blursobelxMat_cols_V_empty_n and blursobelyMat_rows_V_empty_n and blursobelyMat_cols_V_empty_n);
    toThreshold_Duplicate_1080_1920_0_0_U0_dst1_cols_V_read <= blursobelxMat_cols_V_dout;
    toThreshold_Duplicate_1080_1920_0_0_U0_dst1_data_stream_V_full_n <= blursobelxMat_data_stream_0_V_full_n;
    toThreshold_Duplicate_1080_1920_0_0_U0_dst1_rows_V_read <= blursobelxMat_rows_V_dout;
    toThreshold_Duplicate_1080_1920_0_0_U0_dst2_cols_V_read <= blursobelyMat_cols_V_dout;
    toThreshold_Duplicate_1080_1920_0_0_U0_dst2_data_stream_V_full_n <= blursobelyMat_data_stream_0_V_full_n;
    toThreshold_Duplicate_1080_1920_0_0_U0_dst2_rows_V_read <= blursobelyMat_rows_V_dout;
    toThreshold_Duplicate_1080_1920_0_0_U0_src_cols_V_read <= blurMat_cols_V_dout;
    toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_dout <= blurMat_data_stream_0_V_dout;
    toThreshold_Duplicate_1080_1920_0_0_U0_src_data_stream_V_empty_n <= blurMat_data_stream_0_V_empty_n;
    toThreshold_Duplicate_1080_1920_0_0_U0_src_rows_V_read <= blurMat_rows_V_dout;
    toThreshold_GaussianBlur_U0_ap_continue <= ap_const_logic_1;
    toThreshold_GaussianBlur_U0_ap_start <= (threshMat_rows_V_empty_n and threshMat_cols_V_empty_n);
    toThreshold_GaussianBlur_U0_p_dst_data_stream_V_full_n <= blurMat_data_stream_0_V_full_n;
    toThreshold_GaussianBlur_U0_p_src_cols_V_read <= threshMat_cols_V_dout;
    toThreshold_GaussianBlur_U0_p_src_data_stream_V_dout <= threshMat_data_stream_0_V_dout;
    toThreshold_GaussianBlur_U0_p_src_data_stream_V_empty_n <= threshMat_data_stream_0_V_empty_n;
    toThreshold_GaussianBlur_U0_p_src_rows_V_read <= threshMat_rows_V_dout;
    toThreshold_Loop_GradientLoop_proc_U0_absvalueMat_data_stream_0_V_full_n <= absvalueMat_data_stream_0_V_full_n;
    toThreshold_Loop_GradientLoop_proc_U0_angleMat_data_stream_0_V_full_n <= angleMat_data_stream_0_V_full_n;
    toThreshold_Loop_GradientLoop_proc_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Loop_GradientLoop_proc_U0_ap_start <= ap_start;
    toThreshold_Loop_GradientLoop_proc_U0_cols <= cols;
    toThreshold_Loop_GradientLoop_proc_U0_rows <= rows;
    toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_dout <= sobelxMat_data_stream_0_V_dout;
    toThreshold_Loop_GradientLoop_proc_U0_sobelxMat_data_stream_0_V_empty_n <= sobelxMat_data_stream_0_V_empty_n;
    toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_dout <= sobelyMat_data_stream_0_V_dout;
    toThreshold_Loop_GradientLoop_proc_U0_sobelyMat_data_stream_0_V_empty_n <= sobelyMat_data_stream_0_V_empty_n;
    toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_dout <= absvalueMat_data_stream_0_V_dout;
    toThreshold_Loop_LineBufferLoop_proc_U0_absvalueMat_data_stream_0_V_empty_n <= absvalueMat_data_stream_0_V_empty_n;
    toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_dout <= angleMat_data_stream_0_V_dout;
    toThreshold_Loop_LineBufferLoop_proc_U0_angleMat_data_stream_0_V_empty_n <= angleMat_data_stream_0_V_empty_n;
    toThreshold_Loop_LineBufferLoop_proc_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Loop_LineBufferLoop_proc_U0_ap_start <= ap_start;
    toThreshold_Loop_LineBufferLoop_proc_U0_cols <= cols;
    toThreshold_Loop_LineBufferLoop_proc_U0_nmsupressionMat_data_stream_0_V_full_n <= nmsupressionMat_data_stream_0_full_n;
    toThreshold_Loop_LineBufferLoop_proc_U0_rows <= rows;
    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_OUT_STREAM_TREADY <= OUT_STREAM_TREADY;
    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_continue <= ap_sig_hs_continue;
    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_ap_start <= (outMat_rows_V_empty_n and outMat_cols_V_empty_n);
    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_cols_V_read <= outMat_cols_V_dout;
    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_dout <= outMat_data_stream_0_V_dout;
    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_data_stream_V_empty_n <= outMat_data_stream_0_V_empty_n;
    toThreshold_Mat2AXIvideo_8_1080_1920_0_U0_img_rows_V_read <= outMat_rows_V_dout;
    toThreshold_Sobel_1_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Sobel_1_U0_ap_start <= (blursobelyMat_rows_V_channel_empty_n and blursobelyMat_cols_V_channel_empty_n);
    toThreshold_Sobel_1_U0_p_dst_data_stream_V_full_n <= sobelyMat_data_stream_0_V_full_n;
    toThreshold_Sobel_1_U0_p_src_cols_V_read <= blursobelyMat_cols_V_channel_dout;
    toThreshold_Sobel_1_U0_p_src_data_stream_V_dout <= blursobelyMat_data_stream_0_V_dout;
    toThreshold_Sobel_1_U0_p_src_data_stream_V_empty_n <= blursobelyMat_data_stream_0_V_empty_n;
    toThreshold_Sobel_1_U0_p_src_rows_V_read <= blursobelyMat_rows_V_channel_dout;
    toThreshold_Sobel_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Sobel_U0_ap_start <= (blursobelxMat_rows_V_channel_empty_n and blursobelxMat_cols_V_channel_empty_n);
    toThreshold_Sobel_U0_p_dst_data_stream_V_full_n <= sobelxMat_data_stream_0_V_full_n;
    toThreshold_Sobel_U0_p_src_cols_V_read <= blursobelxMat_cols_V_channel_dout;
    toThreshold_Sobel_U0_p_src_data_stream_V_dout <= blursobelxMat_data_stream_0_V_dout;
    toThreshold_Sobel_U0_p_src_data_stream_V_empty_n <= blursobelxMat_data_stream_0_V_empty_n;
    toThreshold_Sobel_U0_p_src_rows_V_read <= blursobelxMat_rows_V_channel_dout;
    toThreshold_Threshold_1080_1920_0_0_U0_ap_continue <= ap_const_logic_1;
    toThreshold_Threshold_1080_1920_0_0_U0_ap_start <= (grayMat_rows_V_empty_n and grayMat_cols_V_empty_n and dilateMat_rows_V_empty_n and dilateMat_cols_V_empty_n);
    toThreshold_Threshold_1080_1920_0_0_U0_dst_cols_V_read <= dilateMat_cols_V_dout;
    toThreshold_Threshold_1080_1920_0_0_U0_dst_data_stream_V_full_n <= dilateMat_data_stream_0_V_full_n;
    toThreshold_Threshold_1080_1920_0_0_U0_dst_rows_V_read <= dilateMat_rows_V_dout;
    toThreshold_Threshold_1080_1920_0_0_U0_src_cols_V_read <= grayMat_cols_V_dout;
    toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_dout <= grayMat_data_stream_0_V_dout;
    toThreshold_Threshold_1080_1920_0_0_U0_src_data_stream_V_empty_n <= grayMat_data_stream_0_V_empty_n;
    toThreshold_Threshold_1080_1920_0_0_U0_src_rows_V_read <= grayMat_rows_V_dout;
end behav;

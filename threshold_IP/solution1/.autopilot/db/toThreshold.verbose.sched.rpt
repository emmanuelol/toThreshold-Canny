

================================================================
== Vivado HLS Report for 'toThreshold'
================================================================
* Date:           Fri Jun 26 18:10:48 2015

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        threshold_IP
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.73|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+----------+-----+----------+----------+
    |     Latency    |    Interval    | Pipeline |
    | min |    max   | min |    max   |   Type   |
    +-----+----------+-----+----------+----------+
    |  479|  16614971|  479|  16614972| dataflow |
    +-----+----------+-----+----------+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 22
* Pipeline: 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 22, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: rows_read [1/1] 0.00ns
codeRepl:18  %rows_read = call i32 @_ssdm_op_Read.ap_stable.i32(i32 %rows)

ST_1: cols_read [1/1] 0.00ns
codeRepl:19  %cols_read = call i32 @_ssdm_op_Read.ap_stable.i32(i32 %cols)

ST_1: inMat_data_stream_0_V [1/1] 0.00ns
codeRepl:20  %inMat_data_stream_0_V = alloca i8, align 1

ST_1: inMat_data_stream_1_V [1/1] 0.00ns
codeRepl:23  %inMat_data_stream_1_V = alloca i8, align 1

ST_1: inMat_data_stream_2_V [1/1] 0.00ns
codeRepl:26  %inMat_data_stream_2_V = alloca i8, align 1

ST_1: grayMat_data_stream_0_V [1/1] 0.00ns
codeRepl:29  %grayMat_data_stream_0_V = alloca i8, align 1

ST_1: dilateMat_data_stream_0_V [1/1] 0.00ns
codeRepl:32  %dilateMat_data_stream_0_V = alloca i8, align 1

ST_1: threshMat_data_stream_0_V [1/1] 0.00ns
codeRepl:35  %threshMat_data_stream_0_V = alloca i8, align 1

ST_1: blurMat_data_stream_0_V [1/1] 0.00ns
codeRepl:38  %blurMat_data_stream_0_V = alloca i8, align 1

ST_1: blursobelxMat_data_stream_0_V [1/1] 0.00ns
codeRepl:41  %blursobelxMat_data_stream_0_V = alloca i8, align 1

ST_1: blursobelyMat_data_stream_0_V [1/1] 0.00ns
codeRepl:44  %blursobelyMat_data_stream_0_V = alloca i8, align 1

ST_1: sobelxMat_data_stream_0_V [1/1] 0.00ns
codeRepl:47  %sobelxMat_data_stream_0_V = alloca i8, align 1

ST_1: sobelyMat_data_stream_0_V [1/1] 0.00ns
codeRepl:50  %sobelyMat_data_stream_0_V = alloca i8, align 1

ST_1: absvalueMat_data_stream_0_V [1/1] 0.00ns
codeRepl:53  %absvalueMat_data_stream_0_V = alloca i8, align 1

ST_1: angleMat_data_stream_0_V [1/1] 0.00ns
codeRepl:56  %angleMat_data_stream_0_V = alloca i8, align 1

ST_1: nmsupressionMat_data_stream_0 [1/1] 0.00ns
codeRepl:59  %nmsupressionMat_data_stream_0 = alloca i8, align 1

ST_1: outMat_data_stream_0_V [1/1] 0.00ns
codeRepl:62  %outMat_data_stream_0_V = alloca i8, align 1

ST_1: call_ret [1/1] 0.00ns
codeRepl:72  %call_ret = call fastcc { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } @toThreshold_Block__proc(i32 %rows_read, i32 %cols_read)

ST_1: inMat_rows_V_channel [1/1] 0.00ns
codeRepl:73  %inMat_rows_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 0

ST_1: inMat_rows_V_channel1 [1/1] 0.00ns
codeRepl:74  %inMat_rows_V_channel1 = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 1

ST_1: inMat_cols_V_channel [1/1] 0.00ns
codeRepl:75  %inMat_cols_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 2

ST_1: inMat_cols_V_channel1 [1/1] 0.00ns
codeRepl:76  %inMat_cols_V_channel1 = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 3

ST_1: grayMat_rows_V [1/1] 0.00ns
codeRepl:77  %grayMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 4

ST_1: grayMat_cols_V [1/1] 0.00ns
codeRepl:78  %grayMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 5

ST_1: dilateMat_rows_V [1/1] 0.00ns
codeRepl:79  %dilateMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 6

ST_1: dilateMat_rows_V_channel [1/1] 0.00ns
codeRepl:80  %dilateMat_rows_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 7

ST_1: dilateMat_cols_V [1/1] 0.00ns
codeRepl:81  %dilateMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 8

ST_1: dilateMat_cols_V_channel [1/1] 0.00ns
codeRepl:82  %dilateMat_cols_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 9

ST_1: threshMat_rows_V [1/1] 0.00ns
codeRepl:83  %threshMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 10

ST_1: threshMat_cols_V [1/1] 0.00ns
codeRepl:84  %threshMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 11

ST_1: blurMat_rows_V [1/1] 0.00ns
codeRepl:85  %blurMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 12

ST_1: blurMat_cols_V [1/1] 0.00ns
codeRepl:86  %blurMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 13

ST_1: blursobelxMat_rows_V [1/1] 0.00ns
codeRepl:87  %blursobelxMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 14

ST_1: blursobelxMat_rows_V_channel [1/1] 0.00ns
codeRepl:88  %blursobelxMat_rows_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 15

ST_1: blursobelxMat_cols_V [1/1] 0.00ns
codeRepl:89  %blursobelxMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 16

ST_1: blursobelxMat_cols_V_channel [1/1] 0.00ns
codeRepl:90  %blursobelxMat_cols_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 17

ST_1: blursobelyMat_rows_V [1/1] 0.00ns
codeRepl:91  %blursobelyMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 18

ST_1: blursobelyMat_rows_V_channel [1/1] 0.00ns
codeRepl:92  %blursobelyMat_rows_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 19

ST_1: blursobelyMat_cols_V [1/1] 0.00ns
codeRepl:93  %blursobelyMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 20

ST_1: blursobelyMat_cols_V_channel [1/1] 0.00ns
codeRepl:94  %blursobelyMat_cols_V_channel = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 21

ST_1: nmsupressionMat_rows_V [1/1] 0.00ns
codeRepl:95  %nmsupressionMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 22

ST_1: nmsupressionMat_cols_V [1/1] 0.00ns
codeRepl:96  %nmsupressionMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 23

ST_1: outMat_rows_V [1/1] 0.00ns
codeRepl:97  %outMat_rows_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 24

ST_1: outMat_cols_V [1/1] 0.00ns
codeRepl:98  %outMat_cols_V = extractvalue { i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12, i12 } %call_ret, 25

ST_1: stg_67 [2/2] 1.57ns
codeRepl:99  call fastcc void @toThreshold_AXIvideo2Mat(i24* %IN_STREAM_V_data_V, i3* %IN_STREAM_V_keep_V, i3* %IN_STREAM_V_strb_V, i1* %IN_STREAM_V_user_V, i1* %IN_STREAM_V_last_V, i1* %IN_STREAM_V_id_V, i1* %IN_STREAM_V_dest_V, i12 %inMat_rows_V_channel, i12 %inMat_cols_V_channel, i8* %inMat_data_stream_0_V, i8* %inMat_data_stream_1_V, i8* %inMat_data_stream_2_V)


 <State 2>: 0.00ns
ST_2: stg_68 [1/2] 0.00ns
codeRepl:99  call fastcc void @toThreshold_AXIvideo2Mat(i24* %IN_STREAM_V_data_V, i3* %IN_STREAM_V_keep_V, i3* %IN_STREAM_V_strb_V, i1* %IN_STREAM_V_user_V, i1* %IN_STREAM_V_last_V, i1* %IN_STREAM_V_id_V, i1* %IN_STREAM_V_dest_V, i12 %inMat_rows_V_channel, i12 %inMat_cols_V_channel, i8* %inMat_data_stream_0_V, i8* %inMat_data_stream_1_V, i8* %inMat_data_stream_2_V)


 <State 3>: 0.00ns
ST_3: stg_69 [2/2] 0.00ns
codeRepl:100  call fastcc void @toThreshold_CvtColor(i12 %inMat_rows_V_channel1, i12 %inMat_cols_V_channel1, i8* %inMat_data_stream_0_V, i8* %inMat_data_stream_1_V, i8* %inMat_data_stream_2_V, i8* %grayMat_data_stream_0_V)


 <State 4>: 0.00ns
ST_4: stg_70 [1/2] 0.00ns
codeRepl:100  call fastcc void @toThreshold_CvtColor(i12 %inMat_rows_V_channel1, i12 %inMat_cols_V_channel1, i8* %inMat_data_stream_0_V, i8* %inMat_data_stream_1_V, i8* %inMat_data_stream_2_V, i8* %grayMat_data_stream_0_V)


 <State 5>: 0.00ns
ST_5: stg_71 [2/2] 0.00ns
codeRepl:101  call fastcc void @"toThreshold_Threshold<1080, 1920, 0, 0>"(i12 %grayMat_rows_V, i12 %grayMat_cols_V, i8* %grayMat_data_stream_0_V, i12 %dilateMat_rows_V, i12 %dilateMat_cols_V, i8* %dilateMat_data_stream_0_V)


 <State 6>: 0.00ns
ST_6: stg_72 [1/2] 0.00ns
codeRepl:101  call fastcc void @"toThreshold_Threshold<1080, 1920, 0, 0>"(i12 %grayMat_rows_V, i12 %grayMat_cols_V, i8* %grayMat_data_stream_0_V, i12 %dilateMat_rows_V, i12 %dilateMat_cols_V, i8* %dilateMat_data_stream_0_V)


 <State 7>: 1.84ns
ST_7: stg_73 [2/2] 1.84ns
codeRepl:102  call fastcc void @"toThreshold_Dilate<0, 0, 1080, 1920>"(i12 %dilateMat_rows_V_channel, i12 %dilateMat_cols_V_channel, i8* %dilateMat_data_stream_0_V, i8* %threshMat_data_stream_0_V)


 <State 8>: 0.00ns
ST_8: stg_74 [1/2] 0.00ns
codeRepl:102  call fastcc void @"toThreshold_Dilate<0, 0, 1080, 1920>"(i12 %dilateMat_rows_V_channel, i12 %dilateMat_cols_V_channel, i8* %dilateMat_data_stream_0_V, i8* %threshMat_data_stream_0_V)


 <State 9>: 0.00ns
ST_9: stg_75 [2/2] 0.00ns
codeRepl:103  call fastcc void @toThreshold_GaussianBlur(i12 %threshMat_rows_V, i12 %threshMat_cols_V, i8* %threshMat_data_stream_0_V, i8* %blurMat_data_stream_0_V)


 <State 10>: 0.00ns
ST_10: stg_76 [1/2] 0.00ns
codeRepl:103  call fastcc void @toThreshold_GaussianBlur(i12 %threshMat_rows_V, i12 %threshMat_cols_V, i8* %threshMat_data_stream_0_V, i8* %blurMat_data_stream_0_V)


 <State 11>: 0.00ns
ST_11: stg_77 [2/2] 0.00ns
codeRepl:104  call fastcc void @"toThreshold_Duplicate<1080, 1920, 0, 0>"(i12 %blurMat_rows_V, i12 %blurMat_cols_V, i8* %blurMat_data_stream_0_V, i12 %blursobelxMat_rows_V, i12 %blursobelxMat_cols_V, i8* %blursobelxMat_data_stream_0_V, i12 %blursobelyMat_rows_V, i12 %blursobelyMat_cols_V, i8* %blursobelyMat_data_stream_0_V)


 <State 12>: 0.00ns
ST_12: stg_78 [1/2] 0.00ns
codeRepl:104  call fastcc void @"toThreshold_Duplicate<1080, 1920, 0, 0>"(i12 %blurMat_rows_V, i12 %blurMat_cols_V, i8* %blurMat_data_stream_0_V, i12 %blursobelxMat_rows_V, i12 %blursobelxMat_cols_V, i8* %blursobelxMat_data_stream_0_V, i12 %blursobelyMat_rows_V, i12 %blursobelyMat_cols_V, i8* %blursobelyMat_data_stream_0_V)


 <State 13>: 0.00ns
ST_13: stg_79 [2/2] 0.00ns
codeRepl:105  call fastcc void @toThreshold_Sobel(i12 %blursobelxMat_rows_V_channel, i12 %blursobelxMat_cols_V_channel, i8* %blursobelxMat_data_stream_0_V, i8* %sobelxMat_data_stream_0_V)

ST_13: stg_80 [2/2] 0.00ns
codeRepl:106  call fastcc void @toThreshold_Sobel.1(i12 %blursobelyMat_rows_V_channel, i12 %blursobelyMat_cols_V_channel, i8* %blursobelyMat_data_stream_0_V, i8* %sobelyMat_data_stream_0_V)


 <State 14>: 0.00ns
ST_14: stg_81 [1/2] 0.00ns
codeRepl:105  call fastcc void @toThreshold_Sobel(i12 %blursobelxMat_rows_V_channel, i12 %blursobelxMat_cols_V_channel, i8* %blursobelxMat_data_stream_0_V, i8* %sobelxMat_data_stream_0_V)

ST_14: stg_82 [1/2] 0.00ns
codeRepl:106  call fastcc void @toThreshold_Sobel.1(i12 %blursobelyMat_rows_V_channel, i12 %blursobelyMat_cols_V_channel, i8* %blursobelyMat_data_stream_0_V, i8* %sobelyMat_data_stream_0_V)


 <State 15>: 0.00ns
ST_15: stg_83 [2/2] 0.00ns
codeRepl:107  call fastcc void @toThreshold_Loop_GradientLoop_proc(i32 %rows_read, i32 %cols_read, i8* %sobelxMat_data_stream_0_V, i8* %sobelyMat_data_stream_0_V, i8* %absvalueMat_data_stream_0_V, i8* %angleMat_data_stream_0_V)


 <State 16>: 0.00ns
ST_16: stg_84 [1/2] 0.00ns
codeRepl:107  call fastcc void @toThreshold_Loop_GradientLoop_proc(i32 %rows_read, i32 %cols_read, i8* %sobelxMat_data_stream_0_V, i8* %sobelyMat_data_stream_0_V, i8* %absvalueMat_data_stream_0_V, i8* %angleMat_data_stream_0_V)


 <State 17>: 1.84ns
ST_17: stg_85 [2/2] 1.84ns
codeRepl:108  call fastcc void @toThreshold_Loop_LineBufferLoop_proc(i32 %cols_read, i32 %rows_read, i8* %absvalueMat_data_stream_0_V, i8* %angleMat_data_stream_0_V, i8* %nmsupressionMat_data_stream_0)


 <State 18>: 0.00ns
ST_18: stg_86 [1/2] 0.00ns
codeRepl:108  call fastcc void @toThreshold_Loop_LineBufferLoop_proc(i32 %cols_read, i32 %rows_read, i8* %absvalueMat_data_stream_0_V, i8* %angleMat_data_stream_0_V, i8* %nmsupressionMat_data_stream_0)


 <State 19>: 1.84ns
ST_19: stg_87 [2/2] 1.84ns
codeRepl:109  call fastcc void @"toThreshold_Dilate<0, 0, 1080, 1920>.1"(i12 %nmsupressionMat_rows_V, i12 %nmsupressionMat_cols_V, i8* %nmsupressionMat_data_stream_0, i8* %outMat_data_stream_0_V)


 <State 20>: 0.00ns
ST_20: stg_88 [1/2] 0.00ns
codeRepl:109  call fastcc void @"toThreshold_Dilate<0, 0, 1080, 1920>.1"(i12 %nmsupressionMat_rows_V, i12 %nmsupressionMat_cols_V, i8* %nmsupressionMat_data_stream_0, i8* %outMat_data_stream_0_V)


 <State 21>: 1.84ns
ST_21: stg_89 [2/2] 1.84ns
codeRepl:110  call fastcc void @"toThreshold_Mat2AXIvideo<8, 1080, 1920, 0>"(i12 %outMat_rows_V, i12 %outMat_cols_V, i8* %outMat_data_stream_0_V, i8* %OUT_STREAM_V_data_V, i1* %OUT_STREAM_V_keep_V, i1* %OUT_STREAM_V_strb_V, i1* %OUT_STREAM_V_user_V, i1* %OUT_STREAM_V_last_V, i1* %OUT_STREAM_V_id_V, i1* %OUT_STREAM_V_dest_V)


 <State 22>: 1.70ns
ST_22: stg_90 [1/1] 0.00ns
codeRepl:0  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str1806) nounwind

ST_22: stg_91 [1/1] 0.00ns
codeRepl:1  call void (...)* @_ssdm_op_SpecBitsMap(i24* %IN_STREAM_V_data_V), !map !7

ST_22: stg_92 [1/1] 0.00ns
codeRepl:2  call void (...)* @_ssdm_op_SpecBitsMap(i3* %IN_STREAM_V_keep_V), !map !13

ST_22: stg_93 [1/1] 0.00ns
codeRepl:3  call void (...)* @_ssdm_op_SpecBitsMap(i3* %IN_STREAM_V_strb_V), !map !17

ST_22: stg_94 [1/1] 0.00ns
codeRepl:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %IN_STREAM_V_user_V), !map !21

ST_22: stg_95 [1/1] 0.00ns
codeRepl:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %IN_STREAM_V_last_V), !map !25

ST_22: stg_96 [1/1] 0.00ns
codeRepl:6  call void (...)* @_ssdm_op_SpecBitsMap(i1* %IN_STREAM_V_id_V), !map !29

ST_22: stg_97 [1/1] 0.00ns
codeRepl:7  call void (...)* @_ssdm_op_SpecBitsMap(i1* %IN_STREAM_V_dest_V), !map !33

ST_22: stg_98 [1/1] 0.00ns
codeRepl:8  call void (...)* @_ssdm_op_SpecBitsMap(i8* %OUT_STREAM_V_data_V), !map !37

ST_22: stg_99 [1/1] 0.00ns
codeRepl:9  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUT_STREAM_V_keep_V), !map !41

ST_22: stg_100 [1/1] 0.00ns
codeRepl:10  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUT_STREAM_V_strb_V), !map !45

ST_22: stg_101 [1/1] 0.00ns
codeRepl:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUT_STREAM_V_user_V), !map !49

ST_22: stg_102 [1/1] 0.00ns
codeRepl:12  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUT_STREAM_V_last_V), !map !53

ST_22: stg_103 [1/1] 0.00ns
codeRepl:13  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUT_STREAM_V_id_V), !map !57

ST_22: stg_104 [1/1] 0.00ns
codeRepl:14  call void (...)* @_ssdm_op_SpecBitsMap(i1* %OUT_STREAM_V_dest_V), !map !61

ST_22: stg_105 [1/1] 0.00ns
codeRepl:15  call void (...)* @_ssdm_op_SpecBitsMap(i32 %cols), !map !65

ST_22: stg_106 [1/1] 0.00ns
codeRepl:16  call void (...)* @_ssdm_op_SpecBitsMap(i32 %rows), !map !71

ST_22: stg_107 [1/1] 0.00ns
codeRepl:17  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @str) nounwind

ST_22: empty [1/1] 0.00ns
codeRepl:21  %empty = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @str210, i32 1, [1 x i8]* @str211, [1 x i8]* @str211, i32 1, i32 1, i8* %inMat_data_stream_0_V, i8* %inMat_data_stream_0_V)

ST_22: stg_109 [1/1] 0.00ns
codeRepl:22  call void (...)* @_ssdm_op_SpecInterface(i8* %inMat_data_stream_0_V, [8 x i8]* @str212, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str213, [1 x i8]* @str213, [8 x i8]* @str212)

ST_22: empty_20 [1/1] 0.00ns
codeRepl:24  %empty_20 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @str214, i32 1, [1 x i8]* @str215, [1 x i8]* @str215, i32 1, i32 1, i8* %inMat_data_stream_1_V, i8* %inMat_data_stream_1_V)

ST_22: stg_111 [1/1] 0.00ns
codeRepl:25  call void (...)* @_ssdm_op_SpecInterface(i8* %inMat_data_stream_1_V, [8 x i8]* @str216, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str217, [1 x i8]* @str217, [8 x i8]* @str216)

ST_22: empty_21 [1/1] 0.00ns
codeRepl:27  %empty_21 = call i32 (...)* @_ssdm_op_SpecChannel([23 x i8]* @str218, i32 1, [1 x i8]* @str219, [1 x i8]* @str219, i32 1, i32 1, i8* %inMat_data_stream_2_V, i8* %inMat_data_stream_2_V)

ST_22: stg_113 [1/1] 0.00ns
codeRepl:28  call void (...)* @_ssdm_op_SpecInterface(i8* %inMat_data_stream_2_V, [8 x i8]* @str220, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str221, [1 x i8]* @str221, [8 x i8]* @str220)

ST_22: empty_22 [1/1] 0.00ns
codeRepl:30  %empty_22 = call i32 (...)* @_ssdm_op_SpecChannel([25 x i8]* @str222, i32 1, [1 x i8]* @str223, [1 x i8]* @str223, i32 1, i32 1, i8* %grayMat_data_stream_0_V, i8* %grayMat_data_stream_0_V)

ST_22: stg_115 [1/1] 0.00ns
codeRepl:31  call void (...)* @_ssdm_op_SpecInterface(i8* %grayMat_data_stream_0_V, [8 x i8]* @str224, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str225, [1 x i8]* @str225, [8 x i8]* @str224)

ST_22: empty_23 [1/1] 0.00ns
codeRepl:33  %empty_23 = call i32 (...)* @_ssdm_op_SpecChannel([27 x i8]* @str226, i32 1, [1 x i8]* @str227, [1 x i8]* @str227, i32 1, i32 1, i8* %dilateMat_data_stream_0_V, i8* %dilateMat_data_stream_0_V)

ST_22: stg_117 [1/1] 0.00ns
codeRepl:34  call void (...)* @_ssdm_op_SpecInterface(i8* %dilateMat_data_stream_0_V, [8 x i8]* @str228, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str229, [1 x i8]* @str229, [8 x i8]* @str228)

ST_22: empty_24 [1/1] 0.00ns
codeRepl:36  %empty_24 = call i32 (...)* @_ssdm_op_SpecChannel([27 x i8]* @str230, i32 1, [1 x i8]* @str231, [1 x i8]* @str231, i32 1, i32 1, i8* %threshMat_data_stream_0_V, i8* %threshMat_data_stream_0_V)

ST_22: stg_119 [1/1] 0.00ns
codeRepl:37  call void (...)* @_ssdm_op_SpecInterface(i8* %threshMat_data_stream_0_V, [8 x i8]* @str232, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str233, [1 x i8]* @str233, [8 x i8]* @str232)

ST_22: empty_25 [1/1] 0.00ns
codeRepl:39  %empty_25 = call i32 (...)* @_ssdm_op_SpecChannel([25 x i8]* @str234, i32 1, [1 x i8]* @str235, [1 x i8]* @str235, i32 1, i32 1, i8* %blurMat_data_stream_0_V, i8* %blurMat_data_stream_0_V)

ST_22: stg_121 [1/1] 0.00ns
codeRepl:40  call void (...)* @_ssdm_op_SpecInterface(i8* %blurMat_data_stream_0_V, [8 x i8]* @str236, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str237, [1 x i8]* @str237, [8 x i8]* @str236)

ST_22: empty_26 [1/1] 0.00ns
codeRepl:42  %empty_26 = call i32 (...)* @_ssdm_op_SpecChannel([31 x i8]* @str238, i32 1, [1 x i8]* @str239, [1 x i8]* @str239, i32 1, i32 1, i8* %blursobelxMat_data_stream_0_V, i8* %blursobelxMat_data_stream_0_V)

ST_22: stg_123 [1/1] 0.00ns
codeRepl:43  call void (...)* @_ssdm_op_SpecInterface(i8* %blursobelxMat_data_stream_0_V, [8 x i8]* @str240, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str241, [1 x i8]* @str241, [8 x i8]* @str240)

ST_22: empty_27 [1/1] 0.00ns
codeRepl:45  %empty_27 = call i32 (...)* @_ssdm_op_SpecChannel([31 x i8]* @str242, i32 1, [1 x i8]* @str243, [1 x i8]* @str243, i32 1, i32 1, i8* %blursobelyMat_data_stream_0_V, i8* %blursobelyMat_data_stream_0_V)

ST_22: stg_125 [1/1] 0.00ns
codeRepl:46  call void (...)* @_ssdm_op_SpecInterface(i8* %blursobelyMat_data_stream_0_V, [8 x i8]* @str244, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str245, [1 x i8]* @str245, [8 x i8]* @str244)

ST_22: empty_28 [1/1] 0.00ns
codeRepl:48  %empty_28 = call i32 (...)* @_ssdm_op_SpecChannel([27 x i8]* @str246, i32 1, [1 x i8]* @str247, [1 x i8]* @str247, i32 1, i32 1, i8* %sobelxMat_data_stream_0_V, i8* %sobelxMat_data_stream_0_V)

ST_22: stg_127 [1/1] 0.00ns
codeRepl:49  call void (...)* @_ssdm_op_SpecInterface(i8* %sobelxMat_data_stream_0_V, [8 x i8]* @str248, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str249, [1 x i8]* @str249, [8 x i8]* @str248)

ST_22: empty_29 [1/1] 0.00ns
codeRepl:51  %empty_29 = call i32 (...)* @_ssdm_op_SpecChannel([27 x i8]* @str250, i32 1, [1 x i8]* @str251, [1 x i8]* @str251, i32 1, i32 1, i8* %sobelyMat_data_stream_0_V, i8* %sobelyMat_data_stream_0_V)

ST_22: stg_129 [1/1] 0.00ns
codeRepl:52  call void (...)* @_ssdm_op_SpecInterface(i8* %sobelyMat_data_stream_0_V, [8 x i8]* @str252, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str253, [1 x i8]* @str253, [8 x i8]* @str252)

ST_22: empty_30 [1/1] 0.00ns
codeRepl:54  %empty_30 = call i32 (...)* @_ssdm_op_SpecChannel([29 x i8]* @str254, i32 1, [1 x i8]* @str255, [1 x i8]* @str255, i32 1, i32 1, i8* %absvalueMat_data_stream_0_V, i8* %absvalueMat_data_stream_0_V)

ST_22: stg_131 [1/1] 0.00ns
codeRepl:55  call void (...)* @_ssdm_op_SpecInterface(i8* %absvalueMat_data_stream_0_V, [8 x i8]* @str256, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str257, [1 x i8]* @str257, [8 x i8]* @str256)

ST_22: empty_31 [1/1] 0.00ns
codeRepl:57  %empty_31 = call i32 (...)* @_ssdm_op_SpecChannel([26 x i8]* @str258, i32 1, [1 x i8]* @str259, [1 x i8]* @str259, i32 1, i32 1, i8* %angleMat_data_stream_0_V, i8* %angleMat_data_stream_0_V)

ST_22: stg_133 [1/1] 0.00ns
codeRepl:58  call void (...)* @_ssdm_op_SpecInterface(i8* %angleMat_data_stream_0_V, [8 x i8]* @str260, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str261, [1 x i8]* @str261, [8 x i8]* @str260)

ST_22: empty_32 [1/1] 0.00ns
codeRepl:60  %empty_32 = call i32 (...)* @_ssdm_op_SpecChannel([33 x i8]* @str262, i32 1, [1 x i8]* @str263, [1 x i8]* @str263, i32 1, i32 1, i8* %nmsupressionMat_data_stream_0, i8* %nmsupressionMat_data_stream_0)

ST_22: stg_135 [1/1] 0.00ns
codeRepl:61  call void (...)* @_ssdm_op_SpecInterface(i8* %nmsupressionMat_data_stream_0, [8 x i8]* @str264, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str265, [1 x i8]* @str265, [8 x i8]* @str264)

ST_22: empty_33 [1/1] 0.00ns
codeRepl:63  %empty_33 = call i32 (...)* @_ssdm_op_SpecChannel([24 x i8]* @str266, i32 1, [1 x i8]* @str267, [1 x i8]* @str267, i32 1, i32 1, i8* %outMat_data_stream_0_V, i8* %outMat_data_stream_0_V)

ST_22: stg_137 [1/1] 0.00ns
codeRepl:64  call void (...)* @_ssdm_op_SpecInterface(i8* %outMat_data_stream_0_V, [8 x i8]* @str268, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str269, [1 x i8]* @str269, [8 x i8]* @str268)

ST_22: stg_138 [1/1] 0.00ns
codeRepl:65  call void (...)* @_ssdm_op_SpecInterface(i24* %IN_STREAM_V_data_V, i3* %IN_STREAM_V_keep_V, i3* %IN_STREAM_V_strb_V, i1* %IN_STREAM_V_user_V, i1* %IN_STREAM_V_last_V, i1* %IN_STREAM_V_id_V, i1* %IN_STREAM_V_dest_V, [5 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_22: stg_139 [1/1] 0.00ns
codeRepl:66  call void (...)* @_ssdm_op_SpecInterface(i8* %OUT_STREAM_V_data_V, i1* %OUT_STREAM_V_keep_V, i1* %OUT_STREAM_V_strb_V, i1* %OUT_STREAM_V_user_V, i1* %OUT_STREAM_V_last_V, i1* %OUT_STREAM_V_id_V, i1* %OUT_STREAM_V_dest_V, [5 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_22: stg_140 [1/1] 0.00ns
codeRepl:67  call void (...)* @_ssdm_op_SpecIFCore(i32 %rows, [1 x i8]* @p_str1806, [10 x i8]* @p_str1807, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [20 x i8]* @p_str1808)

ST_22: stg_141 [1/1] 0.00ns
codeRepl:68  call void (...)* @_ssdm_op_SpecIFCore(i32 %cols, [1 x i8]* @p_str1806, [10 x i8]* @p_str1807, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [20 x i8]* @p_str1808)

ST_22: stg_142 [1/1] 0.00ns
codeRepl:69  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str1806, [10 x i8]* @p_str1807, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [20 x i8]* @p_str1808)

ST_22: stg_143 [1/1] 0.00ns
codeRepl:70  call void (...)* @_ssdm_op_SpecInterface(i32 %rows, [10 x i8]* @p_str1809, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_22: stg_144 [1/1] 0.00ns
codeRepl:71  call void (...)* @_ssdm_op_SpecInterface(i32 %cols, [10 x i8]* @p_str1809, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_22: stg_145 [1/2] 1.70ns
codeRepl:110  call fastcc void @"toThreshold_Mat2AXIvideo<8, 1080, 1920, 0>"(i12 %outMat_rows_V, i12 %outMat_cols_V, i8* %outMat_data_stream_0_V, i8* %OUT_STREAM_V_data_V, i1* %OUT_STREAM_V_keep_V, i1* %OUT_STREAM_V_strb_V, i1* %OUT_STREAM_V_user_V, i1* %OUT_STREAM_V_last_V, i1* %OUT_STREAM_V_id_V, i1* %OUT_STREAM_V_dest_V)

ST_22: stg_146 [1/1] 0.00ns
codeRepl:111  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A



================================================================
== Vivado HLS Report for 'toThreshold_Filter2D_1'
================================================================
* Date:           Fri Jun 26 18:10:44 2015

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        threshold_IP
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.67|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------+-----+---------+---------+
    |    Latency    |    Interval   | Pipeline|
    | min |   max   | min |   max   |   Type  |
    +-----+---------+-----+---------+---------+
    |  409|  2108305|  409|  2108305|   none  |
    +-----+---------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+-----+---------+-----------+-----------+-----------+-----------+----------+
        |               |    Latency    | Iteration |  Initiation Interval  |    Trip   |          |
        |   Loop Name   | min |   max   |  Latency  |  achieved |   target  |   Count   | Pipelined|
        +---------------+-----+---------+-----------+-----------+-----------+-----------+----------+
        |- loop_height  |  408|  2108304| 24 ~ 1936 |          -|          -| 17 ~ 1089 |    no    |
        | + loop_width  |   21|     1933|         11|          1|          1| 12 ~ 1924 |    yes   |
        +---------------+-----+---------+-----------+-----------+-----------+-----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 1
  Pipeline-0: II = 1, D = 11, States = { 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_70)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	14  / (!tmp_74)
	9  / (tmp_74)
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	3  / true
14 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.84ns
ST_1: src_kernel_win_0_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:0  %src_kernel_win_0_val_0_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:1  %src_kernel_win_0_val_0_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_0_3 [1/1] 0.00ns
arrayctor.loop.i:2  %src_kernel_win_0_val_0_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_0_4 [1/1] 0.00ns
arrayctor.loop.i:3  %src_kernel_win_0_val_0_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_17 [1/1] 0.00ns
arrayctor.loop.i:4  %col_buf_0_val_0_0_17 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_1 [1/1] 0.00ns
arrayctor.loop.i:5  %src_kernel_win_0_val_1_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:6  %src_kernel_win_0_val_1_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_3 [1/1] 0.00ns
arrayctor.loop.i:7  %src_kernel_win_0_val_1_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_4 [1/1] 0.00ns
arrayctor.loop.i:8  %src_kernel_win_0_val_1_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_18 [1/1] 0.00ns
arrayctor.loop.i:9  %col_buf_0_val_0_0_18 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_1 [1/1] 0.00ns
arrayctor.loop.i:10  %src_kernel_win_0_val_2_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_2 [1/1] 0.00ns
arrayctor.loop.i:11  %src_kernel_win_0_val_2_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_3 [1/1] 0.00ns
arrayctor.loop.i:12  %src_kernel_win_0_val_2_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_4 [1/1] 0.00ns
arrayctor.loop.i:13  %src_kernel_win_0_val_2_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_19 [1/1] 0.00ns
arrayctor.loop.i:14  %col_buf_0_val_0_0_19 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_1 [1/1] 0.00ns
arrayctor.loop.i:15  %src_kernel_win_0_val_4_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_1 [1/1] 0.00ns
arrayctor.loop.i:16  %src_kernel_win_0_val_3_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_2 [1/1] 0.00ns
arrayctor.loop.i:17  %src_kernel_win_0_val_3_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_3 [1/1] 0.00ns
arrayctor.loop.i:18  %src_kernel_win_0_val_3_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_4 [1/1] 0.00ns
arrayctor.loop.i:19  %src_kernel_win_0_val_3_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_20 [1/1] 0.00ns
arrayctor.loop.i:20  %col_buf_0_val_0_0_20 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_2 [1/1] 0.00ns
arrayctor.loop.i:21  %src_kernel_win_0_val_4_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_3 [1/1] 0.00ns
arrayctor.loop.i:22  %src_kernel_win_0_val_4_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_4 [1/1] 0.00ns
arrayctor.loop.i:23  %src_kernel_win_0_val_4_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_21 [1/1] 0.00ns
arrayctor.loop.i:24  %col_buf_0_val_0_0_21 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_28 [1/1] 0.00ns
arrayctor.loop.i:25  %right_border_buf_0_val_1_4_28 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_29 [1/1] 0.00ns
arrayctor.loop.i:26  %right_border_buf_0_val_1_4_29 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_30 [1/1] 0.00ns
arrayctor.loop.i:27  %right_border_buf_0_val_1_4_30 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_31 [1/1] 0.00ns
arrayctor.loop.i:28  %right_border_buf_0_val_1_4_31 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_32 [1/1] 0.00ns
arrayctor.loop.i:29  %right_border_buf_0_val_1_4_32 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_14 [1/1] 0.00ns
arrayctor.loop.i:30  %right_border_buf_0_val_2_4_14 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_15 [1/1] 0.00ns
arrayctor.loop.i:31  %right_border_buf_0_val_2_4_15 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_16 [1/1] 0.00ns
arrayctor.loop.i:32  %right_border_buf_0_val_2_4_16 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_17 [1/1] 0.00ns
arrayctor.loop.i:33  %right_border_buf_0_val_2_4_17 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_18 [1/1] 0.00ns
arrayctor.loop.i:34  %right_border_buf_0_val_2_4_18 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_28 [1/1] 0.00ns
arrayctor.loop.i:35  %right_border_buf_0_val_3_4_28 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_29 [1/1] 0.00ns
arrayctor.loop.i:36  %right_border_buf_0_val_3_4_29 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_30 [1/1] 0.00ns
arrayctor.loop.i:37  %right_border_buf_0_val_3_4_30 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_31 [1/1] 0.00ns
arrayctor.loop.i:38  %right_border_buf_0_val_3_4_31 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_32 [1/1] 0.00ns
arrayctor.loop.i:39  %right_border_buf_0_val_3_4_32 = alloca i8, align 1

ST_1: stg_55 [1/1] 0.00ns
arrayctor.loop.i:40  call void (...)* @_ssdm_op_SpecInterface(i8* %p_dst_data_stream_V, [8 x i8]* @str252, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str253, [1 x i8]* @str253, [8 x i8]* @str252)

ST_1: stg_56 [1/1] 0.00ns
arrayctor.loop.i:41  call void (...)* @_ssdm_op_SpecInterface(i8* %p_src_data_stream_V, [8 x i8]* @str244, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str245, [1 x i8]* @str245, [8 x i8]* @str244)

ST_1: p_kernel_val_4_V_3_read_1 [1/1] 0.00ns
arrayctor.loop.i:42  %p_kernel_val_4_V_3_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_4_V_3_read)

ST_1: p_kernel_val_4_V_2_read_1 [1/1] 0.00ns
arrayctor.loop.i:43  %p_kernel_val_4_V_2_read_1 = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %p_kernel_val_4_V_2_read)

ST_1: p_kernel_val_4_V_1_read_1 [1/1] 0.00ns
arrayctor.loop.i:44  %p_kernel_val_4_V_1_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_4_V_1_read)

ST_1: p_kernel_val_4_V_0_read_1 [1/1] 0.00ns
arrayctor.loop.i:45  %p_kernel_val_4_V_0_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_4_V_0_read)

ST_1: p_kernel_val_3_V_4_read_1 [1/1] 0.00ns
arrayctor.loop.i:46  %p_kernel_val_3_V_4_read_1 = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %p_kernel_val_3_V_4_read)

ST_1: p_kernel_val_3_V_2_read_1 [1/1] 0.00ns
arrayctor.loop.i:47  %p_kernel_val_3_V_2_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_3_V_2_read)

ST_1: p_kernel_val_3_V_1_read_1 [1/1] 0.00ns
arrayctor.loop.i:48  %p_kernel_val_3_V_1_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_3_V_1_read)

ST_1: p_kernel_val_3_V_0_read_1 [1/1] 0.00ns
arrayctor.loop.i:49  %p_kernel_val_3_V_0_read_1 = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %p_kernel_val_3_V_0_read)

ST_1: p_kernel_val_2_V_4_read_1 [1/1] 0.00ns
arrayctor.loop.i:50  %p_kernel_val_2_V_4_read_1 = call i5 @_ssdm_op_Read.ap_auto.i5(i5 %p_kernel_val_2_V_4_read)

ST_1: p_kernel_val_2_V_3_read_1 [1/1] 0.00ns
arrayctor.loop.i:51  %p_kernel_val_2_V_3_read_1 = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %p_kernel_val_2_V_3_read)

ST_1: p_kernel_val_2_V_1_read_1 [1/1] 0.00ns
arrayctor.loop.i:52  %p_kernel_val_2_V_1_read_1 = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %p_kernel_val_2_V_1_read)

ST_1: p_kernel_val_2_V_0_read_1 [1/1] 0.00ns
arrayctor.loop.i:53  %p_kernel_val_2_V_0_read_1 = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %p_kernel_val_2_V_0_read)

ST_1: p_kernel_val_1_V_4_read_1 [1/1] 0.00ns
arrayctor.loop.i:54  %p_kernel_val_1_V_4_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_1_V_4_read)

ST_1: p_kernel_val_1_V_3_read_1 [1/1] 0.00ns
arrayctor.loop.i:55  %p_kernel_val_1_V_3_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_1_V_3_read)

ST_1: p_kernel_val_1_V_2_read_1 [1/1] 0.00ns
arrayctor.loop.i:56  %p_kernel_val_1_V_2_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_1_V_2_read)

ST_1: p_kernel_val_1_V_0_read_1 [1/1] 0.00ns
arrayctor.loop.i:57  %p_kernel_val_1_V_0_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_1_V_0_read)

ST_1: p_kernel_val_0_V_4_read_1 [1/1] 0.00ns
arrayctor.loop.i:58  %p_kernel_val_0_V_4_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_0_V_4_read)

ST_1: p_kernel_val_0_V_3_read_1 [1/1] 0.00ns
arrayctor.loop.i:59  %p_kernel_val_0_V_3_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_0_V_3_read)

ST_1: p_kernel_val_0_V_2_read_1 [1/1] 0.00ns
arrayctor.loop.i:60  %p_kernel_val_0_V_2_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_0_V_2_read)

ST_1: p_kernel_val_0_V_1_read_1 [1/1] 0.00ns
arrayctor.loop.i:61  %p_kernel_val_0_V_1_read_1 = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %p_kernel_val_0_V_1_read)

ST_1: p_src_cols_V_read_2 [1/1] 0.00ns
arrayctor.loop.i:62  %p_src_cols_V_read_2 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_cols_V_read)

ST_1: p_src_rows_V_read_2 [1/1] 0.00ns
arrayctor.loop.i:63  %p_src_rows_V_read_2 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_rows_V_read)

ST_1: k_buf_0_val_0 [1/1] 0.00ns
arrayctor.loop.i:64  %k_buf_0_val_0 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_1 [1/1] 0.00ns
arrayctor.loop.i:65  %k_buf_0_val_1 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_2 [1/1] 0.00ns
arrayctor.loop.i:66  %k_buf_0_val_2 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_3 [1/1] 0.00ns
arrayctor.loop.i:67  %k_buf_0_val_3 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_4 [1/1] 0.00ns
arrayctor.loop.i:68  %k_buf_0_val_4 = alloca [1920 x i8], align 1

ST_1: right_border_buf_0_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:69  %right_border_buf_0_val_0_0 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:70  %right_border_buf_0_val_0_1 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:71  %right_border_buf_0_val_0_2 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_3 [1/1] 0.00ns
arrayctor.loop.i:72  %right_border_buf_0_val_0_3 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_4 [1/1] 0.00ns
arrayctor.loop.i:73  %right_border_buf_0_val_0_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:74  %col_buf_0_val_0_0 = alloca i8, align 1

ST_1: tmp_88 [1/1] 0.00ns
arrayctor.loop.i:75  %tmp_88 = trunc i12 %p_src_rows_V_read_2 to i11

ST_1: tmp_89 [1/1] 0.00ns
arrayctor.loop.i:76  %tmp_89 = trunc i12 %p_src_cols_V_read_2 to i11

ST_1: stg_92 [1/1] 0.00ns
arrayctor.loop.i:77  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: rbegin_i_i [1/1] 0.00ns
arrayctor.loop.i:78  %rbegin_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([61 x i8]* @p_str29) nounwind

ST_1: rend_i_i [1/1] 0.00ns
arrayctor.loop.i:79  %rend_i_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([61 x i8]* @p_str29, i32 %rbegin_i_i) nounwind

ST_1: stg_95 [1/1] 0.00ns
arrayctor.loop.i:80  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: rbegin_i250_i [1/1] 0.00ns
arrayctor.loop.i:81  %rbegin_i250_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str41) nounwind

ST_1: rend_i251_i [1/1] 0.00ns
arrayctor.loop.i:82  %rend_i251_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str41, i32 %rbegin_i250_i) nounwind

ST_1: stg_98 [1/1] 0.00ns
arrayctor.loop.i:83  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: rbegin_i252_i [1/1] 0.00ns
arrayctor.loop.i:84  %rbegin_i252_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str52) nounwind

ST_1: rend_i253_i [1/1] 0.00ns
arrayctor.loop.i:85  %rend_i253_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str52, i32 %rbegin_i252_i) nounwind

ST_1: stg_101 [1/1] 0.00ns
arrayctor.loop.i:86  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: heightloop [1/1] 1.84ns
arrayctor.loop.i:87  %heightloop = add i11 %tmp_88, 9

ST_1: widthloop [1/1] 1.84ns
arrayctor.loop.i:88  %widthloop = add i11 %tmp_89, 4

ST_1: tmp_s [1/1] 1.84ns
arrayctor.loop.i:89  %tmp_s = add i11 %tmp_89, -5

ST_1: tmp_146_cast [1/1] 0.00ns
arrayctor.loop.i:90  %tmp_146_cast = zext i11 %tmp_s to i12

ST_1: p_neg228_i [1/1] 1.84ns
arrayctor.loop.i:91  %p_neg228_i = sub i12 5, %p_src_cols_V_read_2

ST_1: tmp_91 [1/1] 0.00ns
arrayctor.loop.i:92  %tmp_91 = trunc i12 %p_neg228_i to i3

ST_1: ref [1/1] 1.84ns
arrayctor.loop.i:93  %ref = add i11 %tmp_88, -1

ST_1: ref_cast [1/1] 0.00ns
arrayctor.loop.i:94  %ref_cast = zext i11 %ref to i12

ST_1: OP2_V_0_1_cast [1/1] 0.00ns
arrayctor.loop.i:95  %OP2_V_0_1_cast = sext i3 %p_kernel_val_0_V_1_read_1 to i11

ST_1: OP2_V_0_2_cast [1/1] 0.00ns
arrayctor.loop.i:96  %OP2_V_0_2_cast = sext i3 %p_kernel_val_0_V_2_read_1 to i11

ST_1: OP2_V_0_3_cast [1/1] 0.00ns
arrayctor.loop.i:97  %OP2_V_0_3_cast = sext i3 %p_kernel_val_0_V_3_read_1 to i11

ST_1: OP2_V_0_4_cast [1/1] 0.00ns
arrayctor.loop.i:98  %OP2_V_0_4_cast = sext i3 %p_kernel_val_0_V_4_read_1 to i11

ST_1: OP2_V_1_cast [1/1] 0.00ns
arrayctor.loop.i:99  %OP2_V_1_cast = sext i3 %p_kernel_val_1_V_0_read_1 to i11

ST_1: OP2_V_1_2_cast [1/1] 0.00ns
arrayctor.loop.i:100  %OP2_V_1_2_cast = sext i3 %p_kernel_val_1_V_2_read_1 to i11

ST_1: OP2_V_1_3_cast [1/1] 0.00ns
arrayctor.loop.i:101  %OP2_V_1_3_cast = sext i3 %p_kernel_val_1_V_3_read_1 to i11

ST_1: OP2_V_1_4_cast [1/1] 0.00ns
arrayctor.loop.i:102  %OP2_V_1_4_cast = sext i3 %p_kernel_val_1_V_4_read_1 to i11

ST_1: OP2_V_2_cast [1/1] 0.00ns
arrayctor.loop.i:103  %OP2_V_2_cast = sext i4 %p_kernel_val_2_V_0_read_1 to i12

ST_1: OP2_V_2_1_cast [1/1] 0.00ns
arrayctor.loop.i:104  %OP2_V_2_1_cast = sext i4 %p_kernel_val_2_V_1_read_1 to i12

ST_1: OP2_V_2_3_cast [1/1] 0.00ns
arrayctor.loop.i:105  %OP2_V_2_3_cast = sext i4 %p_kernel_val_2_V_3_read_1 to i12

ST_1: OP2_V_2_4_cast [1/1] 0.00ns
arrayctor.loop.i:106  %OP2_V_2_4_cast = sext i5 %p_kernel_val_2_V_4_read_1 to i13

ST_1: OP2_V_3_cast [1/1] 0.00ns
arrayctor.loop.i:107  %OP2_V_3_cast = sext i4 %p_kernel_val_3_V_0_read_1 to i12

ST_1: OP2_V_3_1_cast [1/1] 0.00ns
arrayctor.loop.i:108  %OP2_V_3_1_cast = sext i3 %p_kernel_val_3_V_1_read_1 to i11

ST_1: OP2_V_3_2_cast [1/1] 0.00ns
arrayctor.loop.i:109  %OP2_V_3_2_cast = sext i3 %p_kernel_val_3_V_2_read_1 to i11

ST_1: OP2_V_3_4_cast [1/1] 0.00ns
arrayctor.loop.i:110  %OP2_V_3_4_cast = sext i4 %p_kernel_val_3_V_4_read_1 to i12

ST_1: OP2_V_4_cast [1/1] 0.00ns
arrayctor.loop.i:111  %OP2_V_4_cast = sext i3 %p_kernel_val_4_V_0_read_1 to i11

ST_1: OP2_V_4_1_cast [1/1] 0.00ns
arrayctor.loop.i:112  %OP2_V_4_1_cast = sext i3 %p_kernel_val_4_V_1_read_1 to i11

ST_1: OP2_V_4_2_cast [1/1] 0.00ns
arrayctor.loop.i:113  %OP2_V_4_2_cast = sext i4 %p_kernel_val_4_V_2_read_1 to i12

ST_1: OP2_V_4_3_cast [1/1] 0.00ns
arrayctor.loop.i:114  %OP2_V_4_3_cast = sext i3 %p_kernel_val_4_V_3_read_1 to i11

ST_1: stg_130 [1/1] 1.57ns
arrayctor.loop.i:115  br label %0


 <State 2>: 6.72ns
ST_2: p_012_0_i [1/1] 0.00ns
:0  %p_012_0_i = phi i11 [ 0, %arrayctor.loop.i ], [ %i_V, %5 ]

ST_2: tmp_147_cast [1/1] 0.00ns
:1  %tmp_147_cast = zext i11 %p_012_0_i to i12

ST_2: tmp_70 [1/1] 2.11ns
:2  %tmp_70 = icmp ult i11 %p_012_0_i, %heightloop

ST_2: stg_134 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 17, i64 1089, i64 0)

ST_2: i_V [1/1] 1.84ns
:4  %i_V = add i11 %p_012_0_i, 1

ST_2: stg_136 [1/1] 0.00ns
:5  br i1 %tmp_70, label %1, label %"filter<0, 0, ap_int<8>, int, 1080, 1920, 5, 5>.exit"

ST_2: stg_137 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1819) nounwind

ST_2: tmp [1/1] 0.00ns
:1  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1819)

ST_2: tmp_71 [1/1] 2.11ns
:2  %tmp_71 = icmp ugt i11 %p_012_0_i, 8

ST_2: ImagLoc_y [1/1] 1.84ns
:3  %ImagLoc_y = add i12 %tmp_147_cast, -7

ST_2: tmp_72 [1/1] 2.14ns
:4  %tmp_72 = icmp slt i12 %ImagLoc_y, -2

ST_2: tmp_94 [1/1] 0.00ns
:5  %tmp_94 = call i10 @_ssdm_op_PartSelect.i10.i12.i32.i32(i12 %ImagLoc_y, i32 2, i32 11)

ST_2: icmp [1/1] 2.07ns
:6  %icmp = icmp sgt i10 %tmp_94, 0

ST_2: tmp_73 [1/1] 2.14ns
:7  %tmp_73 = icmp slt i12 %ImagLoc_y, %ref_cast

ST_2: or_cond6 [1/1] 1.37ns
:8  %or_cond6 = and i1 %icmp, %tmp_73

ST_2: tmp_95 [1/1] 0.00ns
:9  %tmp_95 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_y, i32 11)

ST_2: p_i [1/1] 1.37ns
:10  %p_i = select i1 %tmp_73, i11 4, i11 %ref

ST_2: tmp_96 [1/1] 0.00ns
:11  %tmp_96 = trunc i11 %p_i to i3

ST_2: ImagLoc_y_cast_cast [1/1] 0.00ns
:12  %ImagLoc_y_cast_cast = zext i12 %ImagLoc_y to i13

ST_2: y_2 [1/1] 1.84ns
:13  %y_2 = add i12 %tmp_147_cast, -8

ST_2: y_2_cast_cast [1/1] 0.00ns
:14  %y_2_cast_cast = sext i12 %y_2 to i13

ST_2: tmp_97 [1/1] 0.00ns
:15  %tmp_97 = trunc i11 %p_i to i3

ST_2: y_2_1 [1/1] 1.84ns
:16  %y_2_1 = add i12 %tmp_147_cast, -9

ST_2: y_2_1_cast_cast [1/1] 0.00ns
:17  %y_2_1_cast_cast = sext i12 %y_2_1 to i13

ST_2: y_2_2 [1/1] 1.84ns
:18  %y_2_2 = add i12 %tmp_147_cast, -10

ST_2: y_2_2_cast_cast [1/1] 0.00ns
:19  %y_2_2_cast_cast = sext i12 %y_2_2 to i13

ST_2: y_2_3 [1/1] 1.84ns
:20  %y_2_3 = add i12 %tmp_147_cast, -11

ST_2: y_2_3_cast_cast [1/1] 0.00ns
:21  %y_2_3_cast_cast = sext i12 %y_2_3 to i13

ST_2: brmerge [1/1] 1.37ns
:22  %brmerge = or i1 %tmp_72, %or_cond6

ST_2: stg_160 [1/1] 1.57ns
:23  br label %2

ST_2: stg_161 [1/1] 0.00ns
filter<0, 0, ap_int<8>, int, 1080, 1920, 5, 5>.exit:0  ret void


 <State 3>: 8.04ns
ST_3: p_025_0_i [1/1] 0.00ns
:0  %p_025_0_i = phi i11 [ 0, %1 ], [ %j_V, %._crit_edge245.i ]

ST_3: tmp_150_cast9 [1/1] 0.00ns
:6  %tmp_150_cast9 = zext i11 %p_025_0_i to i12

ST_3: tmp_74 [1/1] 2.11ns
:7  %tmp_74 = icmp ult i11 %p_025_0_i, %widthloop

ST_3: j_V [1/1] 1.84ns
:9  %j_V = add i11 %p_025_0_i, 1

ST_3: stg_166 [1/1] 0.00ns
:10  br i1 %tmp_74, label %.critedge.i, label %5

ST_3: tmp_98 [1/1] 0.00ns
.critedge.i:3  %tmp_98 = call i9 @_ssdm_op_PartSelect.i9.i11.i32.i32(i11 %p_025_0_i, i32 2, i32 10)

ST_3: icmp2 [1/1] 2.03ns
.critedge.i:4  %icmp2 = icmp ne i9 %tmp_98, 0

ST_3: or_cond221_i [1/1] 1.37ns
.critedge.i:5  %or_cond221_i = and i1 %tmp_71, %icmp2

ST_3: ImagLoc_x [1/1] 1.84ns
.critedge.i:7  %ImagLoc_x = add i12 %tmp_150_cast9, -2

ST_3: tmp_99 [1/1] 0.00ns
.critedge.i:8  %tmp_99 = trunc i12 %ImagLoc_x to i3

ST_3: ImagLoc_x_cast8_cast [1/1] 0.00ns
.critedge.i:9  %ImagLoc_x_cast8_cast = sext i12 %ImagLoc_x to i13

ST_3: x [3/3] 6.20ns
.critedge.i:10  %x = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_x_cast8_cast, i12 %p_src_cols_V_read_2, i4 4) nounwind

ST_3: stg_174 [1/1] 0.00ns
.critedge.i:25  br i1 %brmerge, label %._crit_edge234.i, label %._crit_edge235.i

ST_3: stg_175 [1/1] 0.00ns
._crit_edge235.i:0  br i1 %tmp_95, label %.loopexit224.i, label %._crit_edge243.i.0

ST_3: t_4 [3/3] 6.20ns
._crit_edge243.i.0:48  %t_4 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_3_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_3: tmp_101 [1/1] 0.00ns
._crit_edge234.i:0  %tmp_101 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_x, i32 11)

ST_3: rev [1/1] 1.37ns
._crit_edge234.i:1  %rev = xor i1 %tmp_101, true

ST_3: tmp_77 [1/1] 2.14ns
._crit_edge234.i:2  %tmp_77 = icmp slt i12 %ImagLoc_x, %p_src_cols_V_read_2

ST_3: or_cond7 [1/1] 1.37ns
._crit_edge234.i:3  %or_cond7 = and i1 %tmp_77, %rev

ST_3: stg_181 [1/1] 0.00ns
._crit_edge234.i:4  br i1 %or_cond7, label %3, label %._crit_edge238.i

ST_3: tmp_102 [1/1] 0.00ns
._crit_edge238.i:0  %tmp_102 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_x, i32 11)

ST_3: stg_183 [1/1] 0.00ns
._crit_edge238.i:1  br i1 %tmp_102, label %.loopexit224.i.pre, label %4

ST_3: stg_184 [1/1] 0.00ns
:0  br i1 %tmp_77, label %.loopexit224.i, label %.preheader.preheader.i

ST_3: tmp_78 [1/1] 2.14ns
:0  %tmp_78 = icmp slt i12 %ImagLoc_x, %tmp_146_cast

ST_3: stg_186 [1/1] 0.00ns
:1  br i1 %tmp_78, label %._crit_edge241.i.1.critedge.critedge, label %"operator().exit290.i"

ST_3: col_assign [1/1] 0.80ns
operator().exit290.i:0  %col_assign = add i3 %tmp_99, %tmp_91

ST_3: stg_188 [1/1] 1.88ns
operator().exit290.i:1  switch i3 %col_assign, label %branch34 [
    i3 0, label %branch30
    i3 1, label %branch31
    i3 2, label %branch32
    i3 3, label %branch33
  ]

ST_3: stg_189 [1/1] 0.00ns
._crit_edge241.i.1:1  br i1 %tmp_78, label %._crit_edge241.i.3.critedge, label %"operator().exit288.i.2_ifconv"

ST_3: col_assign_9_2 [1/1] 1.84ns
operator().exit288.i.2_ifconv:5  %col_assign_9_2 = add i12 %ImagLoc_x, %p_neg228_i

ST_3: tmp_108 [1/1] 0.00ns
operator().exit288.i.2_ifconv:6  %tmp_108 = trunc i12 %col_assign_9_2 to i3


 <State 4>: 8.25ns
ST_4: x [2/3] 8.25ns
.critedge.i:10  %x = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_x_cast8_cast, i12 %p_src_cols_V_read_2, i4 4) nounwind

ST_4: t_4 [2/3] 8.25ns
._crit_edge243.i.0:48  %t_4 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_3_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind


 <State 5>: 8.22ns
ST_5: x [1/3] 8.22ns
.critedge.i:10  %x = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_x_cast8_cast, i12 %p_src_cols_V_read_2, i4 4) nounwind

ST_5: tmp_100 [1/1] 0.00ns
.critedge.i:12  %tmp_100 = trunc i15 %x to i3

ST_5: t [3/3] 6.20ns
._crit_edge243.i.0:0  %t = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_y_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_5: t_1 [3/3] 6.20ns
._crit_edge243.i.0:12  %t_1 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_5: t_2 [3/3] 6.20ns
._crit_edge243.i.0:24  %t_2 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_1_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_5: t_3 [3/3] 6.20ns
._crit_edge243.i.0:36  %t_3 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_2_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_5: t_4 [1/3] 8.22ns
._crit_edge243.i.0:48  %t_4 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_3_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_5: tmp_107 [1/1] 0.00ns
._crit_edge243.i.0:49  %tmp_107 = trunc i15 %t_4 to i3


 <State 6>: 8.25ns
ST_6: x_2 [1/1] 0.00ns
.critedge.i:11  %x_2 = sext i15 %x to i32

ST_6: tmp_76 [1/1] 0.00ns
.critedge.i:13  %tmp_76 = zext i32 %x_2 to i64

ST_6: k_buf_0_val_0_addr [1/1] 0.00ns
.critedge.i:14  %k_buf_0_val_0_addr = getelementptr [1920 x i8]* %k_buf_0_val_0, i64 0, i64 %tmp_76

ST_6: right_border_buf_0_val_4_0 [2/2] 2.39ns
.critedge.i:15  %right_border_buf_0_val_4_0 = load i8* %k_buf_0_val_0_addr, align 1

ST_6: k_buf_0_val_1_addr [1/1] 0.00ns
.critedge.i:17  %k_buf_0_val_1_addr = getelementptr [1920 x i8]* %k_buf_0_val_1, i64 0, i64 %tmp_76

ST_6: right_border_buf_0_val_3_0 [2/2] 2.39ns
.critedge.i:18  %right_border_buf_0_val_3_0 = load i8* %k_buf_0_val_1_addr, align 1

ST_6: k_buf_0_val_2_addr [1/1] 0.00ns
.critedge.i:19  %k_buf_0_val_2_addr = getelementptr [1920 x i8]* %k_buf_0_val_2, i64 0, i64 %tmp_76

ST_6: right_border_buf_0_val_2_0 [2/2] 2.39ns
.critedge.i:20  %right_border_buf_0_val_2_0 = load i8* %k_buf_0_val_2_addr, align 1

ST_6: k_buf_0_val_3_addr [1/1] 0.00ns
.critedge.i:21  %k_buf_0_val_3_addr = getelementptr [1920 x i8]* %k_buf_0_val_3, i64 0, i64 %tmp_76

ST_6: right_border_buf_0_val_1_0 [2/2] 2.39ns
.critedge.i:22  %right_border_buf_0_val_1_0 = load i8* %k_buf_0_val_3_addr, align 1

ST_6: k_buf_0_val_4_addr [1/1] 0.00ns
.critedge.i:23  %k_buf_0_val_4_addr = getelementptr [1920 x i8]* %k_buf_0_val_4, i64 0, i64 %tmp_76

ST_6: src_kernel_win_0_val_4_0 [2/2] 2.39ns
.critedge.i:24  %src_kernel_win_0_val_4_0 = load i8* %k_buf_0_val_4_addr, align 1

ST_6: t [2/3] 8.25ns
._crit_edge243.i.0:0  %t = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_y_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_6: t_1 [2/3] 8.25ns
._crit_edge243.i.0:12  %t_1 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_6: t_2 [2/3] 8.25ns
._crit_edge243.i.0:24  %t_2 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_1_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_6: t_3 [2/3] 8.25ns
._crit_edge243.i.0:36  %t_3 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_2_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_6: locy_4_t [1/1] 0.80ns
._crit_edge243.i.0:50  %locy_4_t = sub i3 %tmp_97, %tmp_107

ST_6: stg_219 [1/1] 1.88ns
._crit_edge243.i.0:51  switch i3 %locy_4_t, label %branch24 [
    i3 0, label %branch20
    i3 1, label %.loopexit224.i.pre263
    i3 2, label %branch22
    i3 3, label %branch23
  ]

ST_6: stg_220 [1/1] 0.00ns
branch23:5  br label %.loopexit224.i

ST_6: stg_221 [1/1] 0.00ns
branch22:5  br label %.loopexit224.i

ST_6: stg_222 [1/1] 0.00ns
.loopexit224.i.pre263:5  br label %.loopexit224.i

ST_6: stg_223 [1/1] 0.00ns
branch20:6  br label %.loopexit224.i

ST_6: stg_224 [1/1] 0.00ns
branch24:5  br label %.loopexit224.i

ST_6: col_assign_4 [1/1] 0.80ns
.preheader.preheader.i:20  %col_assign_4 = add i3 %tmp_100, %tmp_91

ST_6: stg_226 [1/1] 0.00ns
branch28:6  br label %.loopexit224.i

ST_6: stg_227 [1/1] 0.00ns
branch27:6  br label %.loopexit224.i

ST_6: stg_228 [1/1] 0.00ns
branch26:6  br label %.loopexit224.i

ST_6: stg_229 [1/1] 0.00ns
branch25:6  br label %.loopexit224.i

ST_6: stg_230 [1/1] 0.00ns
branch29:6  br label %.loopexit224.i

ST_6: stg_231 [1/1] 0.00ns
.loopexit224.i.pre:5  br label %.loopexit224.i

ST_6: stg_232 [1/1] 0.00ns
._crit_edge241.i.3:7  br label %.loopexit224.i


 <State 7>: 8.22ns
ST_7: stg_233 [1/1] 0.00ns
.critedge.i:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1820) nounwind

ST_7: tmp_75 [1/1] 0.00ns
.critedge.i:1  %tmp_75 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1820)

ST_7: stg_235 [1/1] 0.00ns
.critedge.i:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_7: stg_236 [1/1] 0.00ns
.critedge.i:6  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1833) nounwind

ST_7: right_border_buf_0_val_4_0 [1/2] 2.39ns
.critedge.i:15  %right_border_buf_0_val_4_0 = load i8* %k_buf_0_val_0_addr, align 1

ST_7: stg_238 [1/1] 0.00ns
.critedge.i:16  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0, align 1

ST_7: right_border_buf_0_val_3_0 [1/2] 2.39ns
.critedge.i:18  %right_border_buf_0_val_3_0 = load i8* %k_buf_0_val_1_addr, align 1

ST_7: right_border_buf_0_val_2_0 [1/2] 2.39ns
.critedge.i:20  %right_border_buf_0_val_2_0 = load i8* %k_buf_0_val_2_addr, align 1

ST_7: right_border_buf_0_val_1_0 [1/2] 2.39ns
.critedge.i:22  %right_border_buf_0_val_1_0 = load i8* %k_buf_0_val_3_addr, align 1

ST_7: src_kernel_win_0_val_4_0 [1/2] 2.39ns
.critedge.i:24  %src_kernel_win_0_val_4_0 = load i8* %k_buf_0_val_4_addr, align 1

ST_7: t [1/3] 8.22ns
._crit_edge243.i.0:0  %t = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_y_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_7: tmp_103 [1/1] 0.00ns
._crit_edge243.i.0:1  %tmp_103 = trunc i15 %t to i3

ST_7: t_1 [1/3] 8.22ns
._crit_edge243.i.0:12  %t_1 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_7: tmp_104 [1/1] 0.00ns
._crit_edge243.i.0:13  %tmp_104 = trunc i15 %t_1 to i3

ST_7: t_2 [1/3] 8.22ns
._crit_edge243.i.0:24  %t_2 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_1_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_7: tmp_105 [1/1] 0.00ns
._crit_edge243.i.0:25  %tmp_105 = trunc i15 %t_2 to i3

ST_7: t_3 [1/3] 8.22ns
._crit_edge243.i.0:36  %t_3 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_2_2_cast_cast, i12 %p_src_rows_V_read_2, i4 4) nounwind

ST_7: tmp_106 [1/1] 0.00ns
._crit_edge243.i.0:37  %tmp_106 = trunc i15 %t_3 to i3

ST_7: stg_251 [1/1] 0.00ns
branch33:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_3, align 1

ST_7: stg_252 [1/1] 0.00ns
branch33:1  br label %"operator().exit290.i694"

ST_7: stg_253 [1/1] 0.00ns
branch32:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_2, align 1

ST_7: stg_254 [1/1] 0.00ns
branch32:1  br label %"operator().exit290.i694"

ST_7: stg_255 [1/1] 0.00ns
branch31:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_1, align 1

ST_7: stg_256 [1/1] 0.00ns
branch31:1  br label %"operator().exit290.i694"

ST_7: stg_257 [1/1] 0.00ns
branch30:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_0, align 1

ST_7: stg_258 [1/1] 0.00ns
branch30:1  br label %"operator().exit290.i694"

ST_7: stg_259 [1/1] 0.00ns
branch34:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_4, align 1

ST_7: stg_260 [1/1] 0.00ns
branch34:1  br label %"operator().exit290.i694"

ST_7: right_border_buf_0_val_1_4_s [1/1] 0.00ns
operator().exit290.i694:0  %right_border_buf_0_val_1_4_s = load i8* %right_border_buf_0_val_1_4_28, align 1

ST_7: right_border_buf_0_val_1_4_10 [1/1] 0.00ns
operator().exit290.i694:1  %right_border_buf_0_val_1_4_10 = load i8* %right_border_buf_0_val_1_4_29, align 1

ST_7: right_border_buf_0_val_1_4_11 [1/1] 0.00ns
operator().exit290.i694:2  %right_border_buf_0_val_1_4_11 = load i8* %right_border_buf_0_val_1_4_30, align 1

ST_7: right_border_buf_0_val_1_4_12 [1/1] 0.00ns
operator().exit290.i694:3  %right_border_buf_0_val_1_4_12 = load i8* %right_border_buf_0_val_1_4_31, align 1

ST_7: right_border_buf_0_val_1_4_13 [1/1] 0.00ns
operator().exit290.i694:4  %right_border_buf_0_val_1_4_13 = load i8* %right_border_buf_0_val_1_4_32, align 1

ST_7: stg_266 [1/1] 2.39ns
operator().exit290.i694:5  store i8 %right_border_buf_0_val_1_0, i8* %k_buf_0_val_4_addr, align 1

ST_7: sel_tmp61 [1/1] 1.62ns
operator().exit290.i694:6  %sel_tmp61 = icmp eq i3 %col_assign, 3

ST_7: right_border_buf_0_val_1_4_37 [1/1] 1.37ns
operator().exit290.i694:7  %right_border_buf_0_val_1_4_37 = select i1 %sel_tmp61, i8 %right_border_buf_0_val_1_4_13, i8 %right_border_buf_0_val_1_0

ST_7: sel_tmp62 [1/1] 1.62ns
operator().exit290.i694:8  %sel_tmp62 = icmp eq i3 %col_assign, 2

ST_7: right_border_buf_0_val_1_4_38 [1/1] 1.37ns
operator().exit290.i694:9  %right_border_buf_0_val_1_4_38 = select i1 %sel_tmp62, i8 %right_border_buf_0_val_1_4_13, i8 %right_border_buf_0_val_1_4_37

ST_7: sel_tmp63 [1/1] 1.62ns
operator().exit290.i694:10  %sel_tmp63 = icmp eq i3 %col_assign, 1

ST_7: right_border_buf_0_val_1_4_39 [1/1] 1.37ns
operator().exit290.i694:11  %right_border_buf_0_val_1_4_39 = select i1 %sel_tmp63, i8 %right_border_buf_0_val_1_4_13, i8 %right_border_buf_0_val_1_4_38

ST_7: sel_tmp65 [1/1] 1.62ns
operator().exit290.i694:12  %sel_tmp65 = icmp eq i3 %col_assign, 0

ST_7: right_border_buf_0_val_1_4_40 [1/1] 1.37ns
operator().exit290.i694:13  %right_border_buf_0_val_1_4_40 = select i1 %sel_tmp65, i8 %right_border_buf_0_val_1_4_13, i8 %right_border_buf_0_val_1_4_39

ST_7: right_border_buf_0_val_1_4_41 [1/1] 1.37ns
operator().exit290.i694:14  %right_border_buf_0_val_1_4_41 = select i1 %sel_tmp61, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_12

ST_7: right_border_buf_0_val_1_4_43 [1/1] 1.37ns
operator().exit290.i694:15  %right_border_buf_0_val_1_4_43 = select i1 %sel_tmp62, i8 %right_border_buf_0_val_1_4_12, i8 %right_border_buf_0_val_1_4_41

ST_7: right_border_buf_0_val_1_4_49 [1/1] 1.37ns
operator().exit290.i694:16  %right_border_buf_0_val_1_4_49 = select i1 %sel_tmp63, i8 %right_border_buf_0_val_1_4_12, i8 %right_border_buf_0_val_1_4_43

ST_7: right_border_buf_0_val_1_4_50 [1/1] 1.37ns
operator().exit290.i694:17  %right_border_buf_0_val_1_4_50 = select i1 %sel_tmp65, i8 %right_border_buf_0_val_1_4_12, i8 %right_border_buf_0_val_1_4_49

ST_7: right_border_buf_0_val_1_4_51 [1/1] 1.37ns
operator().exit290.i694:18  %right_border_buf_0_val_1_4_51 = select i1 %sel_tmp62, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_11

ST_7: right_border_buf_0_val_1_4_52 [1/1] 1.37ns
operator().exit290.i694:19  %right_border_buf_0_val_1_4_52 = select i1 %sel_tmp63, i8 %right_border_buf_0_val_1_4_11, i8 %right_border_buf_0_val_1_4_51

ST_7: right_border_buf_0_val_1_4_53 [1/1] 1.37ns
operator().exit290.i694:20  %right_border_buf_0_val_1_4_53 = select i1 %sel_tmp65, i8 %right_border_buf_0_val_1_4_11, i8 %right_border_buf_0_val_1_4_52

ST_7: right_border_buf_0_val_1_4_54 [1/1] 1.37ns
operator().exit290.i694:21  %right_border_buf_0_val_1_4_54 = select i1 %sel_tmp63, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_10

ST_7: right_border_buf_0_val_1_4_55 [1/1] 1.37ns
operator().exit290.i694:22  %right_border_buf_0_val_1_4_55 = select i1 %sel_tmp65, i8 %right_border_buf_0_val_1_4_10, i8 %right_border_buf_0_val_1_4_54

ST_7: right_border_buf_0_val_1_4_56 [1/1] 1.37ns
operator().exit290.i694:23  %right_border_buf_0_val_1_4_56 = select i1 %sel_tmp65, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_s

ST_7: stg_285 [1/1] 2.39ns
operator().exit290.i694:24  store i8 %right_border_buf_0_val_2_0, i8* %k_buf_0_val_3_addr, align 1

ST_7: stg_286 [1/1] 1.88ns
operator().exit290.i694:25  switch i3 %col_assign, label %branch54 [
    i3 0, label %._crit_edge241.i.1.pre
    i3 1, label %branch51
    i3 2, label %branch52
    i3 3, label %branch53
  ]

ST_7: stg_287 [1/1] 0.00ns
branch53:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_17, align 1

ST_7: stg_288 [1/1] 0.00ns
branch53:1  store i8 %right_border_buf_0_val_1_4_40, i8* %right_border_buf_0_val_1_4_32, align 1

ST_7: stg_289 [1/1] 0.00ns
branch53:2  store i8 %right_border_buf_0_val_1_4_50, i8* %right_border_buf_0_val_1_4_31, align 1

ST_7: stg_290 [1/1] 0.00ns
branch53:3  store i8 %right_border_buf_0_val_1_4_53, i8* %right_border_buf_0_val_1_4_30, align 1

ST_7: stg_291 [1/1] 0.00ns
branch53:4  store i8 %right_border_buf_0_val_1_4_55, i8* %right_border_buf_0_val_1_4_29, align 1

ST_7: stg_292 [1/1] 0.00ns
branch53:5  store i8 %right_border_buf_0_val_1_4_56, i8* %right_border_buf_0_val_1_4_28, align 1

ST_7: stg_293 [1/1] 0.00ns
branch53:6  br label %._crit_edge241.i.1

ST_7: stg_294 [1/1] 0.00ns
branch52:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_16, align 1

ST_7: stg_295 [1/1] 0.00ns
branch52:1  store i8 %right_border_buf_0_val_1_4_40, i8* %right_border_buf_0_val_1_4_32, align 1

ST_7: stg_296 [1/1] 0.00ns
branch52:2  store i8 %right_border_buf_0_val_1_4_50, i8* %right_border_buf_0_val_1_4_31, align 1

ST_7: stg_297 [1/1] 0.00ns
branch52:3  store i8 %right_border_buf_0_val_1_4_53, i8* %right_border_buf_0_val_1_4_30, align 1

ST_7: stg_298 [1/1] 0.00ns
branch52:4  store i8 %right_border_buf_0_val_1_4_55, i8* %right_border_buf_0_val_1_4_29, align 1

ST_7: stg_299 [1/1] 0.00ns
branch52:5  store i8 %right_border_buf_0_val_1_4_56, i8* %right_border_buf_0_val_1_4_28, align 1

ST_7: stg_300 [1/1] 0.00ns
branch52:6  br label %._crit_edge241.i.1

ST_7: stg_301 [1/1] 0.00ns
branch51:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_15, align 1

ST_7: stg_302 [1/1] 0.00ns
branch51:1  store i8 %right_border_buf_0_val_1_4_40, i8* %right_border_buf_0_val_1_4_32, align 1

ST_7: stg_303 [1/1] 0.00ns
branch51:2  store i8 %right_border_buf_0_val_1_4_50, i8* %right_border_buf_0_val_1_4_31, align 1

ST_7: stg_304 [1/1] 0.00ns
branch51:3  store i8 %right_border_buf_0_val_1_4_53, i8* %right_border_buf_0_val_1_4_30, align 1

ST_7: stg_305 [1/1] 0.00ns
branch51:4  store i8 %right_border_buf_0_val_1_4_55, i8* %right_border_buf_0_val_1_4_29, align 1

ST_7: stg_306 [1/1] 0.00ns
branch51:5  store i8 %right_border_buf_0_val_1_4_56, i8* %right_border_buf_0_val_1_4_28, align 1

ST_7: stg_307 [1/1] 0.00ns
branch51:6  br label %._crit_edge241.i.1

ST_7: stg_308 [1/1] 0.00ns
._crit_edge241.i.1.pre:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_14, align 1

ST_7: stg_309 [1/1] 0.00ns
._crit_edge241.i.1.pre:1  store i8 %right_border_buf_0_val_1_4_40, i8* %right_border_buf_0_val_1_4_32, align 1

ST_7: stg_310 [1/1] 0.00ns
._crit_edge241.i.1.pre:2  store i8 %right_border_buf_0_val_1_4_50, i8* %right_border_buf_0_val_1_4_31, align 1

ST_7: stg_311 [1/1] 0.00ns
._crit_edge241.i.1.pre:3  store i8 %right_border_buf_0_val_1_4_53, i8* %right_border_buf_0_val_1_4_30, align 1

ST_7: stg_312 [1/1] 0.00ns
._crit_edge241.i.1.pre:4  store i8 %right_border_buf_0_val_1_4_55, i8* %right_border_buf_0_val_1_4_29, align 1

ST_7: stg_313 [1/1] 0.00ns
._crit_edge241.i.1.pre:5  store i8 %right_border_buf_0_val_1_4_56, i8* %right_border_buf_0_val_1_4_28, align 1

ST_7: stg_314 [1/1] 0.00ns
._crit_edge241.i.1.pre:6  br label %._crit_edge241.i.1

ST_7: stg_315 [1/1] 0.00ns
branch54:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_18, align 1

ST_7: stg_316 [1/1] 0.00ns
branch54:1  store i8 %right_border_buf_0_val_1_4_40, i8* %right_border_buf_0_val_1_4_32, align 1

ST_7: stg_317 [1/1] 0.00ns
branch54:2  store i8 %right_border_buf_0_val_1_4_50, i8* %right_border_buf_0_val_1_4_31, align 1

ST_7: stg_318 [1/1] 0.00ns
branch54:3  store i8 %right_border_buf_0_val_1_4_53, i8* %right_border_buf_0_val_1_4_30, align 1

ST_7: stg_319 [1/1] 0.00ns
branch54:4  store i8 %right_border_buf_0_val_1_4_55, i8* %right_border_buf_0_val_1_4_29, align 1

ST_7: stg_320 [1/1] 0.00ns
branch54:5  store i8 %right_border_buf_0_val_1_4_56, i8* %right_border_buf_0_val_1_4_28, align 1

ST_7: stg_321 [1/1] 0.00ns
branch54:6  br label %._crit_edge241.i.1

ST_7: stg_322 [1/1] 2.39ns
._crit_edge241.i.1.critedge.critedge:0  store i8 %right_border_buf_0_val_1_0, i8* %k_buf_0_val_4_addr, align 1

ST_7: stg_323 [1/1] 2.39ns
._crit_edge241.i.1.critedge.critedge:1  store i8 %right_border_buf_0_val_2_0, i8* %k_buf_0_val_3_addr, align 1

ST_7: stg_324 [1/1] 0.00ns
._crit_edge241.i.1.critedge.critedge:2  br label %._crit_edge241.i.1

ST_7: stg_325 [1/1] 2.39ns
._crit_edge241.i.1:0  store i8 %right_border_buf_0_val_3_0, i8* %k_buf_0_val_2_addr, align 1

ST_7: right_border_buf_0_val_3_4_s [1/1] 0.00ns
operator().exit288.i.2_ifconv:0  %right_border_buf_0_val_3_4_s = load i8* %right_border_buf_0_val_3_4_28, align 1

ST_7: right_border_buf_0_val_3_4_10 [1/1] 0.00ns
operator().exit288.i.2_ifconv:1  %right_border_buf_0_val_3_4_10 = load i8* %right_border_buf_0_val_3_4_29, align 1

ST_7: right_border_buf_0_val_3_4_11 [1/1] 0.00ns
operator().exit288.i.2_ifconv:2  %right_border_buf_0_val_3_4_11 = load i8* %right_border_buf_0_val_3_4_30, align 1

ST_7: right_border_buf_0_val_3_4_12 [1/1] 0.00ns
operator().exit288.i.2_ifconv:3  %right_border_buf_0_val_3_4_12 = load i8* %right_border_buf_0_val_3_4_31, align 1

ST_7: right_border_buf_0_val_3_4_13 [1/1] 0.00ns
operator().exit288.i.2_ifconv:4  %right_border_buf_0_val_3_4_13 = load i8* %right_border_buf_0_val_3_4_32, align 1

ST_7: sel_tmp64 [1/1] 1.62ns
operator().exit288.i.2_ifconv:7  %sel_tmp64 = icmp eq i3 %tmp_108, 3

ST_7: right_border_buf_0_val_3_4_37 [1/1] 1.37ns
operator().exit288.i.2_ifconv:8  %right_border_buf_0_val_3_4_37 = select i1 %sel_tmp64, i8 %right_border_buf_0_val_3_4_13, i8 %right_border_buf_0_val_3_0

ST_7: sel_tmp66 [1/1] 1.62ns
operator().exit288.i.2_ifconv:9  %sel_tmp66 = icmp eq i3 %tmp_108, 2

ST_7: right_border_buf_0_val_3_4_38 [1/1] 1.37ns
operator().exit288.i.2_ifconv:10  %right_border_buf_0_val_3_4_38 = select i1 %sel_tmp66, i8 %right_border_buf_0_val_3_4_13, i8 %right_border_buf_0_val_3_4_37

ST_7: sel_tmp67 [1/1] 1.62ns
operator().exit288.i.2_ifconv:11  %sel_tmp67 = icmp eq i3 %tmp_108, 1

ST_7: right_border_buf_0_val_3_4_39 [1/1] 1.37ns
operator().exit288.i.2_ifconv:12  %right_border_buf_0_val_3_4_39 = select i1 %sel_tmp67, i8 %right_border_buf_0_val_3_4_13, i8 %right_border_buf_0_val_3_4_38

ST_7: sel_tmp68 [1/1] 1.62ns
operator().exit288.i.2_ifconv:13  %sel_tmp68 = icmp eq i3 %tmp_108, 0

ST_7: right_border_buf_0_val_3_4_40 [1/1] 1.37ns
operator().exit288.i.2_ifconv:14  %right_border_buf_0_val_3_4_40 = select i1 %sel_tmp68, i8 %right_border_buf_0_val_3_4_13, i8 %right_border_buf_0_val_3_4_39

ST_7: right_border_buf_0_val_3_4_41 [1/1] 1.37ns
operator().exit288.i.2_ifconv:15  %right_border_buf_0_val_3_4_41 = select i1 %sel_tmp64, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_12

ST_7: right_border_buf_0_val_3_4_43 [1/1] 1.37ns
operator().exit288.i.2_ifconv:16  %right_border_buf_0_val_3_4_43 = select i1 %sel_tmp66, i8 %right_border_buf_0_val_3_4_12, i8 %right_border_buf_0_val_3_4_41

ST_7: right_border_buf_0_val_3_4_49 [1/1] 1.37ns
operator().exit288.i.2_ifconv:17  %right_border_buf_0_val_3_4_49 = select i1 %sel_tmp67, i8 %right_border_buf_0_val_3_4_12, i8 %right_border_buf_0_val_3_4_43

ST_7: right_border_buf_0_val_3_4_50 [1/1] 1.37ns
operator().exit288.i.2_ifconv:18  %right_border_buf_0_val_3_4_50 = select i1 %sel_tmp68, i8 %right_border_buf_0_val_3_4_12, i8 %right_border_buf_0_val_3_4_49

ST_7: right_border_buf_0_val_3_4_51 [1/1] 1.37ns
operator().exit288.i.2_ifconv:19  %right_border_buf_0_val_3_4_51 = select i1 %sel_tmp66, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_11

ST_7: right_border_buf_0_val_3_4_52 [1/1] 1.37ns
operator().exit288.i.2_ifconv:20  %right_border_buf_0_val_3_4_52 = select i1 %sel_tmp67, i8 %right_border_buf_0_val_3_4_11, i8 %right_border_buf_0_val_3_4_51

ST_7: right_border_buf_0_val_3_4_53 [1/1] 1.37ns
operator().exit288.i.2_ifconv:21  %right_border_buf_0_val_3_4_53 = select i1 %sel_tmp68, i8 %right_border_buf_0_val_3_4_11, i8 %right_border_buf_0_val_3_4_52

ST_7: right_border_buf_0_val_3_4_54 [1/1] 1.37ns
operator().exit288.i.2_ifconv:22  %right_border_buf_0_val_3_4_54 = select i1 %sel_tmp67, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_10

ST_7: right_border_buf_0_val_3_4_55 [1/1] 1.37ns
operator().exit288.i.2_ifconv:23  %right_border_buf_0_val_3_4_55 = select i1 %sel_tmp68, i8 %right_border_buf_0_val_3_4_10, i8 %right_border_buf_0_val_3_4_54

ST_7: right_border_buf_0_val_3_4_56 [1/1] 1.37ns
operator().exit288.i.2_ifconv:24  %right_border_buf_0_val_3_4_56 = select i1 %sel_tmp68, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_s

ST_7: stg_349 [1/1] 2.39ns
operator().exit288.i.2_ifconv:25  store i8 %right_border_buf_0_val_4_0, i8* %k_buf_0_val_1_addr, align 1

ST_7: stg_350 [1/1] 1.88ns
operator().exit288.i.2_ifconv:26  switch i3 %tmp_108, label %branch74 [
    i3 0, label %._crit_edge241.i.3.pre
    i3 1, label %branch71
    i3 2, label %branch72
    i3 3, label %branch73
  ]

ST_7: stg_351 [1/1] 0.00ns
branch73:0  store i8 %right_border_buf_0_val_3_4_40, i8* %right_border_buf_0_val_3_4_32, align 1

ST_7: stg_352 [1/1] 0.00ns
branch73:1  store i8 %right_border_buf_0_val_3_4_50, i8* %right_border_buf_0_val_3_4_31, align 1

ST_7: stg_353 [1/1] 0.00ns
branch73:2  store i8 %right_border_buf_0_val_3_4_53, i8* %right_border_buf_0_val_3_4_30, align 1

ST_7: stg_354 [1/1] 0.00ns
branch73:3  store i8 %right_border_buf_0_val_3_4_55, i8* %right_border_buf_0_val_3_4_29, align 1

ST_7: stg_355 [1/1] 0.00ns
branch73:4  store i8 %right_border_buf_0_val_3_4_56, i8* %right_border_buf_0_val_3_4_28, align 1

ST_7: stg_356 [1/1] 0.00ns
branch73:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_18, align 1

ST_7: stg_357 [1/1] 0.00ns
branch73:6  br label %._crit_edge241.i.3

ST_7: stg_358 [1/1] 0.00ns
branch72:0  store i8 %right_border_buf_0_val_3_4_40, i8* %right_border_buf_0_val_3_4_32, align 1

ST_7: stg_359 [1/1] 0.00ns
branch72:1  store i8 %right_border_buf_0_val_3_4_50, i8* %right_border_buf_0_val_3_4_31, align 1

ST_7: stg_360 [1/1] 0.00ns
branch72:2  store i8 %right_border_buf_0_val_3_4_53, i8* %right_border_buf_0_val_3_4_30, align 1

ST_7: stg_361 [1/1] 0.00ns
branch72:3  store i8 %right_border_buf_0_val_3_4_55, i8* %right_border_buf_0_val_3_4_29, align 1

ST_7: stg_362 [1/1] 0.00ns
branch72:4  store i8 %right_border_buf_0_val_3_4_56, i8* %right_border_buf_0_val_3_4_28, align 1

ST_7: stg_363 [1/1] 0.00ns
branch72:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_19, align 1

ST_7: stg_364 [1/1] 0.00ns
branch72:6  br label %._crit_edge241.i.3

ST_7: stg_365 [1/1] 0.00ns
branch71:0  store i8 %right_border_buf_0_val_3_4_40, i8* %right_border_buf_0_val_3_4_32, align 1

ST_7: stg_366 [1/1] 0.00ns
branch71:1  store i8 %right_border_buf_0_val_3_4_50, i8* %right_border_buf_0_val_3_4_31, align 1

ST_7: stg_367 [1/1] 0.00ns
branch71:2  store i8 %right_border_buf_0_val_3_4_53, i8* %right_border_buf_0_val_3_4_30, align 1

ST_7: stg_368 [1/1] 0.00ns
branch71:3  store i8 %right_border_buf_0_val_3_4_55, i8* %right_border_buf_0_val_3_4_29, align 1

ST_7: stg_369 [1/1] 0.00ns
branch71:4  store i8 %right_border_buf_0_val_3_4_56, i8* %right_border_buf_0_val_3_4_28, align 1

ST_7: stg_370 [1/1] 0.00ns
branch71:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_20, align 1

ST_7: stg_371 [1/1] 0.00ns
branch71:6  br label %._crit_edge241.i.3

ST_7: stg_372 [1/1] 0.00ns
._crit_edge241.i.3.pre:0  store i8 %right_border_buf_0_val_3_4_40, i8* %right_border_buf_0_val_3_4_32, align 1

ST_7: stg_373 [1/1] 0.00ns
._crit_edge241.i.3.pre:1  store i8 %right_border_buf_0_val_3_4_50, i8* %right_border_buf_0_val_3_4_31, align 1

ST_7: stg_374 [1/1] 0.00ns
._crit_edge241.i.3.pre:2  store i8 %right_border_buf_0_val_3_4_53, i8* %right_border_buf_0_val_3_4_30, align 1

ST_7: stg_375 [1/1] 0.00ns
._crit_edge241.i.3.pre:3  store i8 %right_border_buf_0_val_3_4_55, i8* %right_border_buf_0_val_3_4_29, align 1

ST_7: stg_376 [1/1] 0.00ns
._crit_edge241.i.3.pre:4  store i8 %right_border_buf_0_val_3_4_56, i8* %right_border_buf_0_val_3_4_28, align 1

ST_7: stg_377 [1/1] 0.00ns
._crit_edge241.i.3.pre:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_21, align 1

ST_7: stg_378 [1/1] 0.00ns
._crit_edge241.i.3.pre:6  br label %._crit_edge241.i.3

ST_7: stg_379 [1/1] 0.00ns
branch74:0  store i8 %right_border_buf_0_val_3_4_40, i8* %right_border_buf_0_val_3_4_32, align 1

ST_7: stg_380 [1/1] 0.00ns
branch74:1  store i8 %right_border_buf_0_val_3_4_50, i8* %right_border_buf_0_val_3_4_31, align 1

ST_7: stg_381 [1/1] 0.00ns
branch74:2  store i8 %right_border_buf_0_val_3_4_53, i8* %right_border_buf_0_val_3_4_30, align 1

ST_7: stg_382 [1/1] 0.00ns
branch74:3  store i8 %right_border_buf_0_val_3_4_55, i8* %right_border_buf_0_val_3_4_29, align 1

ST_7: stg_383 [1/1] 0.00ns
branch74:4  store i8 %right_border_buf_0_val_3_4_56, i8* %right_border_buf_0_val_3_4_28, align 1

ST_7: stg_384 [1/1] 0.00ns
branch74:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_17, align 1

ST_7: stg_385 [1/1] 0.00ns
branch74:6  br label %._crit_edge241.i.3

ST_7: stg_386 [1/1] 2.39ns
._crit_edge241.i.3.critedge:0  store i8 %right_border_buf_0_val_4_0, i8* %k_buf_0_val_1_addr, align 1

ST_7: stg_387 [1/1] 0.00ns
._crit_edge241.i.3.critedge:1  br label %._crit_edge241.i.3

ST_7: tmp_113 [1/1] 1.70ns
._crit_edge241.i.3:0  %tmp_113 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %p_src_data_stream_V)

ST_7: stg_389 [1/1] 2.39ns
._crit_edge241.i.3:1  store i8 %tmp_113, i8* %k_buf_0_val_0_addr, align 1

ST_7: stg_390 [1/1] 0.00ns
.loopexit224.i:0  br i1 %or_cond221_i, label %.preheader, label %._crit_edge245.i


 <State 8>: 8.67ns
ST_8: src_kernel_win_0_val_0_1_12 [1/1] 0.00ns
:1  %src_kernel_win_0_val_0_1_12 = load i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_1_1_12 [1/1] 0.00ns
:2  %src_kernel_win_0_val_1_1_12 = load i8* %src_kernel_win_0_val_1_1, align 1

ST_8: src_kernel_win_0_val_2_1_12 [1/1] 0.00ns
:3  %src_kernel_win_0_val_2_1_12 = load i8* %src_kernel_win_0_val_2_1, align 1

ST_8: src_kernel_win_0_val_4_1_26 [1/1] 0.00ns
:4  %src_kernel_win_0_val_4_1_26 = load i8* %src_kernel_win_0_val_4_1, align 1

ST_8: src_kernel_win_0_val_3_1_12 [1/1] 0.00ns
:5  %src_kernel_win_0_val_3_1_12 = load i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_396 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 12, i64 1924, i64 0)

ST_8: locy [1/1] 0.80ns
._crit_edge243.i.0:2  %locy = sub i3 %tmp_96, %tmp_103

ST_8: col_buf_0_val_0_0_load [1/1] 0.00ns
._crit_edge243.i.0:3  %col_buf_0_val_0_0_load = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp32 [1/1] 1.62ns
._crit_edge243.i.0:4  %sel_tmp32 = icmp eq i3 %tmp_96, %tmp_103

ST_8: sel_tmp33 [1/1] 1.37ns
._crit_edge243.i.0:5  %sel_tmp33 = select i1 %sel_tmp32, i8 %col_buf_0_val_0_0_load, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp34 [1/1] 1.62ns
._crit_edge243.i.0:6  %sel_tmp34 = icmp eq i3 %locy, 2

ST_8: sel_tmp35 [1/1] 1.37ns
._crit_edge243.i.0:7  %sel_tmp35 = select i1 %sel_tmp34, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp33

ST_8: sel_tmp36 [1/1] 1.62ns
._crit_edge243.i.0:8  %sel_tmp36 = icmp eq i3 %locy, 3

ST_8: sel_tmp37 [1/1] 1.37ns
._crit_edge243.i.0:9  %sel_tmp37 = select i1 %sel_tmp36, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp35

ST_8: sel_tmp38 [1/1] 1.62ns
._crit_edge243.i.0:10  %sel_tmp38 = icmp eq i3 %locy, 1

ST_8: src_kernel_win_0_val_0_0 [1/1] 1.37ns
._crit_edge243.i.0:11  %src_kernel_win_0_val_0_0 = select i1 %sel_tmp38, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp37

ST_8: locy_1_t [1/1] 0.80ns
._crit_edge243.i.0:14  %locy_1_t = sub i3 %tmp_97, %tmp_104

ST_8: col_buf_0_val_0_0_load_5 [1/1] 0.00ns
._crit_edge243.i.0:15  %col_buf_0_val_0_0_load_5 = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp40 [1/1] 1.62ns
._crit_edge243.i.0:16  %sel_tmp40 = icmp eq i3 %tmp_97, %tmp_104

ST_8: sel_tmp41 [1/1] 1.37ns
._crit_edge243.i.0:17  %sel_tmp41 = select i1 %sel_tmp40, i8 %col_buf_0_val_0_0_load_5, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp42 [1/1] 1.62ns
._crit_edge243.i.0:18  %sel_tmp42 = icmp eq i3 %locy_1_t, 2

ST_8: sel_tmp43 [1/1] 1.37ns
._crit_edge243.i.0:19  %sel_tmp43 = select i1 %sel_tmp42, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp41

ST_8: sel_tmp44 [1/1] 1.62ns
._crit_edge243.i.0:20  %sel_tmp44 = icmp eq i3 %locy_1_t, 3

ST_8: sel_tmp45 [1/1] 1.37ns
._crit_edge243.i.0:21  %sel_tmp45 = select i1 %sel_tmp44, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp43

ST_8: sel_tmp46 [1/1] 1.62ns
._crit_edge243.i.0:22  %sel_tmp46 = icmp eq i3 %locy_1_t, 1

ST_8: src_kernel_win_0_val_1_0 [1/1] 1.37ns
._crit_edge243.i.0:23  %src_kernel_win_0_val_1_0 = select i1 %sel_tmp46, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp45

ST_8: locy_2_t [1/1] 0.80ns
._crit_edge243.i.0:26  %locy_2_t = sub i3 %tmp_97, %tmp_105

ST_8: col_buf_0_val_0_0_load_6 [1/1] 0.00ns
._crit_edge243.i.0:27  %col_buf_0_val_0_0_load_6 = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp47 [1/1] 1.62ns
._crit_edge243.i.0:28  %sel_tmp47 = icmp eq i3 %tmp_97, %tmp_105

ST_8: sel_tmp48 [1/1] 1.37ns
._crit_edge243.i.0:29  %sel_tmp48 = select i1 %sel_tmp47, i8 %col_buf_0_val_0_0_load_6, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp49 [1/1] 1.62ns
._crit_edge243.i.0:30  %sel_tmp49 = icmp eq i3 %locy_2_t, 2

ST_8: sel_tmp50 [1/1] 1.37ns
._crit_edge243.i.0:31  %sel_tmp50 = select i1 %sel_tmp49, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp48

ST_8: sel_tmp51 [1/1] 1.62ns
._crit_edge243.i.0:32  %sel_tmp51 = icmp eq i3 %locy_2_t, 3

ST_8: sel_tmp52 [1/1] 1.37ns
._crit_edge243.i.0:33  %sel_tmp52 = select i1 %sel_tmp51, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp50

ST_8: sel_tmp53 [1/1] 1.62ns
._crit_edge243.i.0:34  %sel_tmp53 = icmp eq i3 %locy_2_t, 1

ST_8: src_kernel_win_0_val_2_0 [1/1] 1.37ns
._crit_edge243.i.0:35  %src_kernel_win_0_val_2_0 = select i1 %sel_tmp53, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp52

ST_8: locy_3_t [1/1] 0.80ns
._crit_edge243.i.0:38  %locy_3_t = sub i3 %tmp_97, %tmp_106

ST_8: col_buf_0_val_0_0_load_7 [1/1] 0.00ns
._crit_edge243.i.0:39  %col_buf_0_val_0_0_load_7 = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp54 [1/1] 1.62ns
._crit_edge243.i.0:40  %sel_tmp54 = icmp eq i3 %tmp_97, %tmp_106

ST_8: sel_tmp55 [1/1] 1.37ns
._crit_edge243.i.0:41  %sel_tmp55 = select i1 %sel_tmp54, i8 %col_buf_0_val_0_0_load_7, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp56 [1/1] 1.62ns
._crit_edge243.i.0:42  %sel_tmp56 = icmp eq i3 %locy_3_t, 2

ST_8: sel_tmp57 [1/1] 1.37ns
._crit_edge243.i.0:43  %sel_tmp57 = select i1 %sel_tmp56, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp55

ST_8: sel_tmp58 [1/1] 1.62ns
._crit_edge243.i.0:44  %sel_tmp58 = icmp eq i3 %locy_3_t, 3

ST_8: sel_tmp59 [1/1] 1.37ns
._crit_edge243.i.0:45  %sel_tmp59 = select i1 %sel_tmp58, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp57

ST_8: sel_tmp60 [1/1] 1.62ns
._crit_edge243.i.0:46  %sel_tmp60 = icmp eq i3 %locy_3_t, 1

ST_8: src_kernel_win_0_val_3_0 [1/1] 1.37ns
._crit_edge243.i.0:47  %src_kernel_win_0_val_3_0 = select i1 %sel_tmp60, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp59

ST_8: stg_437 [1/1] 1.57ns
branch23:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_438 [1/1] 2.23ns
branch23:1  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_439 [1/1] 1.57ns
branch23:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_440 [1/1] 1.57ns
branch23:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_441 [1/1] 1.57ns
branch23:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_442 [1/1] 1.57ns
branch22:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_443 [1/1] 2.23ns
branch22:1  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_444 [1/1] 1.57ns
branch22:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_445 [1/1] 1.57ns
branch22:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_446 [1/1] 1.57ns
branch22:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_447 [1/1] 1.57ns
.loopexit224.i.pre263:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_448 [1/1] 2.23ns
.loopexit224.i.pre263:1  store i8 %right_border_buf_0_val_3_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_449 [1/1] 1.57ns
.loopexit224.i.pre263:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_450 [1/1] 1.57ns
.loopexit224.i.pre263:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_451 [1/1] 1.57ns
.loopexit224.i.pre263:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_16 [1/1] 0.00ns
branch20:0  %src_kernel_win_0_val_4_1_16 = load i8* %col_buf_0_val_0_0, align 1

ST_8: stg_453 [1/1] 1.57ns
branch20:1  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_454 [1/1] 2.23ns
branch20:2  store i8 %src_kernel_win_0_val_4_1_16, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_455 [1/1] 1.57ns
branch20:3  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_456 [1/1] 1.57ns
branch20:4  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_457 [1/1] 1.57ns
branch20:5  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_458 [1/1] 1.57ns
branch24:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_459 [1/1] 2.23ns
branch24:1  store i8 %src_kernel_win_0_val_4_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_460 [1/1] 1.57ns
branch24:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_461 [1/1] 1.57ns
branch24:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_462 [1/1] 1.57ns
branch24:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: col_buf_0_val_0_0_17_load [1/1] 0.00ns
.preheader.preheader.i:0  %col_buf_0_val_0_0_17_load = load i8* %col_buf_0_val_0_0_17, align 1

ST_8: col_buf_0_val_0_0_18_load [1/1] 0.00ns
.preheader.preheader.i:1  %col_buf_0_val_0_0_18_load = load i8* %col_buf_0_val_0_0_18, align 1

ST_8: col_buf_0_val_0_0_19_load [1/1] 0.00ns
.preheader.preheader.i:2  %col_buf_0_val_0_0_19_load = load i8* %col_buf_0_val_0_0_19, align 1

ST_8: col_buf_0_val_0_0_20_load [1/1] 0.00ns
.preheader.preheader.i:3  %col_buf_0_val_0_0_20_load = load i8* %col_buf_0_val_0_0_20, align 1

ST_8: col_buf_0_val_0_0_21_load [1/1] 0.00ns
.preheader.preheader.i:4  %col_buf_0_val_0_0_21_load = load i8* %col_buf_0_val_0_0_21, align 1

ST_8: right_border_buf_0_val_1_4_14 [1/1] 0.00ns
.preheader.preheader.i:5  %right_border_buf_0_val_1_4_14 = load i8* %right_border_buf_0_val_1_4_28, align 1

ST_8: right_border_buf_0_val_1_4_15 [1/1] 0.00ns
.preheader.preheader.i:6  %right_border_buf_0_val_1_4_15 = load i8* %right_border_buf_0_val_1_4_29, align 1

ST_8: right_border_buf_0_val_1_4_16 [1/1] 0.00ns
.preheader.preheader.i:7  %right_border_buf_0_val_1_4_16 = load i8* %right_border_buf_0_val_1_4_30, align 1

ST_8: right_border_buf_0_val_1_4_17 [1/1] 0.00ns
.preheader.preheader.i:8  %right_border_buf_0_val_1_4_17 = load i8* %right_border_buf_0_val_1_4_31, align 1

ST_8: right_border_buf_0_val_1_4_18 [1/1] 0.00ns
.preheader.preheader.i:9  %right_border_buf_0_val_1_4_18 = load i8* %right_border_buf_0_val_1_4_32, align 1

ST_8: right_border_buf_0_val_2_4_s [1/1] 0.00ns
.preheader.preheader.i:10  %right_border_buf_0_val_2_4_s = load i8* %right_border_buf_0_val_2_4_14, align 1

ST_8: right_border_buf_0_val_2_4_5 [1/1] 0.00ns
.preheader.preheader.i:11  %right_border_buf_0_val_2_4_5 = load i8* %right_border_buf_0_val_2_4_15, align 1

ST_8: right_border_buf_0_val_2_4_6 [1/1] 0.00ns
.preheader.preheader.i:12  %right_border_buf_0_val_2_4_6 = load i8* %right_border_buf_0_val_2_4_16, align 1

ST_8: right_border_buf_0_val_2_4_7 [1/1] 0.00ns
.preheader.preheader.i:13  %right_border_buf_0_val_2_4_7 = load i8* %right_border_buf_0_val_2_4_17, align 1

ST_8: right_border_buf_0_val_2_4_8 [1/1] 0.00ns
.preheader.preheader.i:14  %right_border_buf_0_val_2_4_8 = load i8* %right_border_buf_0_val_2_4_18, align 1

ST_8: right_border_buf_0_val_3_4_14 [1/1] 0.00ns
.preheader.preheader.i:15  %right_border_buf_0_val_3_4_14 = load i8* %right_border_buf_0_val_3_4_28, align 1

ST_8: right_border_buf_0_val_3_4_15 [1/1] 0.00ns
.preheader.preheader.i:16  %right_border_buf_0_val_3_4_15 = load i8* %right_border_buf_0_val_3_4_29, align 1

ST_8: right_border_buf_0_val_3_4_16 [1/1] 0.00ns
.preheader.preheader.i:17  %right_border_buf_0_val_3_4_16 = load i8* %right_border_buf_0_val_3_4_30, align 1

ST_8: right_border_buf_0_val_3_4_17 [1/1] 0.00ns
.preheader.preheader.i:18  %right_border_buf_0_val_3_4_17 = load i8* %right_border_buf_0_val_3_4_31, align 1

ST_8: right_border_buf_0_val_3_4_18 [1/1] 0.00ns
.preheader.preheader.i:19  %right_border_buf_0_val_3_4_18 = load i8* %right_border_buf_0_val_3_4_32, align 1

ST_8: sel_tmp [1/1] 1.62ns
.preheader.preheader.i:21  %sel_tmp = icmp eq i3 %col_assign_4, 1

ST_8: col_buf_0_val_0_0_8 [1/1] 1.37ns
.preheader.preheader.i:22  %col_buf_0_val_0_0_8 = select i1 %sel_tmp, i8 %col_buf_0_val_0_0_20_load, i8 %col_buf_0_val_0_0_17_load

ST_8: sel_tmp2 [1/1] 1.62ns
.preheader.preheader.i:23  %sel_tmp2 = icmp eq i3 %col_assign_4, 2

ST_8: col_buf_0_val_0_0_9 [1/1] 1.37ns
.preheader.preheader.i:24  %col_buf_0_val_0_0_9 = select i1 %sel_tmp2, i8 %col_buf_0_val_0_0_19_load, i8 %col_buf_0_val_0_0_8

ST_8: sel_tmp4 [1/1] 1.62ns
.preheader.preheader.i:25  %sel_tmp4 = icmp eq i3 %col_assign_4, 3

ST_8: col_buf_0_val_0_0_22 [1/1] 1.37ns
.preheader.preheader.i:26  %col_buf_0_val_0_0_22 = select i1 %sel_tmp4, i8 %col_buf_0_val_0_0_18_load, i8 %col_buf_0_val_0_0_9

ST_8: sel_tmp6 [1/1] 1.62ns
.preheader.preheader.i:27  %sel_tmp6 = icmp eq i3 %col_assign_4, 0

ST_8: col_buf_0_val_0_0_28 [1/1] 1.37ns
.preheader.preheader.i:28  %col_buf_0_val_0_0_28 = select i1 %sel_tmp6, i8 %col_buf_0_val_0_0_21_load, i8 %col_buf_0_val_0_0_22

ST_8: right_border_buf_0_val_3_4 [1/1] 1.37ns
.preheader.preheader.i:29  %right_border_buf_0_val_3_4 = select i1 %sel_tmp, i8 %right_border_buf_0_val_3_4_15, i8 %right_border_buf_0_val_3_4_18

ST_8: right_border_buf_0_val_3_4_33 [1/1] 1.37ns
.preheader.preheader.i:30  %right_border_buf_0_val_3_4_33 = select i1 %sel_tmp2, i8 %right_border_buf_0_val_3_4_16, i8 %right_border_buf_0_val_3_4

ST_8: right_border_buf_0_val_3_4_34 [1/1] 1.37ns
.preheader.preheader.i:31  %right_border_buf_0_val_3_4_34 = select i1 %sel_tmp4, i8 %right_border_buf_0_val_3_4_17, i8 %right_border_buf_0_val_3_4_33

ST_8: right_border_buf_0_val_3_4_57 [1/1] 1.37ns
.preheader.preheader.i:32  %right_border_buf_0_val_3_4_57 = select i1 %sel_tmp6, i8 %right_border_buf_0_val_3_4_14, i8 %right_border_buf_0_val_3_4_34

ST_8: right_border_buf_0_val_2_4 [1/1] 1.37ns
.preheader.preheader.i:33  %right_border_buf_0_val_2_4 = select i1 %sel_tmp, i8 %right_border_buf_0_val_2_4_5, i8 %right_border_buf_0_val_2_4_8

ST_8: right_border_buf_0_val_2_4_6_72 [1/1] 1.37ns
.preheader.preheader.i:34  %right_border_buf_0_val_2_4_6_72 = select i1 %sel_tmp2, i8 %right_border_buf_0_val_2_4_6, i8 %right_border_buf_0_val_2_4

ST_8: right_border_buf_0_val_2_4_7_73 [1/1] 1.37ns
.preheader.preheader.i:35  %right_border_buf_0_val_2_4_7_73 = select i1 %sel_tmp4, i8 %right_border_buf_0_val_2_4_7, i8 %right_border_buf_0_val_2_4_6_72

ST_8: right_border_buf_0_val_2_4_24 [1/1] 1.37ns
.preheader.preheader.i:36  %right_border_buf_0_val_2_4_24 = select i1 %sel_tmp6, i8 %right_border_buf_0_val_2_4_s, i8 %right_border_buf_0_val_2_4_7_73

ST_8: right_border_buf_0_val_1_4 [1/1] 1.37ns
.preheader.preheader.i:37  %right_border_buf_0_val_1_4 = select i1 %sel_tmp, i8 %right_border_buf_0_val_1_4_15, i8 %right_border_buf_0_val_1_4_18

ST_8: right_border_buf_0_val_1_4_33 [1/1] 1.37ns
.preheader.preheader.i:38  %right_border_buf_0_val_1_4_33 = select i1 %sel_tmp2, i8 %right_border_buf_0_val_1_4_16, i8 %right_border_buf_0_val_1_4

ST_8: right_border_buf_0_val_1_4_34 [1/1] 1.37ns
.preheader.preheader.i:39  %right_border_buf_0_val_1_4_34 = select i1 %sel_tmp4, i8 %right_border_buf_0_val_1_4_17, i8 %right_border_buf_0_val_1_4_33

ST_8: right_border_buf_0_val_1_4_57 [1/1] 1.37ns
.preheader.preheader.i:40  %right_border_buf_0_val_1_4_57 = select i1 %sel_tmp6, i8 %right_border_buf_0_val_1_4_14, i8 %right_border_buf_0_val_1_4_34

ST_8: stg_503 [1/1] 1.88ns
.preheader.preheader.i:41  switch i3 %col_assign_4, label %branch29 [
    i3 0, label %branch25
    i3 1, label %branch26
    i3 2, label %branch27
    i3 3, label %branch28
  ]

ST_8: src_kernel_win_0_val_4_1_24 [1/1] 0.00ns
branch28:0  %src_kernel_win_0_val_4_1_24 = load i8* %right_border_buf_0_val_0_3, align 1

ST_8: stg_505 [1/1] 1.57ns
branch28:1  store i8 %right_border_buf_0_val_1_4_57, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_506 [1/1] 2.23ns
branch28:2  store i8 %src_kernel_win_0_val_4_1_24, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_507 [1/1] 1.57ns
branch28:3  store i8 %right_border_buf_0_val_2_4_24, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_508 [1/1] 1.57ns
branch28:4  store i8 %right_border_buf_0_val_3_4_57, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_509 [1/1] 1.57ns
branch28:5  store i8 %col_buf_0_val_0_0_28, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_23 [1/1] 0.00ns
branch27:0  %src_kernel_win_0_val_4_1_23 = load i8* %right_border_buf_0_val_0_2, align 1

ST_8: stg_511 [1/1] 1.57ns
branch27:1  store i8 %right_border_buf_0_val_1_4_57, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_512 [1/1] 2.23ns
branch27:2  store i8 %src_kernel_win_0_val_4_1_23, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_513 [1/1] 1.57ns
branch27:3  store i8 %right_border_buf_0_val_2_4_24, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_514 [1/1] 1.57ns
branch27:4  store i8 %right_border_buf_0_val_3_4_57, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_515 [1/1] 1.57ns
branch27:5  store i8 %col_buf_0_val_0_0_28, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_22 [1/1] 0.00ns
branch26:0  %src_kernel_win_0_val_4_1_22 = load i8* %right_border_buf_0_val_0_1, align 1

ST_8: stg_517 [1/1] 1.57ns
branch26:1  store i8 %right_border_buf_0_val_1_4_57, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_518 [1/1] 2.23ns
branch26:2  store i8 %src_kernel_win_0_val_4_1_22, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_519 [1/1] 1.57ns
branch26:3  store i8 %right_border_buf_0_val_2_4_24, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_520 [1/1] 1.57ns
branch26:4  store i8 %right_border_buf_0_val_3_4_57, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_521 [1/1] 1.57ns
branch26:5  store i8 %col_buf_0_val_0_0_28, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_21 [1/1] 0.00ns
branch25:0  %src_kernel_win_0_val_4_1_21 = load i8* %right_border_buf_0_val_0_0, align 1

ST_8: stg_523 [1/1] 1.57ns
branch25:1  store i8 %right_border_buf_0_val_1_4_57, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_524 [1/1] 2.23ns
branch25:2  store i8 %src_kernel_win_0_val_4_1_21, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_525 [1/1] 1.57ns
branch25:3  store i8 %right_border_buf_0_val_2_4_24, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_526 [1/1] 1.57ns
branch25:4  store i8 %right_border_buf_0_val_3_4_57, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_527 [1/1] 1.57ns
branch25:5  store i8 %col_buf_0_val_0_0_28, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_20 [1/1] 0.00ns
branch29:0  %src_kernel_win_0_val_4_1_20 = load i8* %right_border_buf_0_val_0_4, align 1

ST_8: stg_529 [1/1] 1.57ns
branch29:1  store i8 %right_border_buf_0_val_1_4_57, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_530 [1/1] 2.23ns
branch29:2  store i8 %src_kernel_win_0_val_4_1_20, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_531 [1/1] 1.57ns
branch29:3  store i8 %right_border_buf_0_val_2_4_24, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_532 [1/1] 1.57ns
branch29:4  store i8 %right_border_buf_0_val_3_4_57, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_533 [1/1] 1.57ns
branch29:5  store i8 %col_buf_0_val_0_0_28, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_534 [1/1] 1.57ns
.loopexit224.i.pre:0  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_535 [1/1] 2.23ns
.loopexit224.i.pre:1  store i8 %src_kernel_win_0_val_4_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_536 [1/1] 1.57ns
.loopexit224.i.pre:2  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_537 [1/1] 1.57ns
.loopexit224.i.pre:3  store i8 %right_border_buf_0_val_3_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_538 [1/1] 1.57ns
.loopexit224.i.pre:4  store i8 %right_border_buf_0_val_4_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_539 [1/1] 1.57ns
._crit_edge241.i.3:2  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_540 [1/1] 2.23ns
._crit_edge241.i.3:3  store i8 %src_kernel_win_0_val_4_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_541 [1/1] 1.57ns
._crit_edge241.i.3:4  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_542 [1/1] 1.57ns
._crit_edge241.i.3:5  store i8 %right_border_buf_0_val_3_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_543 [1/1] 1.57ns
._crit_edge241.i.3:6  store i8 %right_border_buf_0_val_4_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_2_lo [1/1] 0.00ns
.preheader:16  %src_kernel_win_0_val_4_2_lo = load i8* %src_kernel_win_0_val_4_2, align 1

ST_8: src_kernel_win_0_val_4_3_lo [1/1] 0.00ns
.preheader:17  %src_kernel_win_0_val_4_3_lo = load i8* %src_kernel_win_0_val_4_3, align 1

ST_8: OP1_V_0_1_cast [1/1] 0.00ns
.preheader:23  %OP1_V_0_1_cast = zext i8 %src_kernel_win_0_val_4_3_lo to i11

ST_8: p_Val2_0_1 [1/1] 6.38ns
.preheader:24  %p_Val2_0_1 = mul i11 %OP1_V_0_1_cast, %OP2_V_0_1_cast

ST_8: OP1_V_0_2_cast [1/1] 0.00ns
.preheader:28  %OP1_V_0_2_cast = zext i8 %src_kernel_win_0_val_4_2_lo to i11

ST_8: p_Val2_0_2 [1/1] 6.38ns
.preheader:29  %p_Val2_0_2 = mul i11 %OP1_V_0_2_cast, %OP2_V_0_2_cast

ST_8: src_kernel_win_0_val_4_3_2 [1/1] 0.00ns
._crit_edge245.i:8  %src_kernel_win_0_val_4_3_2 = load i8* %src_kernel_win_0_val_4_2, align 1

ST_8: src_kernel_win_0_val_4_4_2 [1/1] 0.00ns
._crit_edge245.i:9  %src_kernel_win_0_val_4_4_2 = load i8* %src_kernel_win_0_val_4_3, align 1

ST_8: stg_552 [1/1] 0.00ns
._crit_edge245.i:12  store i8 %src_kernel_win_0_val_4_3_2, i8* %src_kernel_win_0_val_4_3, align 1

ST_8: stg_553 [1/1] 0.00ns
._crit_edge245.i:13  store i8 %src_kernel_win_0_val_4_1_26, i8* %src_kernel_win_0_val_4_2, align 1


 <State 9>: 8.32ns
ST_9: src_kernel_win_0_val_0_1_lo [1/1] 0.00ns
.preheader:0  %src_kernel_win_0_val_0_1_lo = load i8* %src_kernel_win_0_val_0_1, align 1

ST_9: src_kernel_win_0_val_1_1_lo [1/1] 0.00ns
.preheader:4  %src_kernel_win_0_val_1_1_lo = load i8* %src_kernel_win_0_val_1_1, align 1

ST_9: src_kernel_win_0_val_1_2_lo [1/1] 0.00ns
.preheader:5  %src_kernel_win_0_val_1_2_lo = load i8* %src_kernel_win_0_val_1_2, align 1

ST_9: src_kernel_win_0_val_1_3_lo [1/1] 0.00ns
.preheader:6  %src_kernel_win_0_val_1_3_lo = load i8* %src_kernel_win_0_val_1_3, align 1

ST_9: src_kernel_win_0_val_1_4_lo [1/1] 0.00ns
.preheader:7  %src_kernel_win_0_val_1_4_lo = load i8* %src_kernel_win_0_val_1_4, align 1

ST_9: src_kernel_win_0_val_2_1_lo [1/1] 0.00ns
.preheader:8  %src_kernel_win_0_val_2_1_lo = load i8* %src_kernel_win_0_val_2_1, align 1

ST_9: src_kernel_win_0_val_4_1_lo [1/1] 0.00ns
.preheader:11  %src_kernel_win_0_val_4_1_lo = load i8* %src_kernel_win_0_val_4_1, align 1

ST_9: src_kernel_win_0_val_3_1_lo [1/1] 0.00ns
.preheader:12  %src_kernel_win_0_val_3_1_lo = load i8* %src_kernel_win_0_val_3_1, align 1

ST_9: src_kernel_win_0_val_3_2_lo [1/1] 0.00ns
.preheader:13  %src_kernel_win_0_val_3_2_lo = load i8* %src_kernel_win_0_val_3_2, align 1

ST_9: src_kernel_win_0_val_3_3_lo [1/1] 0.00ns
.preheader:14  %src_kernel_win_0_val_3_3_lo = load i8* %src_kernel_win_0_val_3_3, align 1

ST_9: src_kernel_win_0_val_3_4_lo [1/1] 0.00ns
.preheader:15  %src_kernel_win_0_val_3_4_lo = load i8* %src_kernel_win_0_val_3_4, align 1

ST_9: src_kernel_win_0_val_4_4_lo [1/1] 0.00ns
.preheader:18  %src_kernel_win_0_val_4_4_lo = load i8* %src_kernel_win_0_val_4_4, align 1

ST_9: p_shl3 [1/1] 0.00ns
.preheader:19  %p_shl3 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_0_val_4_4_lo, i1 false)

ST_9: p_shl3_cast [1/1] 0.00ns
.preheader:20  %p_shl3_cast = zext i9 %p_shl3 to i10

ST_9: p_Val2_s [1/1] 1.84ns
.preheader:21  %p_Val2_s = sub i10 0, %p_shl3_cast

ST_9: tmp_320_0_cast [1/1] 0.00ns
.preheader:22  %tmp_320_0_cast = sext i10 %p_Val2_s to i12

ST_9: tmp_320_0_1_cast [1/1] 0.00ns
.preheader:25  %tmp_320_0_1_cast = sext i11 %p_Val2_0_1 to i12

ST_9: p_Val2_3_0_1 [1/1] 3.02ns
.preheader:26  %p_Val2_3_0_1 = add i12 %tmp_320_0_1_cast, %tmp_320_0_cast

ST_9: p_Val2_3_0_1_cast [1/1] 0.00ns
.preheader:27  %p_Val2_3_0_1_cast = sext i12 %p_Val2_3_0_1 to i13

ST_9: tmp_320_0_2_cast [1/1] 0.00ns
.preheader:30  %tmp_320_0_2_cast = sext i11 %p_Val2_0_2 to i13

ST_9: p_Val2_3_0_2 [1/1] 1.73ns
.preheader:31  %p_Val2_3_0_2 = add i13 %p_Val2_3_0_1_cast, %tmp_320_0_2_cast

ST_9: OP1_V_0_3_cast [1/1] 0.00ns
.preheader:32  %OP1_V_0_3_cast = zext i8 %src_kernel_win_0_val_4_1_26 to i11

ST_9: p_Val2_0_3 [1/1] 6.38ns
.preheader:33  %p_Val2_0_3 = mul i11 %OP1_V_0_3_cast, %OP2_V_0_3_cast

ST_9: tmp_320_0_3_cast_cast [1/1] 0.00ns
.preheader:34  %tmp_320_0_3_cast_cast = sext i11 %p_Val2_0_3 to i13

ST_9: p_Val2_3_0_3 [1/1] 1.73ns
.preheader:35  %p_Val2_3_0_3 = add i13 %p_Val2_3_0_2, %tmp_320_0_3_cast_cast

ST_9: OP1_V_0_4_cast [1/1] 0.00ns
.preheader:37  %OP1_V_0_4_cast = zext i8 %src_kernel_win_0_val_4_1_lo to i11

ST_9: p_Val2_0_4 [1/1] 6.38ns
.preheader:38  %p_Val2_0_4 = mul i11 %OP1_V_0_4_cast, %OP2_V_0_4_cast

ST_9: OP1_V_1_cast [1/1] 0.00ns
.preheader:41  %OP1_V_1_cast = zext i8 %src_kernel_win_0_val_3_4_lo to i11

ST_9: p_Val2_s_74 [1/1] 6.38ns
.preheader:42  %p_Val2_s_74 = mul i11 %OP1_V_1_cast, %OP2_V_1_cast

ST_9: OP1_V_1_3_cast [1/1] 0.00ns
.preheader:55  %OP1_V_1_3_cast = zext i8 %src_kernel_win_0_val_3_1_12 to i11

ST_9: p_Val2_113_3 [1/1] 6.38ns
.preheader:56  %p_Val2_113_3 = mul i11 %OP1_V_1_3_cast, %OP2_V_1_3_cast

ST_9: OP1_V_1_4_cast [1/1] 0.00ns
.preheader:58  %OP1_V_1_4_cast = zext i8 %src_kernel_win_0_val_3_1_lo to i11

ST_9: p_Val2_113_4 [1/1] 6.38ns
.preheader:59  %p_Val2_113_4 = mul i11 %OP1_V_1_4_cast, %OP2_V_1_4_cast

ST_9: OP1_V_3_cast [1/1] 0.00ns
.preheader:76  %OP1_V_3_cast = zext i8 %src_kernel_win_0_val_1_4_lo to i12

ST_9: p_Val2_1 [1/1] 6.38ns
.preheader:77  %p_Val2_1 = mul i12 %OP1_V_3_cast, %OP2_V_3_cast

ST_9: OP1_V_3_1_cast [1/1] 0.00ns
.preheader:79  %OP1_V_3_1_cast = zext i8 %src_kernel_win_0_val_1_3_lo to i11

ST_9: p_Val2_314_1 [1/1] 6.38ns
.preheader:80  %p_Val2_314_1 = mul i11 %OP1_V_3_1_cast, %OP2_V_3_1_cast

ST_9: OP1_V_3_2_cast [1/1] 0.00ns
.preheader:82  %OP1_V_3_2_cast = zext i8 %src_kernel_win_0_val_1_2_lo to i11

ST_9: p_Val2_314_2 [1/1] 6.38ns
.preheader:83  %p_Val2_314_2 = mul i11 %OP1_V_3_2_cast, %OP2_V_3_2_cast

ST_9: OP1_V_3_4_cast [1/1] 0.00ns
.preheader:87  %OP1_V_3_4_cast = zext i8 %src_kernel_win_0_val_1_1_lo to i12

ST_9: p_Val2_314_4 [1/1] 6.38ns
.preheader:88  %p_Val2_314_4 = mul i12 %OP1_V_3_4_cast, %OP2_V_3_4_cast

ST_9: src_kernel_win_0_val_1_3_2 [1/1] 0.00ns
._crit_edge245.i:2  %src_kernel_win_0_val_1_3_2 = load i8* %src_kernel_win_0_val_1_2, align 1

ST_9: src_kernel_win_0_val_1_4_2 [1/1] 0.00ns
._crit_edge245.i:3  %src_kernel_win_0_val_1_4_2 = load i8* %src_kernel_win_0_val_1_3, align 1

ST_9: src_kernel_win_0_val_3_3_2 [1/1] 0.00ns
._crit_edge245.i:6  %src_kernel_win_0_val_3_3_2 = load i8* %src_kernel_win_0_val_3_2, align 1

ST_9: src_kernel_win_0_val_3_4_2 [1/1] 0.00ns
._crit_edge245.i:7  %src_kernel_win_0_val_3_4_2 = load i8* %src_kernel_win_0_val_3_3, align 1

ST_9: stg_599 [1/1] 0.00ns
._crit_edge245.i:11  store i8 %src_kernel_win_0_val_4_4_2, i8* %src_kernel_win_0_val_4_4, align 1

ST_9: stg_600 [1/1] 0.00ns
._crit_edge245.i:14  store i8 %src_kernel_win_0_val_3_4_2, i8* %src_kernel_win_0_val_3_4, align 1

ST_9: stg_601 [1/1] 0.00ns
._crit_edge245.i:15  store i8 %src_kernel_win_0_val_3_3_2, i8* %src_kernel_win_0_val_3_3, align 1

ST_9: stg_602 [1/1] 0.00ns
._crit_edge245.i:16  store i8 %src_kernel_win_0_val_3_1_12, i8* %src_kernel_win_0_val_3_2, align 1

ST_9: stg_603 [1/1] 0.00ns
._crit_edge245.i:20  store i8 %src_kernel_win_0_val_1_4_2, i8* %src_kernel_win_0_val_1_4, align 1

ST_9: stg_604 [1/1] 0.00ns
._crit_edge245.i:21  store i8 %src_kernel_win_0_val_1_3_2, i8* %src_kernel_win_0_val_1_3, align 1

ST_9: stg_605 [1/1] 0.00ns
._crit_edge245.i:22  store i8 %src_kernel_win_0_val_1_1_12, i8* %src_kernel_win_0_val_1_2, align 1


 <State 10>: 8.11ns
ST_10: src_kernel_win_0_val_2_3_lo [1/1] 0.00ns
.preheader:9  %src_kernel_win_0_val_2_3_lo = load i8* %src_kernel_win_0_val_2_3, align 1

ST_10: src_kernel_win_0_val_2_4_lo [1/1] 0.00ns
.preheader:10  %src_kernel_win_0_val_2_4_lo = load i8* %src_kernel_win_0_val_2_4, align 1

ST_10: p_Val2_3_0_3_cast [1/1] 0.00ns
.preheader:36  %p_Val2_3_0_3_cast = sext i13 %p_Val2_3_0_3 to i14

ST_10: tmp_320_0_4_cast_cast [1/1] 0.00ns
.preheader:39  %tmp_320_0_4_cast_cast = sext i11 %p_Val2_0_4 to i14

ST_10: p_Val2_3_0_4 [1/1] 1.73ns
.preheader:40  %p_Val2_3_0_4 = add i14 %p_Val2_3_0_3_cast, %tmp_320_0_4_cast_cast

ST_10: p_Val2_113_cast_cast [1/1] 0.00ns
.preheader:43  %p_Val2_113_cast_cast = sext i11 %p_Val2_s_74 to i14

ST_10: p_Val2_3_1 [1/1] 1.73ns
.preheader:44  %p_Val2_3_1 = add i14 %p_Val2_3_0_4, %p_Val2_113_cast_cast

ST_10: p_shl [1/1] 0.00ns
.preheader:45  %p_shl = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_0_val_3_3_lo, i1 false)

ST_10: p_shl_cast [1/1] 0.00ns
.preheader:46  %p_shl_cast = zext i9 %p_shl to i10

ST_10: p_Val2_113_1 [1/1] 1.84ns
.preheader:47  %p_Val2_113_1 = sub i10 0, %p_shl_cast

ST_10: tmp_320_1_1_cast_cast [1/1] 0.00ns
.preheader:48  %tmp_320_1_1_cast_cast = sext i10 %p_Val2_113_1 to i14

ST_10: p_Val2_3_1_1 [1/1] 1.73ns
.preheader:49  %p_Val2_3_1_1 = add i14 %p_Val2_3_1, %tmp_320_1_1_cast_cast

ST_10: OP1_V_1_2_cast [1/1] 0.00ns
.preheader:50  %OP1_V_1_2_cast = zext i8 %src_kernel_win_0_val_3_2_lo to i11

ST_10: p_Val2_113_2 [1/1] 6.38ns
.preheader:51  %p_Val2_113_2 = mul i11 %OP1_V_1_2_cast, %OP2_V_1_2_cast

ST_10: tmp_320_1_2_cast_cast [1/1] 0.00ns
.preheader:52  %tmp_320_1_2_cast_cast = sext i11 %p_Val2_113_2 to i14

ST_10: p_Val2_3_1_2 [1/1] 1.73ns
.preheader:53  %p_Val2_3_1_2 = add i14 %p_Val2_3_1_1, %tmp_320_1_2_cast_cast

ST_10: tmp_320_1_3_cast_cast [1/1] 0.00ns
.preheader:57  %tmp_320_1_3_cast_cast = sext i11 %p_Val2_113_3 to i12

ST_10: tmp_320_1_4_cast_cast [1/1] 0.00ns
.preheader:60  %tmp_320_1_4_cast_cast = sext i11 %p_Val2_113_4 to i12

ST_10: tmp1 [1/1] 3.02ns
.preheader:61  %tmp1 = add i12 %tmp_320_1_3_cast_cast, %tmp_320_1_4_cast_cast

ST_10: OP1_V_2_cast [1/1] 0.00ns
.preheader:64  %OP1_V_2_cast = zext i8 %src_kernel_win_0_val_2_4_lo to i12

ST_10: p_Val2_2 [1/1] 6.38ns
.preheader:65  %p_Val2_2 = mul i12 %OP1_V_2_cast, %OP2_V_2_cast

ST_10: OP1_V_2_1_cast [1/1] 0.00ns
.preheader:67  %OP1_V_2_1_cast = zext i8 %src_kernel_win_0_val_2_3_lo to i12

ST_10: p_Val2_2_1 [1/1] 6.38ns
.preheader:68  %p_Val2_2_1 = mul i12 %OP1_V_2_1_cast, %OP2_V_2_1_cast

ST_10: OP1_V_2_3_cast [1/1] 0.00ns
.preheader:70  %OP1_V_2_3_cast = zext i8 %src_kernel_win_0_val_2_1_12 to i12

ST_10: p_Val2_2_3 [1/1] 6.38ns
.preheader:71  %p_Val2_2_3 = mul i12 %OP1_V_2_3_cast, %OP2_V_2_3_cast

ST_10: tmp_320_3_cast_cast [1/1] 0.00ns
.preheader:78  %tmp_320_3_cast_cast = sext i12 %p_Val2_1 to i13

ST_10: tmp_320_3_1_cast_cast [1/1] 0.00ns
.preheader:81  %tmp_320_3_1_cast_cast = sext i11 %p_Val2_314_1 to i12

ST_10: tmp_320_3_2_cast_cast [1/1] 0.00ns
.preheader:84  %tmp_320_3_2_cast_cast = sext i11 %p_Val2_314_2 to i12

ST_10: p_Val2_314_3 [1/1] 0.00ns
.preheader:85  %p_Val2_314_3 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_0_val_1_1_12, i1 false)

ST_10: tmp_320_3_cast_cast_75 [1/1] 0.00ns
.preheader:86  %tmp_320_3_cast_cast_75 = zext i9 %p_Val2_314_3 to i12

ST_10: tmp_320_3_4_cast_cast [1/1] 0.00ns
.preheader:89  %tmp_320_3_4_cast_cast = sext i12 %p_Val2_314_4 to i13

ST_10: tmp7 [1/1] 3.02ns
.preheader:97  %tmp7 = add i13 %tmp_320_3_cast_cast, %tmp_320_3_4_cast_cast

ST_10: tmp7_cast [1/1] 0.00ns
.preheader:98  %tmp7_cast = sext i13 %tmp7 to i14

ST_10: tmp9 [1/1] 1.37ns
.preheader:99  %tmp9 = add i12 %tmp_320_3_2_cast_cast, %tmp_320_3_cast_cast_75

ST_10: tmp8 [1/1] 1.37ns
.preheader:100  %tmp8 = add i12 %tmp9, %tmp_320_3_1_cast_cast

ST_10: tmp8_cast [1/1] 0.00ns
.preheader:101  %tmp8_cast = sext i12 %tmp8 to i14

ST_10: tmp6 [1/1] 3.02ns
.preheader:102  %tmp6 = add i14 %tmp8_cast, %tmp7_cast

ST_10: src_kernel_win_0_val_2_3_2 [1/1] 0.00ns
._crit_edge245.i:4  %src_kernel_win_0_val_2_3_2 = load i8* %src_kernel_win_0_val_2_2, align 1

ST_10: src_kernel_win_0_val_2_4_2 [1/1] 0.00ns
._crit_edge245.i:5  %src_kernel_win_0_val_2_4_2 = load i8* %src_kernel_win_0_val_2_3, align 1

ST_10: stg_645 [1/1] 0.00ns
._crit_edge245.i:17  store i8 %src_kernel_win_0_val_2_4_2, i8* %src_kernel_win_0_val_2_4, align 1

ST_10: stg_646 [1/1] 0.00ns
._crit_edge245.i:18  store i8 %src_kernel_win_0_val_2_3_2, i8* %src_kernel_win_0_val_2_3, align 1

ST_10: stg_647 [1/1] 0.00ns
._crit_edge245.i:19  store i8 %src_kernel_win_0_val_2_1_12, i8* %src_kernel_win_0_val_2_2, align 1


 <State 11>: 6.38ns
ST_11: src_kernel_win_0_val_0_2_lo [1/1] 0.00ns
.preheader:1  %src_kernel_win_0_val_0_2_lo = load i8* %src_kernel_win_0_val_0_2, align 1

ST_11: src_kernel_win_0_val_0_3_lo [1/1] 0.00ns
.preheader:2  %src_kernel_win_0_val_0_3_lo = load i8* %src_kernel_win_0_val_0_3, align 1

ST_11: src_kernel_win_0_val_0_4_lo [1/1] 0.00ns
.preheader:3  %src_kernel_win_0_val_0_4_lo = load i8* %src_kernel_win_0_val_0_4, align 1

ST_11: p_Val2_3_1_2_cast_cast [1/1] 0.00ns
.preheader:54  %p_Val2_3_1_2_cast_cast = sext i14 %p_Val2_3_1_2 to i15

ST_11: tmp1_cast [1/1] 0.00ns
.preheader:62  %tmp1_cast = sext i12 %tmp1 to i15

ST_11: p_Val2_3_1_4 [1/1] 3.02ns
.preheader:63  %p_Val2_3_1_4 = add i15 %tmp1_cast, %p_Val2_3_1_2_cast_cast

ST_11: tmp_320_2_cast_cast [1/1] 0.00ns
.preheader:66  %tmp_320_2_cast_cast = sext i12 %p_Val2_2 to i14

ST_11: tmp_320_2_1_cast_cast [1/1] 0.00ns
.preheader:69  %tmp_320_2_1_cast_cast = sext i12 %p_Val2_2_1 to i13

ST_11: tmp_320_2_3_cast_cast [1/1] 0.00ns
.preheader:72  %tmp_320_2_3_cast_cast = sext i12 %p_Val2_2_3 to i13

ST_11: OP1_V_2_4_cast [1/1] 0.00ns
.preheader:73  %OP1_V_2_4_cast = zext i8 %src_kernel_win_0_val_2_1_lo to i13

ST_11: p_Val2_2_4 [1/1] 3.36ns
.preheader:74  %p_Val2_2_4 = mul i13 %OP1_V_2_4_cast, %OP2_V_2_4_cast

ST_11: tmp_320_2_4_cast_cast [1/1] 0.00ns
.preheader:75  %tmp_320_2_4_cast_cast = sext i13 %p_Val2_2_4 to i15

ST_11: tmp3 [1/1] 3.02ns
.preheader:90  %tmp3 = add i15 %p_Val2_3_1_4, %tmp_320_2_4_cast_cast

ST_11: tmp3_cast [1/1] 0.00ns
.preheader:91  %tmp3_cast = sext i15 %tmp3 to i16

ST_11: tmp5 [1/1] 3.02ns
.preheader:92  %tmp5 = add i13 %tmp_320_2_1_cast_cast, %tmp_320_2_3_cast_cast

ST_11: tmp5_cast [1/1] 0.00ns
.preheader:93  %tmp5_cast = sext i13 %tmp5 to i14

ST_11: tmp4 [1/1] 3.02ns
.preheader:94  %tmp4 = add i14 %tmp5_cast, %tmp_320_2_cast_cast

ST_11: OP1_V_4_cast [1/1] 0.00ns
.preheader:105  %OP1_V_4_cast = zext i8 %src_kernel_win_0_val_0_4_lo to i11

ST_11: p_Val2_4 [1/1] 6.38ns
.preheader:106  %p_Val2_4 = mul i11 %OP1_V_4_cast, %OP2_V_4_cast

ST_11: OP1_V_4_1_cast [1/1] 0.00ns
.preheader:108  %OP1_V_4_1_cast = zext i8 %src_kernel_win_0_val_0_3_lo to i11

ST_11: p_Val2_4_1 [1/1] 6.38ns
.preheader:109  %p_Val2_4_1 = mul i11 %OP1_V_4_1_cast, %OP2_V_4_1_cast

ST_11: OP1_V_4_2_cast [1/1] 0.00ns
.preheader:111  %OP1_V_4_2_cast = zext i8 %src_kernel_win_0_val_0_2_lo to i12

ST_11: p_Val2_4_2 [1/1] 6.38ns
.preheader:112  %p_Val2_4_2 = mul i12 %OP1_V_4_2_cast, %OP2_V_4_2_cast

ST_11: OP1_V_4_3_cast [1/1] 0.00ns
.preheader:114  %OP1_V_4_3_cast = zext i8 %src_kernel_win_0_val_0_1_12 to i11

ST_11: p_Val2_4_3 [1/1] 6.38ns
.preheader:115  %p_Val2_4_3 = mul i11 %OP1_V_4_3_cast, %OP2_V_4_3_cast

ST_11: src_kernel_win_0_val_0_3_2 [1/1] 0.00ns
._crit_edge245.i:0  %src_kernel_win_0_val_0_3_2 = load i8* %src_kernel_win_0_val_0_2, align 1

ST_11: src_kernel_win_0_val_0_4_2 [1/1] 0.00ns
._crit_edge245.i:1  %src_kernel_win_0_val_0_4_2 = load i8* %src_kernel_win_0_val_0_3, align 1

ST_11: empty [1/1] 0.00ns
._crit_edge245.i:10  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1820, i32 %tmp_75)

ST_11: stg_676 [1/1] 0.00ns
._crit_edge245.i:23  store i8 %src_kernel_win_0_val_0_4_2, i8* %src_kernel_win_0_val_0_4, align 1

ST_11: stg_677 [1/1] 0.00ns
._crit_edge245.i:24  store i8 %src_kernel_win_0_val_0_3_2, i8* %src_kernel_win_0_val_0_3, align 1

ST_11: stg_678 [1/1] 0.00ns
._crit_edge245.i:25  store i8 %src_kernel_win_0_val_0_1_12, i8* %src_kernel_win_0_val_0_2, align 1

ST_11: stg_679 [1/1] 0.00ns
._crit_edge245.i:26  br label %2


 <State 12>: 6.92ns
ST_12: tmp4_cast [1/1] 0.00ns
.preheader:95  %tmp4_cast = sext i14 %tmp4 to i16

ST_12: tmp2 [1/1] 1.73ns
.preheader:96  %tmp2 = add i16 %tmp4_cast, %tmp3_cast

ST_12: tmp6_cast [1/1] 0.00ns
.preheader:103  %tmp6_cast = sext i14 %tmp6 to i16

ST_12: p_Val2_3_3_4 [1/1] 1.73ns
.preheader:104  %p_Val2_3_3_4 = add i16 %tmp6_cast, %tmp2

ST_12: tmp_320_4_cast [1/1] 0.00ns
.preheader:107  %tmp_320_4_cast = sext i11 %p_Val2_4 to i12

ST_12: tmp_320_4_1_cast [1/1] 0.00ns
.preheader:110  %tmp_320_4_1_cast = sext i11 %p_Val2_4_1 to i13

ST_12: tmp_320_4_2_cast [1/1] 0.00ns
.preheader:113  %tmp_320_4_2_cast = sext i12 %p_Val2_4_2 to i13

ST_12: tmp_320_4_3_cast [1/1] 0.00ns
.preheader:116  %tmp_320_4_3_cast = sext i11 %p_Val2_4_3 to i12

ST_12: p_Val2_4_4 [1/1] 0.00ns
.preheader:117  %p_Val2_4_4 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_0_val_0_1_lo, i1 false)

ST_12: tmp_320_4_cast_76 [1/1] 0.00ns
.preheader:118  %tmp_320_4_cast_76 = zext i9 %p_Val2_4_4 to i12

ST_12: tmp14 [1/1] 3.02ns
.preheader:119  %tmp14 = add i13 %tmp_320_4_2_cast, %tmp_320_4_1_cast

ST_12: tmp14_cast [1/1] 0.00ns
.preheader:120  %tmp14_cast = sext i13 %tmp14 to i16

ST_12: tmp13 [1/1] 1.73ns
.preheader:121  %tmp13 = add i16 %tmp14_cast, %p_Val2_3_3_4

ST_12: tmp16 [1/1] 1.37ns
.preheader:122  %tmp16 = add i12 %tmp_320_4_cast, %tmp_320_4_cast_76

ST_12: tmp15 [1/1] 1.37ns
.preheader:123  %tmp15 = add i12 %tmp16, %tmp_320_4_3_cast

ST_12: tmp15_cast [1/1] 0.00ns
.preheader:124  %tmp15_cast = sext i12 %tmp15 to i16

ST_12: p_Val2_7 [1/1] 1.73ns
.preheader:125  %p_Val2_7 = add i16 %tmp15_cast, %tmp13

ST_12: isneg [1/1] 0.00ns
.preheader:126  %isneg = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %p_Val2_7, i32 15)

ST_12: p_Val2_8 [1/1] 0.00ns
.preheader:127  %p_Val2_8 = trunc i16 %p_Val2_7 to i8

ST_12: tmp_46 [1/1] 0.00ns
.preheader:128  %tmp_46 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %p_Val2_7, i32 8, i32 15)


 <State 13>: 7.81ns
ST_13: tmp_i_i [1/1] 1.37ns
.preheader:129  %tmp_i_i = xor i1 %isneg, true

ST_13: not_i_i_i [1/1] 2.00ns
.preheader:130  %not_i_i_i = icmp ne i8 %tmp_46, 0

ST_13: overflow [1/1] 1.37ns
.preheader:131  %overflow = and i1 %not_i_i_i, %tmp_i_i

ST_13: p_mux_i_i_cast [1/1] 1.37ns
.preheader:132  %p_mux_i_i_cast = select i1 %tmp_i_i, i8 -1, i8 0

ST_13: tmp_i_i_77 [1/1] 1.37ns
.preheader:133  %tmp_i_i_77 = or i1 %isneg, %overflow

ST_13: p_Val2_10 [1/1] 1.37ns
.preheader:134  %p_Val2_10 = select i1 %tmp_i_i_77, i8 %p_mux_i_i_cast, i8 %p_Val2_8

ST_13: stg_706 [1/1] 1.70ns
.preheader:135  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %p_dst_data_stream_V, i8 %p_Val2_10)

ST_13: stg_707 [1/1] 0.00ns
.preheader:136  br label %._crit_edge245.i


 <State 14>: 0.00ns
ST_14: empty_78 [1/1] 0.00ns
:0  %empty_78 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1819, i32 %tmp)

ST_14: stg_709 [1/1] 0.00ns
:1  br label %0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A



================================================================
== Vivado HLS Report for 'toThreshold_Filter2D'
================================================================
* Date:           Fri Jun 26 18:10:42 2015

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        threshold_IP
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.67|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------+-----+---------+---------+
    |    Latency    |    Interval   | Pipeline|
    | min |   max   | min |   max   |   Type  |
    +-----+---------+-----+---------+---------+
    |  477|  2112661|  477|  2112661|   none  |
    +-----+---------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+-----+---------+-----------+-----------+-----------+-----------+----------+
        |               |    Latency    | Iteration |  Initiation Interval  |    Trip   |          |
        |   Loop Name   | min |   max   |  Latency  |  achieved |   target  |   Count   | Pipelined|
        +---------------+-----+---------+-----------+-----------+-----------+-----------+----------+
        |- loop_height  |  476|  2112660| 28 ~ 1940 |          -|          -| 17 ~ 1089 |    no    |
        | + loop_width  |   25|     1937|         15|          1|          1| 12 ~ 1924 |    yes   |
        +---------------+-----+---------+-----------+-----------+-----------+-----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 15


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 18
* Pipeline: 1
  Pipeline-0: II = 1, D = 15, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_54)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	18  / (!tmp_60)
	9  / (tmp_60)
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	3  / true
18 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.84ns
ST_1: src_kernel_win_0_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:0  %src_kernel_win_0_val_0_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:1  %src_kernel_win_0_val_0_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_0_3 [1/1] 0.00ns
arrayctor.loop.i:2  %src_kernel_win_0_val_0_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_0_4 [1/1] 0.00ns
arrayctor.loop.i:3  %src_kernel_win_0_val_0_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_5 [1/1] 0.00ns
arrayctor.loop.i:4  %col_buf_0_val_0_0_5 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_1 [1/1] 0.00ns
arrayctor.loop.i:5  %src_kernel_win_0_val_1_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:6  %src_kernel_win_0_val_1_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_3 [1/1] 0.00ns
arrayctor.loop.i:7  %src_kernel_win_0_val_1_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_4 [1/1] 0.00ns
arrayctor.loop.i:8  %src_kernel_win_0_val_1_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_7 [1/1] 0.00ns
arrayctor.loop.i:9  %col_buf_0_val_0_0_7 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_1 [1/1] 0.00ns
arrayctor.loop.i:10  %src_kernel_win_0_val_2_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_2 [1/1] 0.00ns
arrayctor.loop.i:11  %src_kernel_win_0_val_2_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_3 [1/1] 0.00ns
arrayctor.loop.i:12  %src_kernel_win_0_val_2_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_4 [1/1] 0.00ns
arrayctor.loop.i:13  %src_kernel_win_0_val_2_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_8 [1/1] 0.00ns
arrayctor.loop.i:14  %col_buf_0_val_0_0_8 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_1 [1/1] 0.00ns
arrayctor.loop.i:15  %src_kernel_win_0_val_4_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_1 [1/1] 0.00ns
arrayctor.loop.i:16  %src_kernel_win_0_val_3_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_2 [1/1] 0.00ns
arrayctor.loop.i:17  %src_kernel_win_0_val_3_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_3 [1/1] 0.00ns
arrayctor.loop.i:18  %src_kernel_win_0_val_3_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_3_4 [1/1] 0.00ns
arrayctor.loop.i:19  %src_kernel_win_0_val_3_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_9 [1/1] 0.00ns
arrayctor.loop.i:20  %col_buf_0_val_0_0_9 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_2 [1/1] 0.00ns
arrayctor.loop.i:21  %src_kernel_win_0_val_4_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_3 [1/1] 0.00ns
arrayctor.loop.i:22  %src_kernel_win_0_val_4_3 = alloca i8, align 1

ST_1: src_kernel_win_0_val_4_4 [1/1] 0.00ns
arrayctor.loop.i:23  %src_kernel_win_0_val_4_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_10 [1/1] 0.00ns
arrayctor.loop.i:24  %col_buf_0_val_0_0_10 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_3 [1/1] 0.00ns
arrayctor.loop.i:25  %right_border_buf_0_val_1_4_3 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_4 [1/1] 0.00ns
arrayctor.loop.i:26  %right_border_buf_0_val_1_4_4 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_13 [1/1] 0.00ns
arrayctor.loop.i:27  %right_border_buf_0_val_1_4_13 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_14 [1/1] 0.00ns
arrayctor.loop.i:28  %right_border_buf_0_val_1_4_14 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_4_15 [1/1] 0.00ns
arrayctor.loop.i:29  %right_border_buf_0_val_1_4_15 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_3 [1/1] 0.00ns
arrayctor.loop.i:30  %right_border_buf_0_val_2_4_3 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_4 [1/1] 0.00ns
arrayctor.loop.i:31  %right_border_buf_0_val_2_4_4 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_6 [1/1] 0.00ns
arrayctor.loop.i:32  %right_border_buf_0_val_2_4_6 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_7 [1/1] 0.00ns
arrayctor.loop.i:33  %right_border_buf_0_val_2_4_7 = alloca i8, align 1

ST_1: right_border_buf_0_val_2_4_8 [1/1] 0.00ns
arrayctor.loop.i:34  %right_border_buf_0_val_2_4_8 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_3 [1/1] 0.00ns
arrayctor.loop.i:35  %right_border_buf_0_val_3_4_3 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_4 [1/1] 0.00ns
arrayctor.loop.i:36  %right_border_buf_0_val_3_4_4 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_13 [1/1] 0.00ns
arrayctor.loop.i:37  %right_border_buf_0_val_3_4_13 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_14 [1/1] 0.00ns
arrayctor.loop.i:38  %right_border_buf_0_val_3_4_14 = alloca i8, align 1

ST_1: right_border_buf_0_val_3_4_15 [1/1] 0.00ns
arrayctor.loop.i:39  %right_border_buf_0_val_3_4_15 = alloca i8, align 1

ST_1: stg_59 [1/1] 0.00ns
arrayctor.loop.i:40  call void (...)* @_ssdm_op_SpecInterface(i8* %p_dst_data_stream_V, [8 x i8]* @str236, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str237, [1 x i8]* @str237, [8 x i8]* @str236)

ST_1: stg_60 [1/1] 0.00ns
arrayctor.loop.i:41  call void (...)* @_ssdm_op_SpecInterface(i8* %p_src_data_stream_V, [8 x i8]* @str232, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str233, [1 x i8]* @str233, [8 x i8]* @str232)

ST_1: p_src_cols_V_read_1 [1/1] 0.00ns
arrayctor.loop.i:42  %p_src_cols_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_cols_V_read)

ST_1: p_src_rows_V_read_1 [1/1] 0.00ns
arrayctor.loop.i:43  %p_src_rows_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_rows_V_read)

ST_1: k_buf_0_val_0 [1/1] 0.00ns
arrayctor.loop.i:44  %k_buf_0_val_0 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_1 [1/1] 0.00ns
arrayctor.loop.i:45  %k_buf_0_val_1 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_2 [1/1] 0.00ns
arrayctor.loop.i:46  %k_buf_0_val_2 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_3 [1/1] 0.00ns
arrayctor.loop.i:47  %k_buf_0_val_3 = alloca [1920 x i8], align 1

ST_1: k_buf_0_val_4 [1/1] 0.00ns
arrayctor.loop.i:48  %k_buf_0_val_4 = alloca [1920 x i8], align 1

ST_1: right_border_buf_0_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:49  %right_border_buf_0_val_0_0 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:50  %right_border_buf_0_val_0_1 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:51  %right_border_buf_0_val_0_2 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_3 [1/1] 0.00ns
arrayctor.loop.i:52  %right_border_buf_0_val_0_3 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_4 [1/1] 0.00ns
arrayctor.loop.i:53  %right_border_buf_0_val_0_4 = alloca i8, align 1

ST_1: col_buf_0_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:54  %col_buf_0_val_0_0 = alloca i8, align 1

ST_1: tmp_55 [1/1] 0.00ns
arrayctor.loop.i:55  %tmp_55 = trunc i12 %p_src_rows_V_read_1 to i11

ST_1: tmp_59 [1/1] 0.00ns
arrayctor.loop.i:56  %tmp_59 = trunc i12 %p_src_cols_V_read_1 to i11

ST_1: stg_76 [1/1] 0.00ns
arrayctor.loop.i:57  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: rbegin_i_i [1/1] 0.00ns
arrayctor.loop.i:58  %rbegin_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([61 x i8]* @p_str29) nounwind

ST_1: rend_i_i [1/1] 0.00ns
arrayctor.loop.i:59  %rend_i_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([61 x i8]* @p_str29, i32 %rbegin_i_i) nounwind

ST_1: stg_79 [1/1] 0.00ns
arrayctor.loop.i:60  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: rbegin_i250_i [1/1] 0.00ns
arrayctor.loop.i:61  %rbegin_i250_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str41) nounwind

ST_1: rend_i251_i [1/1] 0.00ns
arrayctor.loop.i:62  %rend_i251_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str41, i32 %rbegin_i250_i) nounwind

ST_1: stg_82 [1/1] 0.00ns
arrayctor.loop.i:63  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: rbegin_i252_i [1/1] 0.00ns
arrayctor.loop.i:64  %rbegin_i252_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str52) nounwind

ST_1: rend_i253_i [1/1] 0.00ns
arrayctor.loop.i:65  %rend_i253_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str52, i32 %rbegin_i252_i) nounwind

ST_1: stg_85 [1/1] 0.00ns
arrayctor.loop.i:66  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_1: heightloop [1/1] 1.84ns
arrayctor.loop.i:67  %heightloop = add i11 %tmp_55, 9

ST_1: widthloop [1/1] 1.84ns
arrayctor.loop.i:68  %widthloop = add i11 %tmp_59, 4

ST_1: tmp_s [1/1] 1.84ns
arrayctor.loop.i:69  %tmp_s = add i11 %tmp_59, -5

ST_1: tmp_123_cast [1/1] 0.00ns
arrayctor.loop.i:70  %tmp_123_cast = zext i11 %tmp_s to i12

ST_1: p_neg228_i [1/1] 1.84ns
arrayctor.loop.i:71  %p_neg228_i = sub i12 5, %p_src_cols_V_read_1

ST_1: tmp_61 [1/1] 0.00ns
arrayctor.loop.i:72  %tmp_61 = trunc i12 %p_neg228_i to i3

ST_1: ref [1/1] 1.84ns
arrayctor.loop.i:73  %ref = add i11 %tmp_55, -1

ST_1: ref_cast [1/1] 0.00ns
arrayctor.loop.i:74  %ref_cast = zext i11 %ref to i12

ST_1: stg_94 [1/1] 1.57ns
arrayctor.loop.i:75  br label %0


 <State 2>: 6.72ns
ST_2: p_012_0_i [1/1] 0.00ns
:0  %p_012_0_i = phi i11 [ 0, %arrayctor.loop.i ], [ %i_V, %5 ]

ST_2: tmp_124_cast [1/1] 0.00ns
:1  %tmp_124_cast = zext i11 %p_012_0_i to i12

ST_2: tmp_54 [1/1] 2.11ns
:2  %tmp_54 = icmp ult i11 %p_012_0_i, %heightloop

ST_2: stg_98 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 17, i64 1089, i64 0)

ST_2: i_V [1/1] 1.84ns
:4  %i_V = add i11 %p_012_0_i, 1

ST_2: stg_100 [1/1] 0.00ns
:5  br i1 %tmp_54, label %1, label %"filter<0, 0, ap_fixed<16, 2, 0, 3, 0>, int, 1080, 1920, 5, 5>.exit"

ST_2: stg_101 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1819) nounwind

ST_2: tmp [1/1] 0.00ns
:1  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1819)

ST_2: tmp_56 [1/1] 2.11ns
:2  %tmp_56 = icmp ugt i11 %p_012_0_i, 8

ST_2: ImagLoc_y [1/1] 1.84ns
:3  %ImagLoc_y = add i12 %tmp_124_cast, -7

ST_2: tmp_57 [1/1] 2.14ns
:4  %tmp_57 = icmp slt i12 %ImagLoc_y, -2

ST_2: tmp_64 [1/1] 0.00ns
:5  %tmp_64 = call i10 @_ssdm_op_PartSelect.i10.i12.i32.i32(i12 %ImagLoc_y, i32 2, i32 11)

ST_2: icmp [1/1] 2.07ns
:6  %icmp = icmp sgt i10 %tmp_64, 0

ST_2: tmp_58 [1/1] 2.14ns
:7  %tmp_58 = icmp slt i12 %ImagLoc_y, %ref_cast

ST_2: or_cond6 [1/1] 1.37ns
:8  %or_cond6 = and i1 %icmp, %tmp_58

ST_2: tmp_65 [1/1] 0.00ns
:9  %tmp_65 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_y, i32 11)

ST_2: p_i [1/1] 1.37ns
:10  %p_i = select i1 %tmp_58, i11 4, i11 %ref

ST_2: tmp_66 [1/1] 0.00ns
:11  %tmp_66 = trunc i11 %p_i to i3

ST_2: ImagLoc_y_cast_cast [1/1] 0.00ns
:12  %ImagLoc_y_cast_cast = zext i12 %ImagLoc_y to i13

ST_2: y_3 [1/1] 1.84ns
:13  %y_3 = add i12 %tmp_124_cast, -8

ST_2: y_3_cast_cast [1/1] 0.00ns
:14  %y_3_cast_cast = sext i12 %y_3 to i13

ST_2: tmp_68 [1/1] 0.00ns
:15  %tmp_68 = trunc i11 %p_i to i3

ST_2: y_3_1 [1/1] 1.84ns
:16  %y_3_1 = add i12 %tmp_124_cast, -9

ST_2: y_3_1_cast_cast [1/1] 0.00ns
:17  %y_3_1_cast_cast = sext i12 %y_3_1 to i13

ST_2: y_3_2 [1/1] 1.84ns
:18  %y_3_2 = add i12 %tmp_124_cast, -10

ST_2: y_3_2_cast_cast [1/1] 0.00ns
:19  %y_3_2_cast_cast = sext i12 %y_3_2 to i13

ST_2: y_3_3 [1/1] 1.84ns
:20  %y_3_3 = add i12 %tmp_124_cast, -11

ST_2: y_3_3_cast_cast [1/1] 0.00ns
:21  %y_3_3_cast_cast = sext i12 %y_3_3 to i13

ST_2: brmerge [1/1] 1.37ns
:22  %brmerge = or i1 %tmp_57, %or_cond6

ST_2: stg_124 [1/1] 1.57ns
:23  br label %2

ST_2: stg_125 [1/1] 0.00ns
filter<0, 0, ap_fixed<16, 2, 0, 3, 0>, int, 1080, 1920, 5, 5>.exit:0  ret void


 <State 3>: 8.04ns
ST_3: p_025_0_i [1/1] 0.00ns
:0  %p_025_0_i = phi i11 [ 0, %1 ], [ %j_V, %._crit_edge245.i ]

ST_3: tmp_127_cast [1/1] 0.00ns
:6  %tmp_127_cast = zext i11 %p_025_0_i to i12

ST_3: tmp_60 [1/1] 2.11ns
:7  %tmp_60 = icmp ult i11 %p_025_0_i, %widthloop

ST_3: j_V [1/1] 1.84ns
:9  %j_V = add i11 %p_025_0_i, 1

ST_3: stg_130 [1/1] 0.00ns
:10  br i1 %tmp_60, label %.critedge.i, label %5

ST_3: tmp_71 [1/1] 0.00ns
.critedge.i:3  %tmp_71 = call i9 @_ssdm_op_PartSelect.i9.i11.i32.i32(i11 %p_025_0_i, i32 2, i32 10)

ST_3: icmp1 [1/1] 2.03ns
.critedge.i:4  %icmp1 = icmp ne i9 %tmp_71, 0

ST_3: or_cond221_i [1/1] 1.37ns
.critedge.i:5  %or_cond221_i = and i1 %tmp_56, %icmp1

ST_3: ImagLoc_x [1/1] 1.84ns
.critedge.i:7  %ImagLoc_x = add i12 %tmp_127_cast, -2

ST_3: tmp_72 [1/1] 0.00ns
.critedge.i:8  %tmp_72 = trunc i12 %ImagLoc_x to i3

ST_3: ImagLoc_x_cast65_cast [1/1] 0.00ns
.critedge.i:9  %ImagLoc_x_cast65_cast = sext i12 %ImagLoc_x to i13

ST_3: x [3/3] 6.20ns
.critedge.i:10  %x = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_x_cast65_cast, i12 %p_src_cols_V_read_1, i4 4) nounwind

ST_3: stg_138 [1/1] 0.00ns
.critedge.i:25  br i1 %brmerge, label %._crit_edge234.i, label %._crit_edge235.i

ST_3: stg_139 [1/1] 0.00ns
._crit_edge235.i:0  br i1 %tmp_65, label %.loopexit224.i, label %._crit_edge243.i.0

ST_3: t_4 [3/3] 6.20ns
._crit_edge243.i.0:48  %t_4 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_3_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_3: tmp_74 [1/1] 0.00ns
._crit_edge234.i:0  %tmp_74 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_x, i32 11)

ST_3: rev [1/1] 1.37ns
._crit_edge234.i:1  %rev = xor i1 %tmp_74, true

ST_3: tmp_67 [1/1] 2.14ns
._crit_edge234.i:2  %tmp_67 = icmp slt i12 %ImagLoc_x, %p_src_cols_V_read_1

ST_3: or_cond7 [1/1] 1.37ns
._crit_edge234.i:3  %or_cond7 = and i1 %tmp_67, %rev

ST_3: stg_145 [1/1] 0.00ns
._crit_edge234.i:4  br i1 %or_cond7, label %3, label %._crit_edge238.i

ST_3: tmp_75 [1/1] 0.00ns
._crit_edge238.i:0  %tmp_75 = call i1 @_ssdm_op_BitSelect.i1.i12.i32(i12 %ImagLoc_x, i32 11)

ST_3: stg_147 [1/1] 0.00ns
._crit_edge238.i:1  br i1 %tmp_75, label %.loopexit224.i.pre, label %4

ST_3: stg_148 [1/1] 0.00ns
:0  br i1 %tmp_67, label %.loopexit224.i, label %.preheader.preheader.i

ST_3: tmp_69 [1/1] 2.14ns
:0  %tmp_69 = icmp slt i12 %ImagLoc_x, %tmp_123_cast

ST_3: stg_150 [1/1] 0.00ns
:1  br i1 %tmp_69, label %._crit_edge241.i.1.critedge.critedge, label %"operator().exit290.i"

ST_3: col_assign [1/1] 0.80ns
operator().exit290.i:0  %col_assign = add i3 %tmp_72, %tmp_61

ST_3: stg_152 [1/1] 1.88ns
operator().exit290.i:1  switch i3 %col_assign, label %branch34 [
    i3 0, label %branch30
    i3 1, label %branch31
    i3 2, label %branch32
    i3 3, label %branch33
  ]

ST_3: stg_153 [1/1] 0.00ns
._crit_edge241.i.1:1  br i1 %tmp_69, label %._crit_edge241.i.3.critedge, label %"operator().exit288.i.2_ifconv"

ST_3: col_assign_18_2 [1/1] 1.84ns
operator().exit288.i.2_ifconv:5  %col_assign_18_2 = add i12 %ImagLoc_x, %p_neg228_i

ST_3: tmp_81 [1/1] 0.00ns
operator().exit288.i.2_ifconv:6  %tmp_81 = trunc i12 %col_assign_18_2 to i3


 <State 4>: 8.25ns
ST_4: x [2/3] 8.25ns
.critedge.i:10  %x = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_x_cast65_cast, i12 %p_src_cols_V_read_1, i4 4) nounwind

ST_4: t_4 [2/3] 8.25ns
._crit_edge243.i.0:48  %t_4 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_3_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind


 <State 5>: 8.22ns
ST_5: x [1/3] 8.22ns
.critedge.i:10  %x = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_x_cast65_cast, i12 %p_src_cols_V_read_1, i4 4) nounwind

ST_5: tmp_73 [1/1] 0.00ns
.critedge.i:12  %tmp_73 = trunc i15 %x to i3

ST_5: t [3/3] 6.20ns
._crit_edge243.i.0:0  %t = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_y_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_5: t_1 [3/3] 6.20ns
._crit_edge243.i.0:12  %t_1 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_5: t_2 [3/3] 6.20ns
._crit_edge243.i.0:24  %t_2 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_1_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_5: t_3 [3/3] 6.20ns
._crit_edge243.i.0:36  %t_3 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_2_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_5: t_4 [1/3] 8.22ns
._crit_edge243.i.0:48  %t_4 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_3_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_5: tmp_80 [1/1] 0.00ns
._crit_edge243.i.0:49  %tmp_80 = trunc i15 %t_4 to i3


 <State 6>: 8.25ns
ST_6: x_1 [1/1] 0.00ns
.critedge.i:11  %x_1 = sext i15 %x to i32

ST_6: tmp_63 [1/1] 0.00ns
.critedge.i:13  %tmp_63 = zext i32 %x_1 to i64

ST_6: k_buf_0_val_0_addr [1/1] 0.00ns
.critedge.i:14  %k_buf_0_val_0_addr = getelementptr [1920 x i8]* %k_buf_0_val_0, i64 0, i64 %tmp_63

ST_6: right_border_buf_0_val_4_0 [2/2] 2.39ns
.critedge.i:15  %right_border_buf_0_val_4_0 = load i8* %k_buf_0_val_0_addr, align 1

ST_6: k_buf_0_val_1_addr [1/1] 0.00ns
.critedge.i:17  %k_buf_0_val_1_addr = getelementptr [1920 x i8]* %k_buf_0_val_1, i64 0, i64 %tmp_63

ST_6: right_border_buf_0_val_3_0 [2/2] 2.39ns
.critedge.i:18  %right_border_buf_0_val_3_0 = load i8* %k_buf_0_val_1_addr, align 1

ST_6: k_buf_0_val_2_addr [1/1] 0.00ns
.critedge.i:19  %k_buf_0_val_2_addr = getelementptr [1920 x i8]* %k_buf_0_val_2, i64 0, i64 %tmp_63

ST_6: right_border_buf_0_val_2_0 [2/2] 2.39ns
.critedge.i:20  %right_border_buf_0_val_2_0 = load i8* %k_buf_0_val_2_addr, align 1

ST_6: k_buf_0_val_3_addr [1/1] 0.00ns
.critedge.i:21  %k_buf_0_val_3_addr = getelementptr [1920 x i8]* %k_buf_0_val_3, i64 0, i64 %tmp_63

ST_6: right_border_buf_0_val_1_0 [2/2] 2.39ns
.critedge.i:22  %right_border_buf_0_val_1_0 = load i8* %k_buf_0_val_3_addr, align 1

ST_6: k_buf_0_val_4_addr [1/1] 0.00ns
.critedge.i:23  %k_buf_0_val_4_addr = getelementptr [1920 x i8]* %k_buf_0_val_4, i64 0, i64 %tmp_63

ST_6: src_kernel_win_0_val_4_0 [2/2] 2.39ns
.critedge.i:24  %src_kernel_win_0_val_4_0 = load i8* %k_buf_0_val_4_addr, align 1

ST_6: t [2/3] 8.25ns
._crit_edge243.i.0:0  %t = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_y_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_6: t_1 [2/3] 8.25ns
._crit_edge243.i.0:12  %t_1 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_6: t_2 [2/3] 8.25ns
._crit_edge243.i.0:24  %t_2 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_1_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_6: t_3 [2/3] 8.25ns
._crit_edge243.i.0:36  %t_3 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_2_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_6: locy_4_t [1/1] 0.80ns
._crit_edge243.i.0:50  %locy_4_t = sub i3 %tmp_68, %tmp_80

ST_6: stg_183 [1/1] 1.88ns
._crit_edge243.i.0:51  switch i3 %locy_4_t, label %branch24 [
    i3 0, label %branch20
    i3 1, label %.loopexit224.i.pre243
    i3 2, label %branch22
    i3 3, label %branch23
  ]

ST_6: stg_184 [1/1] 0.00ns
branch23:5  br label %.loopexit224.i

ST_6: stg_185 [1/1] 0.00ns
branch22:5  br label %.loopexit224.i

ST_6: stg_186 [1/1] 0.00ns
.loopexit224.i.pre243:5  br label %.loopexit224.i

ST_6: stg_187 [1/1] 0.00ns
branch20:6  br label %.loopexit224.i

ST_6: stg_188 [1/1] 0.00ns
branch24:5  br label %.loopexit224.i

ST_6: col_assign_2 [1/1] 0.80ns
.preheader.preheader.i:20  %col_assign_2 = add i3 %tmp_73, %tmp_61

ST_6: stg_190 [1/1] 0.00ns
branch28:6  br label %.loopexit224.i

ST_6: stg_191 [1/1] 0.00ns
branch27:6  br label %.loopexit224.i

ST_6: stg_192 [1/1] 0.00ns
branch26:6  br label %.loopexit224.i

ST_6: stg_193 [1/1] 0.00ns
branch25:6  br label %.loopexit224.i

ST_6: stg_194 [1/1] 0.00ns
branch29:6  br label %.loopexit224.i

ST_6: stg_195 [1/1] 0.00ns
.loopexit224.i.pre:5  br label %.loopexit224.i

ST_6: stg_196 [1/1] 0.00ns
._crit_edge241.i.3:7  br label %.loopexit224.i


 <State 7>: 8.22ns
ST_7: stg_197 [1/1] 0.00ns
.critedge.i:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1820) nounwind

ST_7: tmp_62 [1/1] 0.00ns
.critedge.i:1  %tmp_62 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1820)

ST_7: stg_199 [1/1] 0.00ns
.critedge.i:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1806) nounwind

ST_7: stg_200 [1/1] 0.00ns
.critedge.i:6  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1833) nounwind

ST_7: right_border_buf_0_val_4_0 [1/2] 2.39ns
.critedge.i:15  %right_border_buf_0_val_4_0 = load i8* %k_buf_0_val_0_addr, align 1

ST_7: stg_202 [1/1] 0.00ns
.critedge.i:16  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0, align 1

ST_7: right_border_buf_0_val_3_0 [1/2] 2.39ns
.critedge.i:18  %right_border_buf_0_val_3_0 = load i8* %k_buf_0_val_1_addr, align 1

ST_7: right_border_buf_0_val_2_0 [1/2] 2.39ns
.critedge.i:20  %right_border_buf_0_val_2_0 = load i8* %k_buf_0_val_2_addr, align 1

ST_7: right_border_buf_0_val_1_0 [1/2] 2.39ns
.critedge.i:22  %right_border_buf_0_val_1_0 = load i8* %k_buf_0_val_3_addr, align 1

ST_7: src_kernel_win_0_val_4_0 [1/2] 2.39ns
.critedge.i:24  %src_kernel_win_0_val_4_0 = load i8* %k_buf_0_val_4_addr, align 1

ST_7: t [1/3] 8.22ns
._crit_edge243.i.0:0  %t = call fastcc i15 @toThreshold_borderInterpolate(i13 %ImagLoc_y_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_7: tmp_76 [1/1] 0.00ns
._crit_edge243.i.0:1  %tmp_76 = trunc i15 %t to i3

ST_7: t_1 [1/3] 8.22ns
._crit_edge243.i.0:12  %t_1 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_7: tmp_77 [1/1] 0.00ns
._crit_edge243.i.0:13  %tmp_77 = trunc i15 %t_1 to i3

ST_7: t_2 [1/3] 8.22ns
._crit_edge243.i.0:24  %t_2 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_1_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_7: tmp_78 [1/1] 0.00ns
._crit_edge243.i.0:25  %tmp_78 = trunc i15 %t_2 to i3

ST_7: t_3 [1/3] 8.22ns
._crit_edge243.i.0:36  %t_3 = call fastcc i15 @toThreshold_borderInterpolate(i13 %y_3_2_cast_cast, i12 %p_src_rows_V_read_1, i4 4) nounwind

ST_7: tmp_79 [1/1] 0.00ns
._crit_edge243.i.0:37  %tmp_79 = trunc i15 %t_3 to i3

ST_7: stg_215 [1/1] 0.00ns
branch33:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_3, align 1

ST_7: stg_216 [1/1] 0.00ns
branch33:1  br label %"operator().exit290.i689"

ST_7: stg_217 [1/1] 0.00ns
branch32:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_2, align 1

ST_7: stg_218 [1/1] 0.00ns
branch32:1  br label %"operator().exit290.i689"

ST_7: stg_219 [1/1] 0.00ns
branch31:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_1, align 1

ST_7: stg_220 [1/1] 0.00ns
branch31:1  br label %"operator().exit290.i689"

ST_7: stg_221 [1/1] 0.00ns
branch30:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_0, align 1

ST_7: stg_222 [1/1] 0.00ns
branch30:1  br label %"operator().exit290.i689"

ST_7: stg_223 [1/1] 0.00ns
branch34:0  store i8 %src_kernel_win_0_val_4_0, i8* %right_border_buf_0_val_0_4, align 1

ST_7: stg_224 [1/1] 0.00ns
branch34:1  br label %"operator().exit290.i689"

ST_7: right_border_buf_0_val_1_4_s [1/1] 0.00ns
operator().exit290.i689:0  %right_border_buf_0_val_1_4_s = load i8* %right_border_buf_0_val_1_4_3, align 1

ST_7: right_border_buf_0_val_1_4_1 [1/1] 0.00ns
operator().exit290.i689:1  %right_border_buf_0_val_1_4_1 = load i8* %right_border_buf_0_val_1_4_4, align 1

ST_7: right_border_buf_0_val_1_4_2 [1/1] 0.00ns
operator().exit290.i689:2  %right_border_buf_0_val_1_4_2 = load i8* %right_border_buf_0_val_1_4_13, align 1

ST_7: right_border_buf_0_val_1_4_3_48 [1/1] 0.00ns
operator().exit290.i689:3  %right_border_buf_0_val_1_4_3_48 = load i8* %right_border_buf_0_val_1_4_14, align 1

ST_7: right_border_buf_0_val_1_4_4_49 [1/1] 0.00ns
operator().exit290.i689:4  %right_border_buf_0_val_1_4_4_49 = load i8* %right_border_buf_0_val_1_4_15, align 1

ST_7: stg_230 [1/1] 2.39ns
operator().exit290.i689:5  store i8 %right_border_buf_0_val_1_0, i8* %k_buf_0_val_4_addr, align 1

ST_7: sel_tmp32 [1/1] 1.62ns
operator().exit290.i689:6  %sel_tmp32 = icmp eq i3 %col_assign, 3

ST_7: right_border_buf_0_val_1_4_5 [1/1] 1.37ns
operator().exit290.i689:7  %right_border_buf_0_val_1_4_5 = select i1 %sel_tmp32, i8 %right_border_buf_0_val_1_4_4_49, i8 %right_border_buf_0_val_1_0

ST_7: sel_tmp33 [1/1] 1.62ns
operator().exit290.i689:8  %sel_tmp33 = icmp eq i3 %col_assign, 2

ST_7: right_border_buf_0_val_1_4_6 [1/1] 1.37ns
operator().exit290.i689:9  %right_border_buf_0_val_1_4_6 = select i1 %sel_tmp33, i8 %right_border_buf_0_val_1_4_4_49, i8 %right_border_buf_0_val_1_4_5

ST_7: sel_tmp34 [1/1] 1.62ns
operator().exit290.i689:10  %sel_tmp34 = icmp eq i3 %col_assign, 1

ST_7: right_border_buf_0_val_1_4_7 [1/1] 1.37ns
operator().exit290.i689:11  %right_border_buf_0_val_1_4_7 = select i1 %sel_tmp34, i8 %right_border_buf_0_val_1_4_4_49, i8 %right_border_buf_0_val_1_4_6

ST_7: sel_tmp35 [1/1] 1.62ns
operator().exit290.i689:12  %sel_tmp35 = icmp eq i3 %col_assign, 0

ST_7: right_border_buf_0_val_1_4_8 [1/1] 1.37ns
operator().exit290.i689:13  %right_border_buf_0_val_1_4_8 = select i1 %sel_tmp35, i8 %right_border_buf_0_val_1_4_4_49, i8 %right_border_buf_0_val_1_4_7

ST_7: right_border_buf_0_val_1_4_9 [1/1] 1.37ns
operator().exit290.i689:14  %right_border_buf_0_val_1_4_9 = select i1 %sel_tmp32, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_3_48

ST_7: right_border_buf_0_val_1_4_18 [1/1] 1.37ns
operator().exit290.i689:15  %right_border_buf_0_val_1_4_18 = select i1 %sel_tmp33, i8 %right_border_buf_0_val_1_4_3_48, i8 %right_border_buf_0_val_1_4_9

ST_7: right_border_buf_0_val_1_4_19 [1/1] 1.37ns
operator().exit290.i689:16  %right_border_buf_0_val_1_4_19 = select i1 %sel_tmp34, i8 %right_border_buf_0_val_1_4_3_48, i8 %right_border_buf_0_val_1_4_18

ST_7: right_border_buf_0_val_1_4_20 [1/1] 1.37ns
operator().exit290.i689:17  %right_border_buf_0_val_1_4_20 = select i1 %sel_tmp35, i8 %right_border_buf_0_val_1_4_3_48, i8 %right_border_buf_0_val_1_4_19

ST_7: right_border_buf_0_val_1_4_21 [1/1] 1.37ns
operator().exit290.i689:18  %right_border_buf_0_val_1_4_21 = select i1 %sel_tmp33, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_2

ST_7: right_border_buf_0_val_1_4_22 [1/1] 1.37ns
operator().exit290.i689:19  %right_border_buf_0_val_1_4_22 = select i1 %sel_tmp34, i8 %right_border_buf_0_val_1_4_2, i8 %right_border_buf_0_val_1_4_21

ST_7: right_border_buf_0_val_1_4_23 [1/1] 1.37ns
operator().exit290.i689:20  %right_border_buf_0_val_1_4_23 = select i1 %sel_tmp35, i8 %right_border_buf_0_val_1_4_2, i8 %right_border_buf_0_val_1_4_22

ST_7: right_border_buf_0_val_1_4_24 [1/1] 1.37ns
operator().exit290.i689:21  %right_border_buf_0_val_1_4_24 = select i1 %sel_tmp34, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_1

ST_7: right_border_buf_0_val_1_4_25 [1/1] 1.37ns
operator().exit290.i689:22  %right_border_buf_0_val_1_4_25 = select i1 %sel_tmp35, i8 %right_border_buf_0_val_1_4_1, i8 %right_border_buf_0_val_1_4_24

ST_7: right_border_buf_0_val_1_4_26 [1/1] 1.37ns
operator().exit290.i689:23  %right_border_buf_0_val_1_4_26 = select i1 %sel_tmp35, i8 %right_border_buf_0_val_1_0, i8 %right_border_buf_0_val_1_4_s

ST_7: stg_249 [1/1] 2.39ns
operator().exit290.i689:24  store i8 %right_border_buf_0_val_2_0, i8* %k_buf_0_val_3_addr, align 1

ST_7: stg_250 [1/1] 1.88ns
operator().exit290.i689:25  switch i3 %col_assign, label %branch54 [
    i3 0, label %._crit_edge241.i.1.pre
    i3 1, label %branch51
    i3 2, label %branch52
    i3 3, label %branch53
  ]

ST_7: stg_251 [1/1] 0.00ns
branch53:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_7, align 1

ST_7: stg_252 [1/1] 0.00ns
branch53:1  store i8 %right_border_buf_0_val_1_4_8, i8* %right_border_buf_0_val_1_4_15, align 1

ST_7: stg_253 [1/1] 0.00ns
branch53:2  store i8 %right_border_buf_0_val_1_4_20, i8* %right_border_buf_0_val_1_4_14, align 1

ST_7: stg_254 [1/1] 0.00ns
branch53:3  store i8 %right_border_buf_0_val_1_4_23, i8* %right_border_buf_0_val_1_4_13, align 1

ST_7: stg_255 [1/1] 0.00ns
branch53:4  store i8 %right_border_buf_0_val_1_4_25, i8* %right_border_buf_0_val_1_4_4, align 1

ST_7: stg_256 [1/1] 0.00ns
branch53:5  store i8 %right_border_buf_0_val_1_4_26, i8* %right_border_buf_0_val_1_4_3, align 1

ST_7: stg_257 [1/1] 0.00ns
branch53:6  br label %._crit_edge241.i.1

ST_7: stg_258 [1/1] 0.00ns
branch52:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_6, align 1

ST_7: stg_259 [1/1] 0.00ns
branch52:1  store i8 %right_border_buf_0_val_1_4_8, i8* %right_border_buf_0_val_1_4_15, align 1

ST_7: stg_260 [1/1] 0.00ns
branch52:2  store i8 %right_border_buf_0_val_1_4_20, i8* %right_border_buf_0_val_1_4_14, align 1

ST_7: stg_261 [1/1] 0.00ns
branch52:3  store i8 %right_border_buf_0_val_1_4_23, i8* %right_border_buf_0_val_1_4_13, align 1

ST_7: stg_262 [1/1] 0.00ns
branch52:4  store i8 %right_border_buf_0_val_1_4_25, i8* %right_border_buf_0_val_1_4_4, align 1

ST_7: stg_263 [1/1] 0.00ns
branch52:5  store i8 %right_border_buf_0_val_1_4_26, i8* %right_border_buf_0_val_1_4_3, align 1

ST_7: stg_264 [1/1] 0.00ns
branch52:6  br label %._crit_edge241.i.1

ST_7: stg_265 [1/1] 0.00ns
branch51:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_4, align 1

ST_7: stg_266 [1/1] 0.00ns
branch51:1  store i8 %right_border_buf_0_val_1_4_8, i8* %right_border_buf_0_val_1_4_15, align 1

ST_7: stg_267 [1/1] 0.00ns
branch51:2  store i8 %right_border_buf_0_val_1_4_20, i8* %right_border_buf_0_val_1_4_14, align 1

ST_7: stg_268 [1/1] 0.00ns
branch51:3  store i8 %right_border_buf_0_val_1_4_23, i8* %right_border_buf_0_val_1_4_13, align 1

ST_7: stg_269 [1/1] 0.00ns
branch51:4  store i8 %right_border_buf_0_val_1_4_25, i8* %right_border_buf_0_val_1_4_4, align 1

ST_7: stg_270 [1/1] 0.00ns
branch51:5  store i8 %right_border_buf_0_val_1_4_26, i8* %right_border_buf_0_val_1_4_3, align 1

ST_7: stg_271 [1/1] 0.00ns
branch51:6  br label %._crit_edge241.i.1

ST_7: stg_272 [1/1] 0.00ns
._crit_edge241.i.1.pre:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_3, align 1

ST_7: stg_273 [1/1] 0.00ns
._crit_edge241.i.1.pre:1  store i8 %right_border_buf_0_val_1_4_8, i8* %right_border_buf_0_val_1_4_15, align 1

ST_7: stg_274 [1/1] 0.00ns
._crit_edge241.i.1.pre:2  store i8 %right_border_buf_0_val_1_4_20, i8* %right_border_buf_0_val_1_4_14, align 1

ST_7: stg_275 [1/1] 0.00ns
._crit_edge241.i.1.pre:3  store i8 %right_border_buf_0_val_1_4_23, i8* %right_border_buf_0_val_1_4_13, align 1

ST_7: stg_276 [1/1] 0.00ns
._crit_edge241.i.1.pre:4  store i8 %right_border_buf_0_val_1_4_25, i8* %right_border_buf_0_val_1_4_4, align 1

ST_7: stg_277 [1/1] 0.00ns
._crit_edge241.i.1.pre:5  store i8 %right_border_buf_0_val_1_4_26, i8* %right_border_buf_0_val_1_4_3, align 1

ST_7: stg_278 [1/1] 0.00ns
._crit_edge241.i.1.pre:6  br label %._crit_edge241.i.1

ST_7: stg_279 [1/1] 0.00ns
branch54:0  store i8 %right_border_buf_0_val_2_0, i8* %right_border_buf_0_val_2_4_8, align 1

ST_7: stg_280 [1/1] 0.00ns
branch54:1  store i8 %right_border_buf_0_val_1_4_8, i8* %right_border_buf_0_val_1_4_15, align 1

ST_7: stg_281 [1/1] 0.00ns
branch54:2  store i8 %right_border_buf_0_val_1_4_20, i8* %right_border_buf_0_val_1_4_14, align 1

ST_7: stg_282 [1/1] 0.00ns
branch54:3  store i8 %right_border_buf_0_val_1_4_23, i8* %right_border_buf_0_val_1_4_13, align 1

ST_7: stg_283 [1/1] 0.00ns
branch54:4  store i8 %right_border_buf_0_val_1_4_25, i8* %right_border_buf_0_val_1_4_4, align 1

ST_7: stg_284 [1/1] 0.00ns
branch54:5  store i8 %right_border_buf_0_val_1_4_26, i8* %right_border_buf_0_val_1_4_3, align 1

ST_7: stg_285 [1/1] 0.00ns
branch54:6  br label %._crit_edge241.i.1

ST_7: stg_286 [1/1] 2.39ns
._crit_edge241.i.1.critedge.critedge:0  store i8 %right_border_buf_0_val_1_0, i8* %k_buf_0_val_4_addr, align 1

ST_7: stg_287 [1/1] 2.39ns
._crit_edge241.i.1.critedge.critedge:1  store i8 %right_border_buf_0_val_2_0, i8* %k_buf_0_val_3_addr, align 1

ST_7: stg_288 [1/1] 0.00ns
._crit_edge241.i.1.critedge.critedge:2  br label %._crit_edge241.i.1

ST_7: stg_289 [1/1] 2.39ns
._crit_edge241.i.1:0  store i8 %right_border_buf_0_val_3_0, i8* %k_buf_0_val_2_addr, align 1

ST_7: right_border_buf_0_val_3_4_s [1/1] 0.00ns
operator().exit288.i.2_ifconv:0  %right_border_buf_0_val_3_4_s = load i8* %right_border_buf_0_val_3_4_3, align 1

ST_7: right_border_buf_0_val_3_4_1 [1/1] 0.00ns
operator().exit288.i.2_ifconv:1  %right_border_buf_0_val_3_4_1 = load i8* %right_border_buf_0_val_3_4_4, align 1

ST_7: right_border_buf_0_val_3_4_2 [1/1] 0.00ns
operator().exit288.i.2_ifconv:2  %right_border_buf_0_val_3_4_2 = load i8* %right_border_buf_0_val_3_4_13, align 1

ST_7: right_border_buf_0_val_3_4_3_50 [1/1] 0.00ns
operator().exit288.i.2_ifconv:3  %right_border_buf_0_val_3_4_3_50 = load i8* %right_border_buf_0_val_3_4_14, align 1

ST_7: right_border_buf_0_val_3_4_4_51 [1/1] 0.00ns
operator().exit288.i.2_ifconv:4  %right_border_buf_0_val_3_4_4_51 = load i8* %right_border_buf_0_val_3_4_15, align 1

ST_7: sel_tmp36 [1/1] 1.62ns
operator().exit288.i.2_ifconv:7  %sel_tmp36 = icmp eq i3 %tmp_81, 3

ST_7: right_border_buf_0_val_3_4_5 [1/1] 1.37ns
operator().exit288.i.2_ifconv:8  %right_border_buf_0_val_3_4_5 = select i1 %sel_tmp36, i8 %right_border_buf_0_val_3_4_4_51, i8 %right_border_buf_0_val_3_0

ST_7: sel_tmp37 [1/1] 1.62ns
operator().exit288.i.2_ifconv:9  %sel_tmp37 = icmp eq i3 %tmp_81, 2

ST_7: right_border_buf_0_val_3_4_6 [1/1] 1.37ns
operator().exit288.i.2_ifconv:10  %right_border_buf_0_val_3_4_6 = select i1 %sel_tmp37, i8 %right_border_buf_0_val_3_4_4_51, i8 %right_border_buf_0_val_3_4_5

ST_7: sel_tmp38 [1/1] 1.62ns
operator().exit288.i.2_ifconv:11  %sel_tmp38 = icmp eq i3 %tmp_81, 1

ST_7: right_border_buf_0_val_3_4_7 [1/1] 1.37ns
operator().exit288.i.2_ifconv:12  %right_border_buf_0_val_3_4_7 = select i1 %sel_tmp38, i8 %right_border_buf_0_val_3_4_4_51, i8 %right_border_buf_0_val_3_4_6

ST_7: sel_tmp39 [1/1] 1.62ns
operator().exit288.i.2_ifconv:13  %sel_tmp39 = icmp eq i3 %tmp_81, 0

ST_7: right_border_buf_0_val_3_4_8 [1/1] 1.37ns
operator().exit288.i.2_ifconv:14  %right_border_buf_0_val_3_4_8 = select i1 %sel_tmp39, i8 %right_border_buf_0_val_3_4_4_51, i8 %right_border_buf_0_val_3_4_7

ST_7: right_border_buf_0_val_3_4_9 [1/1] 1.37ns
operator().exit288.i.2_ifconv:15  %right_border_buf_0_val_3_4_9 = select i1 %sel_tmp36, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_3_50

ST_7: right_border_buf_0_val_3_4_18 [1/1] 1.37ns
operator().exit288.i.2_ifconv:16  %right_border_buf_0_val_3_4_18 = select i1 %sel_tmp37, i8 %right_border_buf_0_val_3_4_3_50, i8 %right_border_buf_0_val_3_4_9

ST_7: right_border_buf_0_val_3_4_19 [1/1] 1.37ns
operator().exit288.i.2_ifconv:17  %right_border_buf_0_val_3_4_19 = select i1 %sel_tmp38, i8 %right_border_buf_0_val_3_4_3_50, i8 %right_border_buf_0_val_3_4_18

ST_7: right_border_buf_0_val_3_4_20 [1/1] 1.37ns
operator().exit288.i.2_ifconv:18  %right_border_buf_0_val_3_4_20 = select i1 %sel_tmp39, i8 %right_border_buf_0_val_3_4_3_50, i8 %right_border_buf_0_val_3_4_19

ST_7: right_border_buf_0_val_3_4_21 [1/1] 1.37ns
operator().exit288.i.2_ifconv:19  %right_border_buf_0_val_3_4_21 = select i1 %sel_tmp37, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_2

ST_7: right_border_buf_0_val_3_4_22 [1/1] 1.37ns
operator().exit288.i.2_ifconv:20  %right_border_buf_0_val_3_4_22 = select i1 %sel_tmp38, i8 %right_border_buf_0_val_3_4_2, i8 %right_border_buf_0_val_3_4_21

ST_7: right_border_buf_0_val_3_4_23 [1/1] 1.37ns
operator().exit288.i.2_ifconv:21  %right_border_buf_0_val_3_4_23 = select i1 %sel_tmp39, i8 %right_border_buf_0_val_3_4_2, i8 %right_border_buf_0_val_3_4_22

ST_7: right_border_buf_0_val_3_4_24 [1/1] 1.37ns
operator().exit288.i.2_ifconv:22  %right_border_buf_0_val_3_4_24 = select i1 %sel_tmp38, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_1

ST_7: right_border_buf_0_val_3_4_25 [1/1] 1.37ns
operator().exit288.i.2_ifconv:23  %right_border_buf_0_val_3_4_25 = select i1 %sel_tmp39, i8 %right_border_buf_0_val_3_4_1, i8 %right_border_buf_0_val_3_4_24

ST_7: right_border_buf_0_val_3_4_26 [1/1] 1.37ns
operator().exit288.i.2_ifconv:24  %right_border_buf_0_val_3_4_26 = select i1 %sel_tmp39, i8 %right_border_buf_0_val_3_0, i8 %right_border_buf_0_val_3_4_s

ST_7: stg_313 [1/1] 2.39ns
operator().exit288.i.2_ifconv:25  store i8 %right_border_buf_0_val_4_0, i8* %k_buf_0_val_1_addr, align 1

ST_7: stg_314 [1/1] 1.88ns
operator().exit288.i.2_ifconv:26  switch i3 %tmp_81, label %branch74 [
    i3 0, label %._crit_edge241.i.3.pre
    i3 1, label %branch71
    i3 2, label %branch72
    i3 3, label %branch73
  ]

ST_7: stg_315 [1/1] 0.00ns
branch73:0  store i8 %right_border_buf_0_val_3_4_8, i8* %right_border_buf_0_val_3_4_15, align 1

ST_7: stg_316 [1/1] 0.00ns
branch73:1  store i8 %right_border_buf_0_val_3_4_20, i8* %right_border_buf_0_val_3_4_14, align 1

ST_7: stg_317 [1/1] 0.00ns
branch73:2  store i8 %right_border_buf_0_val_3_4_23, i8* %right_border_buf_0_val_3_4_13, align 1

ST_7: stg_318 [1/1] 0.00ns
branch73:3  store i8 %right_border_buf_0_val_3_4_25, i8* %right_border_buf_0_val_3_4_4, align 1

ST_7: stg_319 [1/1] 0.00ns
branch73:4  store i8 %right_border_buf_0_val_3_4_26, i8* %right_border_buf_0_val_3_4_3, align 1

ST_7: stg_320 [1/1] 0.00ns
branch73:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_7, align 1

ST_7: stg_321 [1/1] 0.00ns
branch73:6  br label %._crit_edge241.i.3

ST_7: stg_322 [1/1] 0.00ns
branch72:0  store i8 %right_border_buf_0_val_3_4_8, i8* %right_border_buf_0_val_3_4_15, align 1

ST_7: stg_323 [1/1] 0.00ns
branch72:1  store i8 %right_border_buf_0_val_3_4_20, i8* %right_border_buf_0_val_3_4_14, align 1

ST_7: stg_324 [1/1] 0.00ns
branch72:2  store i8 %right_border_buf_0_val_3_4_23, i8* %right_border_buf_0_val_3_4_13, align 1

ST_7: stg_325 [1/1] 0.00ns
branch72:3  store i8 %right_border_buf_0_val_3_4_25, i8* %right_border_buf_0_val_3_4_4, align 1

ST_7: stg_326 [1/1] 0.00ns
branch72:4  store i8 %right_border_buf_0_val_3_4_26, i8* %right_border_buf_0_val_3_4_3, align 1

ST_7: stg_327 [1/1] 0.00ns
branch72:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_8, align 1

ST_7: stg_328 [1/1] 0.00ns
branch72:6  br label %._crit_edge241.i.3

ST_7: stg_329 [1/1] 0.00ns
branch71:0  store i8 %right_border_buf_0_val_3_4_8, i8* %right_border_buf_0_val_3_4_15, align 1

ST_7: stg_330 [1/1] 0.00ns
branch71:1  store i8 %right_border_buf_0_val_3_4_20, i8* %right_border_buf_0_val_3_4_14, align 1

ST_7: stg_331 [1/1] 0.00ns
branch71:2  store i8 %right_border_buf_0_val_3_4_23, i8* %right_border_buf_0_val_3_4_13, align 1

ST_7: stg_332 [1/1] 0.00ns
branch71:3  store i8 %right_border_buf_0_val_3_4_25, i8* %right_border_buf_0_val_3_4_4, align 1

ST_7: stg_333 [1/1] 0.00ns
branch71:4  store i8 %right_border_buf_0_val_3_4_26, i8* %right_border_buf_0_val_3_4_3, align 1

ST_7: stg_334 [1/1] 0.00ns
branch71:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_9, align 1

ST_7: stg_335 [1/1] 0.00ns
branch71:6  br label %._crit_edge241.i.3

ST_7: stg_336 [1/1] 0.00ns
._crit_edge241.i.3.pre:0  store i8 %right_border_buf_0_val_3_4_8, i8* %right_border_buf_0_val_3_4_15, align 1

ST_7: stg_337 [1/1] 0.00ns
._crit_edge241.i.3.pre:1  store i8 %right_border_buf_0_val_3_4_20, i8* %right_border_buf_0_val_3_4_14, align 1

ST_7: stg_338 [1/1] 0.00ns
._crit_edge241.i.3.pre:2  store i8 %right_border_buf_0_val_3_4_23, i8* %right_border_buf_0_val_3_4_13, align 1

ST_7: stg_339 [1/1] 0.00ns
._crit_edge241.i.3.pre:3  store i8 %right_border_buf_0_val_3_4_25, i8* %right_border_buf_0_val_3_4_4, align 1

ST_7: stg_340 [1/1] 0.00ns
._crit_edge241.i.3.pre:4  store i8 %right_border_buf_0_val_3_4_26, i8* %right_border_buf_0_val_3_4_3, align 1

ST_7: stg_341 [1/1] 0.00ns
._crit_edge241.i.3.pre:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_10, align 1

ST_7: stg_342 [1/1] 0.00ns
._crit_edge241.i.3.pre:6  br label %._crit_edge241.i.3

ST_7: stg_343 [1/1] 0.00ns
branch74:0  store i8 %right_border_buf_0_val_3_4_8, i8* %right_border_buf_0_val_3_4_15, align 1

ST_7: stg_344 [1/1] 0.00ns
branch74:1  store i8 %right_border_buf_0_val_3_4_20, i8* %right_border_buf_0_val_3_4_14, align 1

ST_7: stg_345 [1/1] 0.00ns
branch74:2  store i8 %right_border_buf_0_val_3_4_23, i8* %right_border_buf_0_val_3_4_13, align 1

ST_7: stg_346 [1/1] 0.00ns
branch74:3  store i8 %right_border_buf_0_val_3_4_25, i8* %right_border_buf_0_val_3_4_4, align 1

ST_7: stg_347 [1/1] 0.00ns
branch74:4  store i8 %right_border_buf_0_val_3_4_26, i8* %right_border_buf_0_val_3_4_3, align 1

ST_7: stg_348 [1/1] 0.00ns
branch74:5  store i8 %right_border_buf_0_val_4_0, i8* %col_buf_0_val_0_0_5, align 1

ST_7: stg_349 [1/1] 0.00ns
branch74:6  br label %._crit_edge241.i.3

ST_7: stg_350 [1/1] 2.39ns
._crit_edge241.i.3.critedge:0  store i8 %right_border_buf_0_val_4_0, i8* %k_buf_0_val_1_addr, align 1

ST_7: stg_351 [1/1] 0.00ns
._crit_edge241.i.3.critedge:1  br label %._crit_edge241.i.3

ST_7: tmp_87 [1/1] 1.70ns
._crit_edge241.i.3:0  %tmp_87 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %p_src_data_stream_V)

ST_7: stg_353 [1/1] 2.39ns
._crit_edge241.i.3:1  store i8 %tmp_87, i8* %k_buf_0_val_0_addr, align 1

ST_7: stg_354 [1/1] 0.00ns
.loopexit224.i:0  br i1 %or_cond221_i, label %.preheader_ifconv, label %._crit_edge245.i


 <State 8>: 8.67ns
ST_8: src_kernel_win_0_val_0_1_6 [1/1] 0.00ns
:1  %src_kernel_win_0_val_0_1_6 = load i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_1_1_6 [1/1] 0.00ns
:2  %src_kernel_win_0_val_1_1_6 = load i8* %src_kernel_win_0_val_1_1, align 1

ST_8: src_kernel_win_0_val_2_1_6 [1/1] 0.00ns
:3  %src_kernel_win_0_val_2_1_6 = load i8* %src_kernel_win_0_val_2_1, align 1

ST_8: src_kernel_win_0_val_4_1_13 [1/1] 0.00ns
:4  %src_kernel_win_0_val_4_1_13 = load i8* %src_kernel_win_0_val_4_1, align 1

ST_8: src_kernel_win_0_val_3_1_6 [1/1] 0.00ns
:5  %src_kernel_win_0_val_3_1_6 = load i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_360 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 12, i64 1924, i64 0)

ST_8: locy [1/1] 0.80ns
._crit_edge243.i.0:2  %locy = sub i3 %tmp_66, %tmp_76

ST_8: col_buf_0_val_0_0_load [1/1] 0.00ns
._crit_edge243.i.0:3  %col_buf_0_val_0_0_load = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp1 [1/1] 1.62ns
._crit_edge243.i.0:4  %sel_tmp1 = icmp eq i3 %tmp_66, %tmp_76

ST_8: sel_tmp2 [1/1] 1.37ns
._crit_edge243.i.0:5  %sel_tmp2 = select i1 %sel_tmp1, i8 %col_buf_0_val_0_0_load, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp3 [1/1] 1.62ns
._crit_edge243.i.0:6  %sel_tmp3 = icmp eq i3 %locy, 2

ST_8: sel_tmp5 [1/1] 1.37ns
._crit_edge243.i.0:7  %sel_tmp5 = select i1 %sel_tmp3, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp2

ST_8: sel_tmp7 [1/1] 1.62ns
._crit_edge243.i.0:8  %sel_tmp7 = icmp eq i3 %locy, 3

ST_8: sel_tmp9 [1/1] 1.37ns
._crit_edge243.i.0:9  %sel_tmp9 = select i1 %sel_tmp7, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp5

ST_8: sel_tmp10 [1/1] 1.62ns
._crit_edge243.i.0:10  %sel_tmp10 = icmp eq i3 %locy, 1

ST_8: src_kernel_win_0_val_0_0 [1/1] 1.37ns
._crit_edge243.i.0:11  %src_kernel_win_0_val_0_0 = select i1 %sel_tmp10, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp9

ST_8: locy_1_t [1/1] 0.80ns
._crit_edge243.i.0:14  %locy_1_t = sub i3 %tmp_68, %tmp_77

ST_8: col_buf_0_val_0_0_load_1 [1/1] 0.00ns
._crit_edge243.i.0:15  %col_buf_0_val_0_0_load_1 = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp11 [1/1] 1.62ns
._crit_edge243.i.0:16  %sel_tmp11 = icmp eq i3 %tmp_68, %tmp_77

ST_8: sel_tmp12 [1/1] 1.37ns
._crit_edge243.i.0:17  %sel_tmp12 = select i1 %sel_tmp11, i8 %col_buf_0_val_0_0_load_1, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp13 [1/1] 1.62ns
._crit_edge243.i.0:18  %sel_tmp13 = icmp eq i3 %locy_1_t, 2

ST_8: sel_tmp14 [1/1] 1.37ns
._crit_edge243.i.0:19  %sel_tmp14 = select i1 %sel_tmp13, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp12

ST_8: sel_tmp15 [1/1] 1.62ns
._crit_edge243.i.0:20  %sel_tmp15 = icmp eq i3 %locy_1_t, 3

ST_8: sel_tmp16 [1/1] 1.37ns
._crit_edge243.i.0:21  %sel_tmp16 = select i1 %sel_tmp15, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp14

ST_8: sel_tmp17 [1/1] 1.62ns
._crit_edge243.i.0:22  %sel_tmp17 = icmp eq i3 %locy_1_t, 1

ST_8: src_kernel_win_0_val_1_0 [1/1] 1.37ns
._crit_edge243.i.0:23  %src_kernel_win_0_val_1_0 = select i1 %sel_tmp17, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp16

ST_8: locy_2_t [1/1] 0.80ns
._crit_edge243.i.0:26  %locy_2_t = sub i3 %tmp_68, %tmp_78

ST_8: col_buf_0_val_0_0_load_2 [1/1] 0.00ns
._crit_edge243.i.0:27  %col_buf_0_val_0_0_load_2 = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp18 [1/1] 1.62ns
._crit_edge243.i.0:28  %sel_tmp18 = icmp eq i3 %tmp_68, %tmp_78

ST_8: sel_tmp19 [1/1] 1.37ns
._crit_edge243.i.0:29  %sel_tmp19 = select i1 %sel_tmp18, i8 %col_buf_0_val_0_0_load_2, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp20 [1/1] 1.62ns
._crit_edge243.i.0:30  %sel_tmp20 = icmp eq i3 %locy_2_t, 2

ST_8: sel_tmp21 [1/1] 1.37ns
._crit_edge243.i.0:31  %sel_tmp21 = select i1 %sel_tmp20, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp19

ST_8: sel_tmp22 [1/1] 1.62ns
._crit_edge243.i.0:32  %sel_tmp22 = icmp eq i3 %locy_2_t, 3

ST_8: sel_tmp23 [1/1] 1.37ns
._crit_edge243.i.0:33  %sel_tmp23 = select i1 %sel_tmp22, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp21

ST_8: sel_tmp24 [1/1] 1.62ns
._crit_edge243.i.0:34  %sel_tmp24 = icmp eq i3 %locy_2_t, 1

ST_8: src_kernel_win_0_val_2_0 [1/1] 1.37ns
._crit_edge243.i.0:35  %src_kernel_win_0_val_2_0 = select i1 %sel_tmp24, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp23

ST_8: locy_3_t [1/1] 0.80ns
._crit_edge243.i.0:38  %locy_3_t = sub i3 %tmp_68, %tmp_79

ST_8: col_buf_0_val_0_0_load_3 [1/1] 0.00ns
._crit_edge243.i.0:39  %col_buf_0_val_0_0_load_3 = load i8* %col_buf_0_val_0_0, align 1

ST_8: sel_tmp25 [1/1] 1.62ns
._crit_edge243.i.0:40  %sel_tmp25 = icmp eq i3 %tmp_68, %tmp_79

ST_8: sel_tmp26 [1/1] 1.37ns
._crit_edge243.i.0:41  %sel_tmp26 = select i1 %sel_tmp25, i8 %col_buf_0_val_0_0_load_3, i8 %src_kernel_win_0_val_4_0

ST_8: sel_tmp27 [1/1] 1.62ns
._crit_edge243.i.0:42  %sel_tmp27 = icmp eq i3 %locy_3_t, 2

ST_8: sel_tmp28 [1/1] 1.37ns
._crit_edge243.i.0:43  %sel_tmp28 = select i1 %sel_tmp27, i8 %right_border_buf_0_val_2_0, i8 %sel_tmp26

ST_8: sel_tmp29 [1/1] 1.62ns
._crit_edge243.i.0:44  %sel_tmp29 = icmp eq i3 %locy_3_t, 3

ST_8: sel_tmp30 [1/1] 1.37ns
._crit_edge243.i.0:45  %sel_tmp30 = select i1 %sel_tmp29, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp28

ST_8: sel_tmp31 [1/1] 1.62ns
._crit_edge243.i.0:46  %sel_tmp31 = icmp eq i3 %locy_3_t, 1

ST_8: src_kernel_win_0_val_3_0 [1/1] 1.37ns
._crit_edge243.i.0:47  %src_kernel_win_0_val_3_0 = select i1 %sel_tmp31, i8 %right_border_buf_0_val_3_0, i8 %sel_tmp30

ST_8: stg_401 [1/1] 1.57ns
branch23:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_402 [1/1] 2.23ns
branch23:1  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_403 [1/1] 1.57ns
branch23:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_404 [1/1] 1.57ns
branch23:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_405 [1/1] 1.57ns
branch23:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_406 [1/1] 1.57ns
branch22:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_407 [1/1] 2.23ns
branch22:1  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_408 [1/1] 1.57ns
branch22:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_409 [1/1] 1.57ns
branch22:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_410 [1/1] 1.57ns
branch22:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_411 [1/1] 1.57ns
.loopexit224.i.pre243:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_412 [1/1] 2.23ns
.loopexit224.i.pre243:1  store i8 %right_border_buf_0_val_3_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_413 [1/1] 1.57ns
.loopexit224.i.pre243:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_414 [1/1] 1.57ns
.loopexit224.i.pre243:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_415 [1/1] 1.57ns
.loopexit224.i.pre243:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_3 [1/1] 0.00ns
branch20:0  %src_kernel_win_0_val_4_1_3 = load i8* %col_buf_0_val_0_0, align 1

ST_8: stg_417 [1/1] 1.57ns
branch20:1  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_418 [1/1] 2.23ns
branch20:2  store i8 %src_kernel_win_0_val_4_1_3, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_419 [1/1] 1.57ns
branch20:3  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_420 [1/1] 1.57ns
branch20:4  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_421 [1/1] 1.57ns
branch20:5  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_422 [1/1] 1.57ns
branch24:0  store i8 %src_kernel_win_0_val_3_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_423 [1/1] 2.23ns
branch24:1  store i8 %src_kernel_win_0_val_4_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_424 [1/1] 1.57ns
branch24:2  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_425 [1/1] 1.57ns
branch24:3  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_426 [1/1] 1.57ns
branch24:4  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: col_buf_0_val_0_0_5_load [1/1] 0.00ns
.preheader.preheader.i:0  %col_buf_0_val_0_0_5_load = load i8* %col_buf_0_val_0_0_5, align 1

ST_8: col_buf_0_val_0_0_7_load [1/1] 0.00ns
.preheader.preheader.i:1  %col_buf_0_val_0_0_7_load = load i8* %col_buf_0_val_0_0_7, align 1

ST_8: col_buf_0_val_0_0_8_load [1/1] 0.00ns
.preheader.preheader.i:2  %col_buf_0_val_0_0_8_load = load i8* %col_buf_0_val_0_0_8, align 1

ST_8: col_buf_0_val_0_0_9_load [1/1] 0.00ns
.preheader.preheader.i:3  %col_buf_0_val_0_0_9_load = load i8* %col_buf_0_val_0_0_9, align 1

ST_8: col_buf_0_val_0_0_10_load [1/1] 0.00ns
.preheader.preheader.i:4  %col_buf_0_val_0_0_10_load = load i8* %col_buf_0_val_0_0_10, align 1

ST_8: right_border_buf_0_val_1_4_5_52 [1/1] 0.00ns
.preheader.preheader.i:5  %right_border_buf_0_val_1_4_5_52 = load i8* %right_border_buf_0_val_1_4_3, align 1

ST_8: right_border_buf_0_val_1_4_6_53 [1/1] 0.00ns
.preheader.preheader.i:6  %right_border_buf_0_val_1_4_6_53 = load i8* %right_border_buf_0_val_1_4_4, align 1

ST_8: right_border_buf_0_val_1_4_7_54 [1/1] 0.00ns
.preheader.preheader.i:7  %right_border_buf_0_val_1_4_7_54 = load i8* %right_border_buf_0_val_1_4_13, align 1

ST_8: right_border_buf_0_val_1_4_8_55 [1/1] 0.00ns
.preheader.preheader.i:8  %right_border_buf_0_val_1_4_8_55 = load i8* %right_border_buf_0_val_1_4_14, align 1

ST_8: right_border_buf_0_val_1_4_9_56 [1/1] 0.00ns
.preheader.preheader.i:9  %right_border_buf_0_val_1_4_9_56 = load i8* %right_border_buf_0_val_1_4_15, align 1

ST_8: right_border_buf_0_val_2_4_s [1/1] 0.00ns
.preheader.preheader.i:10  %right_border_buf_0_val_2_4_s = load i8* %right_border_buf_0_val_2_4_3, align 1

ST_8: right_border_buf_0_val_2_4_1 [1/1] 0.00ns
.preheader.preheader.i:11  %right_border_buf_0_val_2_4_1 = load i8* %right_border_buf_0_val_2_4_4, align 1

ST_8: right_border_buf_0_val_2_4_2 [1/1] 0.00ns
.preheader.preheader.i:12  %right_border_buf_0_val_2_4_2 = load i8* %right_border_buf_0_val_2_4_6, align 1

ST_8: right_border_buf_0_val_2_4_3_57 [1/1] 0.00ns
.preheader.preheader.i:13  %right_border_buf_0_val_2_4_3_57 = load i8* %right_border_buf_0_val_2_4_7, align 1

ST_8: right_border_buf_0_val_2_4_4_58 [1/1] 0.00ns
.preheader.preheader.i:14  %right_border_buf_0_val_2_4_4_58 = load i8* %right_border_buf_0_val_2_4_8, align 1

ST_8: right_border_buf_0_val_3_4_5_59 [1/1] 0.00ns
.preheader.preheader.i:15  %right_border_buf_0_val_3_4_5_59 = load i8* %right_border_buf_0_val_3_4_3, align 1

ST_8: right_border_buf_0_val_3_4_6_60 [1/1] 0.00ns
.preheader.preheader.i:16  %right_border_buf_0_val_3_4_6_60 = load i8* %right_border_buf_0_val_3_4_4, align 1

ST_8: right_border_buf_0_val_3_4_7_61 [1/1] 0.00ns
.preheader.preheader.i:17  %right_border_buf_0_val_3_4_7_61 = load i8* %right_border_buf_0_val_3_4_13, align 1

ST_8: right_border_buf_0_val_3_4_8_62 [1/1] 0.00ns
.preheader.preheader.i:18  %right_border_buf_0_val_3_4_8_62 = load i8* %right_border_buf_0_val_3_4_14, align 1

ST_8: right_border_buf_0_val_3_4_9_63 [1/1] 0.00ns
.preheader.preheader.i:19  %right_border_buf_0_val_3_4_9_63 = load i8* %right_border_buf_0_val_3_4_15, align 1

ST_8: sel_tmp [1/1] 1.62ns
.preheader.preheader.i:21  %sel_tmp = icmp eq i3 %col_assign_2, 1

ST_8: col_buf_0_val_0_0_2 [1/1] 1.37ns
.preheader.preheader.i:22  %col_buf_0_val_0_0_2 = select i1 %sel_tmp, i8 %col_buf_0_val_0_0_9_load, i8 %col_buf_0_val_0_0_5_load

ST_8: sel_tmp4 [1/1] 1.62ns
.preheader.preheader.i:23  %sel_tmp4 = icmp eq i3 %col_assign_2, 2

ST_8: col_buf_0_val_0_0_3 [1/1] 1.37ns
.preheader.preheader.i:24  %col_buf_0_val_0_0_3 = select i1 %sel_tmp4, i8 %col_buf_0_val_0_0_8_load, i8 %col_buf_0_val_0_0_2

ST_8: sel_tmp6 [1/1] 1.62ns
.preheader.preheader.i:25  %sel_tmp6 = icmp eq i3 %col_assign_2, 3

ST_8: col_buf_0_val_0_0_4 [1/1] 1.37ns
.preheader.preheader.i:26  %col_buf_0_val_0_0_4 = select i1 %sel_tmp6, i8 %col_buf_0_val_0_0_7_load, i8 %col_buf_0_val_0_0_3

ST_8: sel_tmp8 [1/1] 1.62ns
.preheader.preheader.i:27  %sel_tmp8 = icmp eq i3 %col_assign_2, 0

ST_8: col_buf_0_val_0_0_15 [1/1] 1.37ns
.preheader.preheader.i:28  %col_buf_0_val_0_0_15 = select i1 %sel_tmp8, i8 %col_buf_0_val_0_0_10_load, i8 %col_buf_0_val_0_0_4

ST_8: right_border_buf_0_val_3_4 [1/1] 1.37ns
.preheader.preheader.i:29  %right_border_buf_0_val_3_4 = select i1 %sel_tmp, i8 %right_border_buf_0_val_3_4_6_60, i8 %right_border_buf_0_val_3_4_9_63

ST_8: right_border_buf_0_val_3_4_1_64 [1/1] 1.37ns
.preheader.preheader.i:30  %right_border_buf_0_val_3_4_1_64 = select i1 %sel_tmp4, i8 %right_border_buf_0_val_3_4_7_61, i8 %right_border_buf_0_val_3_4

ST_8: right_border_buf_0_val_3_4_2_65 [1/1] 1.37ns
.preheader.preheader.i:31  %right_border_buf_0_val_3_4_2_65 = select i1 %sel_tmp6, i8 %right_border_buf_0_val_3_4_8_62, i8 %right_border_buf_0_val_3_4_1_64

ST_8: right_border_buf_0_val_3_4_27 [1/1] 1.37ns
.preheader.preheader.i:32  %right_border_buf_0_val_3_4_27 = select i1 %sel_tmp8, i8 %right_border_buf_0_val_3_4_5_59, i8 %right_border_buf_0_val_3_4_2_65

ST_8: right_border_buf_0_val_2_4 [1/1] 1.37ns
.preheader.preheader.i:33  %right_border_buf_0_val_2_4 = select i1 %sel_tmp, i8 %right_border_buf_0_val_2_4_1, i8 %right_border_buf_0_val_2_4_4_58

ST_8: right_border_buf_0_val_2_4_1_66 [1/1] 1.37ns
.preheader.preheader.i:34  %right_border_buf_0_val_2_4_1_66 = select i1 %sel_tmp4, i8 %right_border_buf_0_val_2_4_2, i8 %right_border_buf_0_val_2_4

ST_8: right_border_buf_0_val_2_4_2_67 [1/1] 1.37ns
.preheader.preheader.i:35  %right_border_buf_0_val_2_4_2_67 = select i1 %sel_tmp6, i8 %right_border_buf_0_val_2_4_3_57, i8 %right_border_buf_0_val_2_4_1_66

ST_8: right_border_buf_0_val_2_4_13 [1/1] 1.37ns
.preheader.preheader.i:36  %right_border_buf_0_val_2_4_13 = select i1 %sel_tmp8, i8 %right_border_buf_0_val_2_4_s, i8 %right_border_buf_0_val_2_4_2_67

ST_8: right_border_buf_0_val_1_4 [1/1] 1.37ns
.preheader.preheader.i:37  %right_border_buf_0_val_1_4 = select i1 %sel_tmp, i8 %right_border_buf_0_val_1_4_6_53, i8 %right_border_buf_0_val_1_4_9_56

ST_8: right_border_buf_0_val_1_4_1_68 [1/1] 1.37ns
.preheader.preheader.i:38  %right_border_buf_0_val_1_4_1_68 = select i1 %sel_tmp4, i8 %right_border_buf_0_val_1_4_7_54, i8 %right_border_buf_0_val_1_4

ST_8: right_border_buf_0_val_1_4_2_69 [1/1] 1.37ns
.preheader.preheader.i:39  %right_border_buf_0_val_1_4_2_69 = select i1 %sel_tmp6, i8 %right_border_buf_0_val_1_4_8_55, i8 %right_border_buf_0_val_1_4_1_68

ST_8: right_border_buf_0_val_1_4_27 [1/1] 1.37ns
.preheader.preheader.i:40  %right_border_buf_0_val_1_4_27 = select i1 %sel_tmp8, i8 %right_border_buf_0_val_1_4_5_52, i8 %right_border_buf_0_val_1_4_2_69

ST_8: stg_467 [1/1] 1.88ns
.preheader.preheader.i:41  switch i3 %col_assign_2, label %branch29 [
    i3 0, label %branch25
    i3 1, label %branch26
    i3 2, label %branch27
    i3 3, label %branch28
  ]

ST_8: src_kernel_win_0_val_4_1_11 [1/1] 0.00ns
branch28:0  %src_kernel_win_0_val_4_1_11 = load i8* %right_border_buf_0_val_0_3, align 1

ST_8: stg_469 [1/1] 1.57ns
branch28:1  store i8 %right_border_buf_0_val_1_4_27, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_470 [1/1] 2.23ns
branch28:2  store i8 %src_kernel_win_0_val_4_1_11, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_471 [1/1] 1.57ns
branch28:3  store i8 %right_border_buf_0_val_2_4_13, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_472 [1/1] 1.57ns
branch28:4  store i8 %right_border_buf_0_val_3_4_27, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_473 [1/1] 1.57ns
branch28:5  store i8 %col_buf_0_val_0_0_15, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_10 [1/1] 0.00ns
branch27:0  %src_kernel_win_0_val_4_1_10 = load i8* %right_border_buf_0_val_0_2, align 1

ST_8: stg_475 [1/1] 1.57ns
branch27:1  store i8 %right_border_buf_0_val_1_4_27, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_476 [1/1] 2.23ns
branch27:2  store i8 %src_kernel_win_0_val_4_1_10, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_477 [1/1] 1.57ns
branch27:3  store i8 %right_border_buf_0_val_2_4_13, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_478 [1/1] 1.57ns
branch27:4  store i8 %right_border_buf_0_val_3_4_27, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_479 [1/1] 1.57ns
branch27:5  store i8 %col_buf_0_val_0_0_15, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_9 [1/1] 0.00ns
branch26:0  %src_kernel_win_0_val_4_1_9 = load i8* %right_border_buf_0_val_0_1, align 1

ST_8: stg_481 [1/1] 1.57ns
branch26:1  store i8 %right_border_buf_0_val_1_4_27, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_482 [1/1] 2.23ns
branch26:2  store i8 %src_kernel_win_0_val_4_1_9, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_483 [1/1] 1.57ns
branch26:3  store i8 %right_border_buf_0_val_2_4_13, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_484 [1/1] 1.57ns
branch26:4  store i8 %right_border_buf_0_val_3_4_27, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_485 [1/1] 1.57ns
branch26:5  store i8 %col_buf_0_val_0_0_15, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_8 [1/1] 0.00ns
branch25:0  %src_kernel_win_0_val_4_1_8 = load i8* %right_border_buf_0_val_0_0, align 1

ST_8: stg_487 [1/1] 1.57ns
branch25:1  store i8 %right_border_buf_0_val_1_4_27, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_488 [1/1] 2.23ns
branch25:2  store i8 %src_kernel_win_0_val_4_1_8, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_489 [1/1] 1.57ns
branch25:3  store i8 %right_border_buf_0_val_2_4_13, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_490 [1/1] 1.57ns
branch25:4  store i8 %right_border_buf_0_val_3_4_27, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_491 [1/1] 1.57ns
branch25:5  store i8 %col_buf_0_val_0_0_15, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_1_7 [1/1] 0.00ns
branch29:0  %src_kernel_win_0_val_4_1_7 = load i8* %right_border_buf_0_val_0_4, align 1

ST_8: stg_493 [1/1] 1.57ns
branch29:1  store i8 %right_border_buf_0_val_1_4_27, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_494 [1/1] 2.23ns
branch29:2  store i8 %src_kernel_win_0_val_4_1_7, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_495 [1/1] 1.57ns
branch29:3  store i8 %right_border_buf_0_val_2_4_13, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_496 [1/1] 1.57ns
branch29:4  store i8 %right_border_buf_0_val_3_4_27, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_497 [1/1] 1.57ns
branch29:5  store i8 %col_buf_0_val_0_0_15, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_498 [1/1] 1.57ns
.loopexit224.i.pre:0  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_499 [1/1] 2.23ns
.loopexit224.i.pre:1  store i8 %src_kernel_win_0_val_4_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_500 [1/1] 1.57ns
.loopexit224.i.pre:2  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_501 [1/1] 1.57ns
.loopexit224.i.pre:3  store i8 %right_border_buf_0_val_3_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_502 [1/1] 1.57ns
.loopexit224.i.pre:4  store i8 %right_border_buf_0_val_4_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: stg_503 [1/1] 1.57ns
._crit_edge241.i.3:2  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_3_1, align 1

ST_8: stg_504 [1/1] 2.23ns
._crit_edge241.i.3:3  store i8 %src_kernel_win_0_val_4_0, i8* %src_kernel_win_0_val_4_1, align 1

ST_8: stg_505 [1/1] 1.57ns
._crit_edge241.i.3:4  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_8: stg_506 [1/1] 1.57ns
._crit_edge241.i.3:5  store i8 %right_border_buf_0_val_3_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_8: stg_507 [1/1] 1.57ns
._crit_edge241.i.3:6  store i8 %right_border_buf_0_val_4_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_8: src_kernel_win_0_val_4_2_lo [1/1] 0.00ns
.preheader_ifconv:17  %src_kernel_win_0_val_4_2_lo = load i8* %src_kernel_win_0_val_4_2, align 1

ST_8: src_kernel_win_0_val_4_3_lo [1/1] 0.00ns
.preheader_ifconv:18  %src_kernel_win_0_val_4_3_lo = load i8* %src_kernel_win_0_val_4_3, align 1

ST_8: OP1_V_0_1_cast [1/1] 0.00ns
.preheader_ifconv:23  %OP1_V_0_1_cast = zext i8 %src_kernel_win_0_val_4_3_lo to i17

ST_8: p_Val2_11_0_1 [1/1] 6.38ns
.preheader_ifconv:24  %p_Val2_11_0_1 = mul i17 %OP1_V_0_1_cast, 283

ST_8: src_kernel_win_0_val_4_3_1 [1/1] 0.00ns
._crit_edge245.i:8  %src_kernel_win_0_val_4_3_1 = load i8* %src_kernel_win_0_val_4_2, align 1

ST_8: src_kernel_win_0_val_4_4_1 [1/1] 0.00ns
._crit_edge245.i:9  %src_kernel_win_0_val_4_4_1 = load i8* %src_kernel_win_0_val_4_3, align 1

ST_8: stg_514 [1/1] 0.00ns
._crit_edge245.i:12  store i8 %src_kernel_win_0_val_4_3_1, i8* %src_kernel_win_0_val_4_3, align 1

ST_8: stg_515 [1/1] 0.00ns
._crit_edge245.i:13  store i8 %src_kernel_win_0_val_4_1_13, i8* %src_kernel_win_0_val_4_2, align 1


 <State 9>: 6.38ns
ST_9: src_kernel_win_0_val_0_1_lo [1/1] 0.00ns
.preheader_ifconv:0  %src_kernel_win_0_val_0_1_lo = load i8* %src_kernel_win_0_val_0_1, align 1

ST_9: src_kernel_win_0_val_1_1_lo [1/1] 0.00ns
.preheader_ifconv:4  %src_kernel_win_0_val_1_1_lo = load i8* %src_kernel_win_0_val_1_1, align 1

ST_9: src_kernel_win_0_val_1_2_lo [1/1] 0.00ns
.preheader_ifconv:5  %src_kernel_win_0_val_1_2_lo = load i8* %src_kernel_win_0_val_1_2, align 1

ST_9: src_kernel_win_0_val_1_3_lo [1/1] 0.00ns
.preheader_ifconv:6  %src_kernel_win_0_val_1_3_lo = load i8* %src_kernel_win_0_val_1_3, align 1

ST_9: src_kernel_win_0_val_1_4_lo [1/1] 0.00ns
.preheader_ifconv:7  %src_kernel_win_0_val_1_4_lo = load i8* %src_kernel_win_0_val_1_4, align 1

ST_9: src_kernel_win_0_val_2_1_lo [1/1] 0.00ns
.preheader_ifconv:8  %src_kernel_win_0_val_2_1_lo = load i8* %src_kernel_win_0_val_2_1, align 1

ST_9: src_kernel_win_0_val_4_1_lo [1/1] 0.00ns
.preheader_ifconv:12  %src_kernel_win_0_val_4_1_lo = load i8* %src_kernel_win_0_val_4_1, align 1

ST_9: src_kernel_win_0_val_3_1_lo [1/1] 0.00ns
.preheader_ifconv:13  %src_kernel_win_0_val_3_1_lo = load i8* %src_kernel_win_0_val_3_1, align 1

ST_9: src_kernel_win_0_val_4_4_lo [1/1] 0.00ns
.preheader_ifconv:19  %src_kernel_win_0_val_4_4_lo = load i8* %src_kernel_win_0_val_4_4, align 1

ST_9: OP1_V_0_cast [1/1] 0.00ns
.preheader_ifconv:20  %OP1_V_0_cast = zext i8 %src_kernel_win_0_val_4_4_lo to i16

ST_9: p_Val2_s [1/1] 3.36ns
.preheader_ifconv:21  %p_Val2_s = mul i16 %OP1_V_0_cast, 82

ST_9: tmp_496_0_cast [1/1] 0.00ns
.preheader_ifconv:22  %tmp_496_0_cast = zext i16 %p_Val2_s to i17

ST_9: p_Val2_14_0_1 [1/1] 3.02ns
.preheader_ifconv:25  %p_Val2_14_0_1 = add i17 %p_Val2_11_0_1, %tmp_496_0_cast

ST_9: p_Val2_14_0_1_cast [1/1] 0.00ns
.preheader_ifconv:26  %p_Val2_14_0_1_cast = zext i17 %p_Val2_14_0_1 to i18

ST_9: OP1_V_3_cast_cast [1/1] 0.00ns
.preheader_ifconv:74  %OP1_V_3_cast_cast = zext i8 %src_kernel_win_0_val_1_4_lo to i9

ST_9: OP1_V_3_1_cast [1/1] 0.00ns
.preheader_ifconv:75  %OP1_V_3_1_cast = zext i8 %src_kernel_win_0_val_1_3_lo to i19

ST_9: p_Val2_11_3_1 [1/1] 6.38ns
.preheader_ifconv:76  %p_Val2_11_3_1 = mul i19 %OP1_V_3_1_cast, 979

ST_9: OP1_V_3_2_cast [1/1] 0.00ns
.preheader_ifconv:77  %OP1_V_3_2_cast = zext i8 %src_kernel_win_0_val_1_2_lo to i20

ST_9: p_Val2_11_3_2 [1/1] 6.38ns
.preheader_ifconv:78  %p_Val2_11_3_2 = mul i20 %OP1_V_3_2_cast, 1480

ST_9: OP1_V_3_4_cast_cast [1/1] 0.00ns
.preheader_ifconv:82  %OP1_V_3_4_cast_cast = zext i8 %src_kernel_win_0_val_1_1_lo to i9

ST_9: p_Val2_11_3_s [1/1] 0.00ns
.preheader_ifconv:105  %p_Val2_11_3_s = add i9 %OP1_V_3_4_cast_cast, %OP1_V_3_cast_cast

ST_9: p_Val2_11_3_cast [1/1] 0.00ns
.preheader_ifconv:106  %p_Val2_11_3_cast = zext i9 %p_Val2_11_3_s to i18

ST_9: tmp28 [1/1] 6.38ns
.preheader_ifconv:107  %tmp28 = mul i18 %p_Val2_11_3_cast, 283

ST_9: src_kernel_win_0_val_1_3_1 [1/1] 0.00ns
._crit_edge245.i:2  %src_kernel_win_0_val_1_3_1 = load i8* %src_kernel_win_0_val_1_2, align 1

ST_9: src_kernel_win_0_val_1_4_1 [1/1] 0.00ns
._crit_edge245.i:3  %src_kernel_win_0_val_1_4_1 = load i8* %src_kernel_win_0_val_1_3, align 1

ST_9: stg_541 [1/1] 0.00ns
._crit_edge245.i:11  store i8 %src_kernel_win_0_val_4_4_1, i8* %src_kernel_win_0_val_4_4, align 1

ST_9: stg_542 [1/1] 0.00ns
._crit_edge245.i:20  store i8 %src_kernel_win_0_val_1_4_1, i8* %src_kernel_win_0_val_1_4, align 1

ST_9: stg_543 [1/1] 0.00ns
._crit_edge245.i:21  store i8 %src_kernel_win_0_val_1_3_1, i8* %src_kernel_win_0_val_1_3, align 1

ST_9: stg_544 [1/1] 0.00ns
._crit_edge245.i:22  store i8 %src_kernel_win_0_val_1_1_6, i8* %src_kernel_win_0_val_1_2, align 1


 <State 10>: 6.38ns
ST_10: src_kernel_win_0_val_0_2_lo [1/1] 0.00ns
.preheader_ifconv:1  %src_kernel_win_0_val_0_2_lo = load i8* %src_kernel_win_0_val_0_2, align 1

ST_10: src_kernel_win_0_val_0_3_lo [1/1] 0.00ns
.preheader_ifconv:2  %src_kernel_win_0_val_0_3_lo = load i8* %src_kernel_win_0_val_0_3, align 1

ST_10: src_kernel_win_0_val_0_4_lo [1/1] 0.00ns
.preheader_ifconv:3  %src_kernel_win_0_val_0_4_lo = load i8* %src_kernel_win_0_val_0_4, align 1

ST_10: src_kernel_win_0_val_3_2_lo [1/1] 0.00ns
.preheader_ifconv:14  %src_kernel_win_0_val_3_2_lo = load i8* %src_kernel_win_0_val_3_2, align 1

ST_10: src_kernel_win_0_val_3_3_lo [1/1] 0.00ns
.preheader_ifconv:15  %src_kernel_win_0_val_3_3_lo = load i8* %src_kernel_win_0_val_3_3, align 1

ST_10: src_kernel_win_0_val_3_4_lo [1/1] 0.00ns
.preheader_ifconv:16  %src_kernel_win_0_val_3_4_lo = load i8* %src_kernel_win_0_val_3_4, align 1

ST_10: OP1_V_0_2_cast [1/1] 0.00ns
.preheader_ifconv:27  %OP1_V_0_2_cast = zext i8 %src_kernel_win_0_val_4_2_lo to i18

ST_10: p_Val2_11_0_2 [1/1] 3.36ns
.preheader_ifconv:28  %p_Val2_11_0_2 = mul i18 %OP1_V_0_2_cast, 428

ST_10: p_Val2_14_0_2 [1/1] 3.02ns
.preheader_ifconv:29  %p_Val2_14_0_2 = add i18 %p_Val2_11_0_2, %p_Val2_14_0_1_cast

ST_10: p_Val2_14_0_2_cast [1/1] 0.00ns
.preheader_ifconv:30  %p_Val2_14_0_2_cast = zext i18 %p_Val2_14_0_2 to i19

ST_10: OP1_V_1_cast [1/1] 0.00ns
.preheader_ifconv:37  %OP1_V_1_cast = zext i8 %src_kernel_win_0_val_3_4_lo to i17

ST_10: p_Val2_11_1 [1/1] 6.38ns
.preheader_ifconv:38  %p_Val2_11_1 = mul i17 %OP1_V_1_cast, 283

ST_10: OP1_V_3_3_cast [1/1] 0.00ns
.preheader_ifconv:79  %OP1_V_3_3_cast = zext i8 %src_kernel_win_0_val_1_1_6 to i19

ST_10: p_Val2_11_3_3 [1/1] 3.36ns
.preheader_ifconv:80  %p_Val2_11_3_3 = mul i19 %OP1_V_3_3_cast, 979

ST_10: tmp_496_3_3_cast_cast [1/1] 0.00ns
.preheader_ifconv:81  %tmp_496_3_3_cast_cast = zext i19 %p_Val2_11_3_3 to i20

ST_10: OP1_V_4_cast_cast [1/1] 0.00ns
.preheader_ifconv:83  %OP1_V_4_cast_cast = zext i8 %src_kernel_win_0_val_0_4_lo to i9

ST_10: OP1_V_4_1_cast [1/1] 0.00ns
.preheader_ifconv:84  %OP1_V_4_1_cast = zext i8 %src_kernel_win_0_val_0_3_lo to i18

ST_10: p_Val2_11_4_1 [1/1] 6.38ns
.preheader_ifconv:85  %p_Val2_11_4_1 = mul i18 %OP1_V_4_1_cast, 283

ST_10: OP1_V_4_3_cast [1/1] 0.00ns
.preheader_ifconv:89  %OP1_V_4_3_cast = zext i8 %src_kernel_win_0_val_0_1_6 to i18

ST_10: p_Val2_11_4_3 [1/1] 3.36ns
.preheader_ifconv:90  %p_Val2_11_4_3 = mul i18 %OP1_V_4_3_cast, 283

ST_10: tmp_496_4_3_cast_cast [1/1] 0.00ns
.preheader_ifconv:91  %tmp_496_4_3_cast_cast = zext i18 %p_Val2_11_4_3 to i19

ST_10: OP1_V_4_4_cast_cast [1/1] 0.00ns
.preheader_ifconv:92  %OP1_V_4_4_cast_cast = zext i8 %src_kernel_win_0_val_0_1_lo to i9

ST_10: tmp22 [1/1] 3.02ns
.preheader_ifconv:96  %tmp22 = add i20 %p_Val2_11_3_2, %tmp_496_3_3_cast_cast

ST_10: tmp23 [1/1] 3.02ns
.preheader_ifconv:97  %tmp23 = add i19 %p_Val2_11_3_1, %tmp_496_4_3_cast_cast

ST_10: tmp23_cast [1/1] 0.00ns
.preheader_ifconv:98  %tmp23_cast = zext i19 %tmp23 to i20

ST_10: p_Val2_11_s [1/1] 0.00ns
.preheader_ifconv:108  %p_Val2_11_s = add i9 %OP1_V_4_cast_cast, %OP1_V_4_4_cast_cast

ST_10: p_Val2_11_cast [1/1] 0.00ns
.preheader_ifconv:109  %p_Val2_11_cast = zext i9 %p_Val2_11_s to i16

ST_10: tmp29 [1/1] 3.36ns
.preheader_ifconv:110  %tmp29 = mul i16 %p_Val2_11_cast, 82

ST_10: tmp29_cast [1/1] 0.00ns
.preheader_ifconv:111  %tmp29_cast = zext i16 %tmp29 to i18

ST_10: tmp27 [1/1] 3.02ns
.preheader_ifconv:112  %tmp27 = add i18 %tmp29_cast, %tmp28

ST_10: tmp27_cast [1/1] 0.00ns
.preheader_ifconv:113  %tmp27_cast = zext i18 %tmp27 to i19

ST_10: src_kernel_win_0_val_0_3_1 [1/1] 0.00ns
._crit_edge245.i:0  %src_kernel_win_0_val_0_3_1 = load i8* %src_kernel_win_0_val_0_2, align 1

ST_10: src_kernel_win_0_val_0_4_1 [1/1] 0.00ns
._crit_edge245.i:1  %src_kernel_win_0_val_0_4_1 = load i8* %src_kernel_win_0_val_0_3, align 1

ST_10: src_kernel_win_0_val_3_3_1 [1/1] 0.00ns
._crit_edge245.i:6  %src_kernel_win_0_val_3_3_1 = load i8* %src_kernel_win_0_val_3_2, align 1

ST_10: src_kernel_win_0_val_3_4_1 [1/1] 0.00ns
._crit_edge245.i:7  %src_kernel_win_0_val_3_4_1 = load i8* %src_kernel_win_0_val_3_3, align 1

ST_10: stg_580 [1/1] 0.00ns
._crit_edge245.i:14  store i8 %src_kernel_win_0_val_3_4_1, i8* %src_kernel_win_0_val_3_4, align 1

ST_10: stg_581 [1/1] 0.00ns
._crit_edge245.i:15  store i8 %src_kernel_win_0_val_3_3_1, i8* %src_kernel_win_0_val_3_3, align 1

ST_10: stg_582 [1/1] 0.00ns
._crit_edge245.i:16  store i8 %src_kernel_win_0_val_3_1_6, i8* %src_kernel_win_0_val_3_2, align 1

ST_10: stg_583 [1/1] 0.00ns
._crit_edge245.i:23  store i8 %src_kernel_win_0_val_0_4_1, i8* %src_kernel_win_0_val_0_4, align 1

ST_10: stg_584 [1/1] 0.00ns
._crit_edge245.i:24  store i8 %src_kernel_win_0_val_0_3_1, i8* %src_kernel_win_0_val_0_3, align 1

ST_10: stg_585 [1/1] 0.00ns
._crit_edge245.i:25  store i8 %src_kernel_win_0_val_0_1_6, i8* %src_kernel_win_0_val_0_2, align 1


 <State 11>: 6.38ns
ST_11: OP1_V_0_3_cast [1/1] 0.00ns
.preheader_ifconv:31  %OP1_V_0_3_cast = zext i8 %src_kernel_win_0_val_4_1_13 to i18

ST_11: p_Val2_11_0_3 [1/1] 3.36ns
.preheader_ifconv:32  %p_Val2_11_0_3 = mul i18 %OP1_V_0_3_cast, 283

ST_11: tmp_496_0_3_cast [1/1] 0.00ns
.preheader_ifconv:33  %tmp_496_0_3_cast = zext i18 %p_Val2_11_0_3 to i19

ST_11: OP1_V_0_4_cast [1/1] 0.00ns
.preheader_ifconv:34  %OP1_V_0_4_cast = zext i8 %src_kernel_win_0_val_4_1_lo to i16

ST_11: p_Val2_11_0_4 [1/1] 3.36ns
.preheader_ifconv:35  %p_Val2_11_0_4 = mul i16 %OP1_V_0_4_cast, 82

ST_11: tmp_496_0_4_cast_cast [1/1] 0.00ns
.preheader_ifconv:36  %tmp_496_0_4_cast_cast = zext i16 %p_Val2_11_0_4 to i17

ST_11: tmp1 [1/1] 3.02ns
.preheader_ifconv:39  %tmp1 = add i19 %p_Val2_14_0_2_cast, %tmp_496_0_3_cast

ST_11: tmp2 [1/1] 3.02ns
.preheader_ifconv:40  %tmp2 = add i17 %p_Val2_11_1, %tmp_496_0_4_cast_cast

ST_11: tmp2_cast [1/1] 0.00ns
.preheader_ifconv:41  %tmp2_cast = zext i17 %tmp2 to i19

ST_11: OP1_V_2_4_cast [1/1] 0.00ns
.preheader_ifconv:72  %OP1_V_2_4_cast = zext i8 %src_kernel_win_0_val_2_1_lo to i18

ST_11: p_Val2_11_2_4 [1/1] 3.36ns
.preheader_ifconv:73  %p_Val2_11_2_4 = mul i18 %OP1_V_2_4_cast, 428

ST_11: tmp21 [1/1] 3.02ns
.preheader_ifconv:99  %tmp21 = add i20 %tmp23_cast, %tmp22

ST_11: tmp26 [1/1] 3.02ns
.preheader_ifconv:102  %tmp26 = add i18 %p_Val2_11_4_1, %p_Val2_11_2_4

ST_11: tmp26_cast [1/1] 0.00ns
.preheader_ifconv:103  %tmp26_cast = zext i18 %tmp26 to i19


 <State 12>: 6.38ns
ST_12: p_Val2_14_1 [1/1] 3.02ns
.preheader_ifconv:42  %p_Val2_14_1 = add i19 %tmp2_cast, %tmp1

ST_12: p_Val2_14_1_cast [1/1] 0.00ns
.preheader_ifconv:43  %p_Val2_14_1_cast = zext i19 %p_Val2_14_1 to i20

ST_12: OP1_V_1_1_cast [1/1] 0.00ns
.preheader_ifconv:44  %OP1_V_1_1_cast = zext i8 %src_kernel_win_0_val_3_3_lo to i19

ST_12: p_Val2_11_1_1 [1/1] 3.36ns
.preheader_ifconv:45  %p_Val2_11_1_1 = mul i19 %OP1_V_1_1_cast, 979

ST_12: tmp_496_1_1_cast [1/1] 0.00ns
.preheader_ifconv:46  %tmp_496_1_1_cast = zext i19 %p_Val2_11_1_1 to i20

ST_12: tmp3 [1/1] 3.02ns
.preheader_ifconv:49  %tmp3 = add i20 %p_Val2_14_1_cast, %tmp_496_1_1_cast

ST_12: OP1_V_1_4_cast [1/1] 0.00ns
.preheader_ifconv:54  %OP1_V_1_4_cast = zext i8 %src_kernel_win_0_val_3_1_lo to i18

ST_12: p_Val2_11_1_4 [1/1] 6.38ns
.preheader_ifconv:55  %p_Val2_11_1_4 = mul i18 %OP1_V_1_4_cast, 283

ST_12: OP1_V_4_2_cast [1/1] 0.00ns
.preheader_ifconv:86  %OP1_V_4_2_cast = zext i8 %src_kernel_win_0_val_0_2_lo to i18

ST_12: p_Val2_11_4_2 [1/1] 3.36ns
.preheader_ifconv:87  %p_Val2_11_4_2 = mul i18 %OP1_V_4_2_cast, 428

ST_12: tmp_496_4_2_cast_cast [1/1] 0.00ns
.preheader_ifconv:88  %tmp_496_4_2_cast_cast = zext i18 %p_Val2_11_4_2 to i19

ST_12: tmp25 [1/1] 3.02ns
.preheader_ifconv:104  %tmp25 = add i19 %tmp26_cast, %tmp_496_4_2_cast_cast


 <State 13>: 6.38ns
ST_13: src_kernel_win_0_val_2_2_lo [1/1] 0.00ns
.preheader_ifconv:9  %src_kernel_win_0_val_2_2_lo = load i8* %src_kernel_win_0_val_2_2, align 1

ST_13: src_kernel_win_0_val_2_3_lo [1/1] 0.00ns
.preheader_ifconv:10  %src_kernel_win_0_val_2_3_lo = load i8* %src_kernel_win_0_val_2_3, align 1

ST_13: src_kernel_win_0_val_2_4_lo [1/1] 0.00ns
.preheader_ifconv:11  %src_kernel_win_0_val_2_4_lo = load i8* %src_kernel_win_0_val_2_4, align 1

ST_13: OP1_V_1_2_cast [1/1] 0.00ns
.preheader_ifconv:47  %OP1_V_1_2_cast = zext i8 %src_kernel_win_0_val_3_2_lo to i20

ST_13: p_Val2_11_1_2 [1/1] 3.36ns
.preheader_ifconv:48  %p_Val2_11_1_2 = mul i20 %OP1_V_1_2_cast, 1480

ST_13: p_Val2_14_1_2 [1/1] 3.02ns
.preheader_ifconv:50  %p_Val2_14_1_2 = add i20 %tmp3, %p_Val2_11_1_2

ST_13: p_Val2_14_1_2_cast [1/1] 0.00ns
.preheader_ifconv:51  %p_Val2_14_1_2_cast = zext i20 %p_Val2_14_1_2 to i21

ST_13: OP1_V_2_cast [1/1] 0.00ns
.preheader_ifconv:56  %OP1_V_2_cast = zext i8 %src_kernel_win_0_val_2_4_lo to i18

ST_13: p_Val2_11_2 [1/1] 3.36ns
.preheader_ifconv:57  %p_Val2_11_2 = mul i18 %OP1_V_2_cast, 428

ST_13: tmp6 [1/1] 3.02ns
.preheader_ifconv:62  %tmp6 = add i18 %p_Val2_11_1_4, %p_Val2_11_2

ST_13: tmp6_cast [1/1] 0.00ns
.preheader_ifconv:63  %tmp6_cast = zext i18 %tmp6 to i19

ST_13: OP1_V_2_2_cast [1/1] 0.00ns
.preheader_ifconv:68  %OP1_V_2_2_cast = zext i8 %src_kernel_win_0_val_2_2_lo to i20

ST_13: p_Val2_11_2_2 [1/1] 6.38ns
.preheader_ifconv:69  %p_Val2_11_2_2 = mul i20 %OP1_V_2_2_cast, 2237

ST_13: tmp24 [1/1] 3.02ns
.preheader_ifconv:114  %tmp24 = add i19 %tmp27_cast, %tmp25

ST_13: src_kernel_win_0_val_2_3_1 [1/1] 0.00ns
._crit_edge245.i:4  %src_kernel_win_0_val_2_3_1 = load i8* %src_kernel_win_0_val_2_2, align 1

ST_13: src_kernel_win_0_val_2_4_1 [1/1] 0.00ns
._crit_edge245.i:5  %src_kernel_win_0_val_2_4_1 = load i8* %src_kernel_win_0_val_2_3, align 1

ST_13: empty [1/1] 0.00ns
._crit_edge245.i:10  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1820, i32 %tmp_62)

ST_13: stg_629 [1/1] 0.00ns
._crit_edge245.i:17  store i8 %src_kernel_win_0_val_2_4_1, i8* %src_kernel_win_0_val_2_4, align 1

ST_13: stg_630 [1/1] 0.00ns
._crit_edge245.i:18  store i8 %src_kernel_win_0_val_2_3_1, i8* %src_kernel_win_0_val_2_3, align 1

ST_13: stg_631 [1/1] 0.00ns
._crit_edge245.i:19  store i8 %src_kernel_win_0_val_2_1_6, i8* %src_kernel_win_0_val_2_2, align 1

ST_13: stg_632 [1/1] 0.00ns
._crit_edge245.i:26  br label %2


 <State 14>: 6.38ns
ST_14: OP1_V_1_3_cast [1/1] 0.00ns
.preheader_ifconv:52  %OP1_V_1_3_cast = zext i8 %src_kernel_win_0_val_3_1_6 to i19

ST_14: p_Val2_11_1_3 [1/1] 3.36ns
.preheader_ifconv:53  %p_Val2_11_1_3 = mul i19 %OP1_V_1_3_cast, 979

ST_14: OP1_V_2_1_cast [1/1] 0.00ns
.preheader_ifconv:58  %OP1_V_2_1_cast = zext i8 %src_kernel_win_0_val_2_3_lo to i20

ST_14: p_Val2_11_2_1 [1/1] 3.36ns
.preheader_ifconv:59  %p_Val2_11_2_1 = mul i20 %OP1_V_2_1_cast, 1480

ST_14: tmp_496_2_1_cast [1/1] 0.00ns
.preheader_ifconv:60  %tmp_496_2_1_cast = zext i20 %p_Val2_11_2_1 to i21

ST_14: tmp4 [1/1] 3.02ns
.preheader_ifconv:61  %tmp4 = add i21 %p_Val2_14_1_2_cast, %tmp_496_2_1_cast

ST_14: tmp5 [1/1] 3.02ns
.preheader_ifconv:64  %tmp5 = add i19 %tmp6_cast, %p_Val2_11_1_3

ST_14: tmp5_cast [1/1] 0.00ns
.preheader_ifconv:65  %tmp5_cast = zext i19 %tmp5 to i21

ST_14: OP1_V_2_3_cast [1/1] 0.00ns
.preheader_ifconv:70  %OP1_V_2_3_cast = zext i8 %src_kernel_win_0_val_2_1_6 to i20

ST_14: p_Val2_11_2_3 [1/1] 3.36ns
.preheader_ifconv:71  %p_Val2_11_2_3 = mul i20 %OP1_V_2_3_cast, 1480

ST_14: tmp20 [1/1] 3.02ns
.preheader_ifconv:93  %tmp20 = add i20 %p_Val2_11_2_2, %p_Val2_11_2_3

ST_14: tmp20_cast [1/1] 0.00ns
.preheader_ifconv:94  %tmp20_cast = zext i20 %tmp20 to i22


 <State 15>: 6.04ns
ST_15: p_Val2_14_2_1 [1/1] 3.02ns
.preheader_ifconv:66  %p_Val2_14_2_1 = add i21 %tmp5_cast, %tmp4

ST_15: p_Val2_14_2_1_cast [1/1] 0.00ns
.preheader_ifconv:67  %p_Val2_14_2_1_cast = zext i21 %p_Val2_14_2_1 to i22

ST_15: tmp19 [1/1] 3.02ns
.preheader_ifconv:95  %tmp19 = add i22 %tmp20_cast, %p_Val2_14_2_1_cast


 <State 16>: 8.16ns
ST_16: tmp21_cast [1/1] 0.00ns
.preheader_ifconv:100  %tmp21_cast = zext i20 %tmp21 to i22

ST_16: tmp18 [1/1] 1.85ns
.preheader_ifconv:101  %tmp18 = add i22 %tmp21_cast, %tmp19

ST_16: tmp24_cast [1/1] 0.00ns
.preheader_ifconv:115  %tmp24_cast = zext i19 %tmp24 to i22

ST_16: p_Val2_4 [1/1] 1.85ns
.preheader_ifconv:116  %p_Val2_4 = add i22 %tmp24_cast, %tmp18

ST_16: p_Val2_5 [1/1] 0.00ns
.preheader_ifconv:117  %p_Val2_5 = call i8 @_ssdm_op_PartSelect.i8.i22.i32.i32(i22 %p_Val2_4, i32 14, i32 21)

ST_16: tmp_83 [1/1] 0.00ns
.preheader_ifconv:118  %tmp_83 = call i1 @_ssdm_op_BitSelect.i1.i22.i32(i22 %p_Val2_4, i32 13)

ST_16: tmp_79_i_i [1/1] 0.00ns
.preheader_ifconv:119  %tmp_79_i_i = zext i1 %tmp_83 to i8

ST_16: tmp_84 [1/1] 0.00ns
.preheader_ifconv:120  %tmp_84 = call i1 @_ssdm_op_BitSelect.i1.i22.i32(i22 %p_Val2_4, i32 21)

ST_16: p_Val2_6 [1/1] 1.72ns
.preheader_ifconv:121  %p_Val2_6 = add i8 %p_Val2_5, %tmp_79_i_i

ST_16: tmp_85 [1/1] 0.00ns
.preheader_ifconv:122  %tmp_85 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %p_Val2_6, i32 7)

ST_16: p_Result_1_i_i_not [1/1] 1.37ns
.preheader_ifconv:123  %p_Result_1_i_i_not = xor i1 %tmp_84, true

ST_16: not_carry [1/1] 1.37ns
.preheader_ifconv:124  %not_carry = or i1 %tmp_85, %p_Result_1_i_i_not

ST_16: p_Val2_s_70 [1/1] 1.37ns
.preheader_ifconv:125  %p_Val2_s_70 = select i1 %not_carry, i8 %p_Val2_6, i8 -1


 <State 17>: 1.70ns
ST_17: stg_661 [1/1] 1.70ns
.preheader_ifconv:126  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %p_dst_data_stream_V, i8 %p_Val2_s_70)

ST_17: stg_662 [1/1] 0.00ns
.preheader_ifconv:127  br label %._crit_edge245.i


 <State 18>: 0.00ns
ST_18: empty_71 [1/1] 0.00ns
:0  %empty_71 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1819, i32 %tmp)

ST_18: stg_664 [1/1] 0.00ns
:1  br label %0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
